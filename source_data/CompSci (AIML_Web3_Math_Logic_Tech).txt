#separator:tab
#html:true
#guid column:1
#notetype column:2
#deck column:3
#tags column:6
eATLwgRPX`	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	🔌Hacking Hardware	Command and Control (C2) servers - used to issue commands to hacked computers<br><br>Jump Boxes - used to make it difficult for defenders to trace the attack<br><br>Remote Attack Systems - used by a hacker to perform attacks from any location<br><br>Staging Servers - used for holding attack tools or hosting malicious payloads<br><br>Physical layers can only really make single hops; like Ethernet, they move data between two systems	dataprivacy infosec
JJyj*3:=h}	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	SSH	"the Secure Shell Protocol is a a <a href=""https://en.wikipedia.org/wiki/Cryptography"">cryptographic</a> <a href=""https://en.wikipedia.org/wiki/Network_protocol"">network protocol</a> for operating <a href=""https://en.wikipedia.org/wiki/Network_service"">network services</a> securely over an unsecured network.<sup><a href=""https://en.wikipedia.org/wiki/Secure_Shell#cite_note-rfc4251-1"">[1]</a></sup> Its most notable applications are remote <a href=""https://en.wikipedia.org/wiki/Login"">login</a> and <a href=""https://en.wikipedia.org/wiki/Command-line_interface"">command-line</a> execution.<div>SSH applications are based on a <a href=""https://en.wikipedia.org/wiki/Client%E2%80%93server_model"">client–server</a> architecture, connecting an <a href=""https://en.wikipedia.org/wiki/SSH_client"">SSH client</a> instance with an <a href=""https://en.wikipedia.org/wiki/SSH_server"">SSH server</a>.<sup><a href=""https://en.wikipedia.org/wiki/Secure_Shell#cite_note-rfc4252-2"">[2]</a></sup> SSH operates as a layered protocol suite comprising three principal hierarchical components: the <i>transport layer</i> provides server authentication, confidentiality, and integrity; the <i>user authentication protocol</i> validates the user to the server; and the <i>connection protocol</i> multiplexes the encrypted tunnel into multiple logical communication channels.<sup><a href=""https://en.wikipedia.org/wiki/Secure_Shell#cite_note-rfc4251-1"">[1]</a></sup></div>"	
xld{(ecpAZ	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Four true layers of the Internet/modern networks	"<div><br></div><div>Four layers of Internet network encapsulation/abstraction:</div><div>&nbsp; &nbsp; &nbsp; 1. Application layer -&nbsp;data; HTTP</div><div>2. Transport layer- reliability; UDP header; multiplexing<br>&nbsp;A. TCP-IP transport control protocol<br>&nbsp; &nbsp; &nbsp; &nbsp;B. UDP provides a port but little reliability<br>&nbsp; &nbsp; &nbsp; &nbsp;C. Creates ports&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp;D. Allows for multiple services &amp; multiplexing<br>&nbsp; &nbsp; &nbsp; 3. Internet - IP header &amp; data</div><div>-Provides for worldwide addresses on many different physical layers; is best-effort as all IP packets arrive in the same ""inbox"" at destination<br>&nbsp; &nbsp; &nbsp; 4. Link/physical layer (<b>Ethernet)</b> usually tied to a physical interface<br></div><div>-Moves data between systems, provides for one hop, link &amp; physical generally tied together</div><div><br></div><div><br></div>"	
pp<PWd+emQ	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Autonomous systems	Internet service providers represented as their own sovereign clouds; comcast; AT&amp;T, Verizon, centurylink	
Or5&;9Y=ud	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	🌎Geopolitical Cyber power	"<br><div>&nbsp; &nbsp; &nbsp; &nbsp;D. VI States with the ability to successfully execute full spectrum (cyber capabilities in combination with all of their military and<span style=""color: var(--field-fg); font-family: -apple-system-body; background: var(--field-bg);"">&nbsp;intelligence capabilities) operations to achieve a specific outcome in political, military, economic, etc. domains and apply at scale.&nbsp;</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp;F. V State actors who create vulnerabilities through an active program to “influence” commercial products and services during design, development or manufacturing, or with the ability to impact products while in the supply chain to enable exploitation of networks and systems of interest.</div><div>&nbsp; &nbsp; &nbsp; &nbsp;G. IV Criminal or state actors who are organized, highly technical, proficient, well funded professionals working in teams to discover new vulnerabilities and develop exploits.</div><div>&nbsp; &nbsp; &nbsp; &nbsp;H. III Practitioners who focus on the discovery and use of unknown malicious code, are adept at installing user and kernel mode root kits10, frequently use data mining tools, target corporate executives and key users (government and industry) for the purpose of stealing personal and corporate data with the expressed purpose of selling the information to other criminal elements.</div><div>&nbsp; &nbsp; &nbsp; &nbsp;I. II Practitioners with a greater depth of experience, with the ability to develop their own tools (from publically known vulnerabilities).</div><div>&nbsp; &nbsp; &nbsp; &nbsp;J. I Practitioners who rely on others to develop the malicious code, delivery mechanisms, and execution strategy (use known exploits)</div><div><br></div><div><br></div><div><br></div><div>Why countries hack each other:</div><div>● Financial gain 💰<br>○ IP, economic development, theft (e.g. DPRK, PRC)<br>● Information collection (espionage) 🕵<br>○ PRC’s &amp; RU’s hacks to get coronavirus research<br>● Covert action (influence ops, sabotage) 🐀<br>● Armed conflict 💥<br>● “Prepare the battlefield” 🧨<br>○ Gain access to system now so you can act later<br>○ NSA access in DPRK → Sony hack attribution<br>● “Hold at risk” (deterrence) 🦈<br>○ Let your hack be detected, so your target knows<br>you could damage their assets<br>○ U.S. didn’t hide incursions into RU power grid<br>3<br></div><div><br></div><div>Types of State Actors:</div><div><br></div><div><img src=""Screen Shot 2022-10-30 at 7.56.00 PM.png""></div><div>1. Super powers<div>– large, well funded professional organizations</div><div>Dash full spectrum operations including HUMINT</div><div>– advanced, self driving malware with zero – day</div><div>– careful operational security</div><div>Examples: five eyes - US, UK, AUS, CAN, NZ</div><div>Peoples Republic of China (APT 1, APT 17)</div><div>– Russian federation (APT 28, APT 29)</div><div>-Israel (unit 8200)</div><div>-France, Germany, Netherlands&nbsp;</div><div><br></div><div>2. Rapid risers</div><div>Investment &amp; foreign aid Allow them to level some playing fields</div><div>0-day, often new malware, learn quickly from superpowers</div><div>Examples:</div><div>Iranian revolutionary guard corps</div><div>North Korea (Lazarus group)</div><div>Vietnam, South Korea</div><div><br></div><div>3. Peloton</div><div>Cyber capabilities seem as part of national power</div><div>Small, skilled, dependent teams will mobilize for the right investment</div><div>India, Pakistan, Saudi Arabia, Brazil, Turkey</div><div><br></div><div>4. Ambitious buyers</div><div>Purchasing software and often operations, limited in house, likely domestic use of cyber</div><div>Mexico, Ethiopia, UAE</div></div><div><br></div><div><img src=""Screenshot 2022-12-14 at 2.18.10 PM.png""><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div>United Nations UN Charter 1945</div><div>● Art. 2(4): Don’t hit each other...<br>“All members shall refrain in their international relations from the threat or use of force against the territorial integrity or political independence of any state, or in any other manner inconsistent with the purposes of the United Nations.”<br>● Art. 51: ...but if someone hits you first, you may hit back<br>“Nothing in the present Charter shall impair the inherent right of individual or collective self-defense if an armed attack occurs against a Member of the United Nations, until the Security Council has taken measures necessary to maintain&nbsp;international peace and security. ...”<br>* (Or with authorization by UN Security Council or the consent of the other state)<br></div><div><br></div><div><br></div><div><br></div><div><br></div><div>OSS - PRC arms race</div><div><img src=""Screenshot 2022-12-14 at 1.50.57 PM.png""><br></div><div><br></div><div><br></div><div><br></div><div>What are response options after another country attacks yours?</div><div>● Pretend it didn’t happen 🙈<br>● Make some angry noises but do nothing 🤷<br>● Indict individual state-affiliated hackers ⚖<br>○ DPRK (APT-38), PRC (APT-40), RU (Sandworm)<br>● Restrict exports to foreign entities involved<br>in the hack 📦🚫<br>○ US firms can’t do business with foreign firms<br>○ Harder for foreign firms to attract investment<br>● Sanctions, e.g. Biden 2021 Russia sanctions ✂<br>○ Economic sanctions: impede economic growth<br>○ Diplomatic sanctions<br>■ Kick out individual diplomats<br>■ Close an entire embassy or consulate<br>● Cyber counterstrike 💻<br>● FIRE ZE MISSILES (“kinetic response”) 💥<br></div><div><br></div><div><br></div><div><br></div><div>CISA: domestic non-military cyber defense<br>● Cybersecurity and Infrastructure Security Agency<br>● Part of DHS - main agency in charge of civilian cybersecurity since 2018<br>● In charge of physical- &amp; cyber-security of federal networks &amp; critical infra<br>○ Protects civilian federal agencies (.gov)<br>■ E.g., ordering federal agencies to fix known, actively-exploited vulns in their systems<br>○ Helps private-sector “critical infrastructure” entities (.com) increase their security<br>■ C.I. = 16 sectors, such as communications, energy, banking, emergency services, etc.<br>■ Conducts vuln assessments, provides tools &amp; training, provides info on emerging threats<br>■ Subpoena power to warn C.I. system owners of vulnerabilities, via their ISPs<br>● Subpoenas ISP to find out who the system owner is; notifies the owner; owner fixes vuln<br></div>"	history politics technique
tNcJ[p<DNp	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Wireshark Interface	"<ul>
<li>The <strong>No.</strong>&nbsp;and <strong>Time</strong> columns show the order and relative time in which the packets were sent</li>
<li>The <strong>Source</strong> and <strong>Destination</strong> columns show the source IP address and destination IP address of each packet</li>
<li>The&nbsp;<strong>Protocol&nbsp;</strong>column shows which protocol each
 packet belongs to. You're already familiar with DNS and TCP. SMTP is an
 application layer protocol (like HTTP or HTTPS) that is a standard for 
email.&nbsp;</li>
<li>The&nbsp;<strong>Length</strong> column is the size of the packet in bytes.</li>
<li>The&nbsp;<strong>Info</strong> column does its best to show you the important information from the packet.&nbsp;</li></ul>"	
Imb(]^>c1t	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	LUNA Meltdown	"Jump Crypto was unable to put up the collateral for an enormous LUNA position on CRV, so CRV liquidated their position, requiring them to substantially reallocate funding<br><br>Arthur Hayes - why Terra Nuked<br>A Non-Deliverable Forward (NDF) is a cash-settled, usually short-term, forward contract. The notional amount is never exchanged, hence ""non-deliverable"". Two parties take opposite sides of a transaction for a set amount of money - at a contracted rate in the case of a currency NDF. It's a currency bet, but instead of exchanging home and foreign currency cash flows at the start and end of the swap, the difference between the entry and exit exchange rate is paid or received in USD.<br>-Because in the 2010s trading happened over bloomberg chat, with no consolidated spot market, they were prime ground to arbitrage different NDF trading desks.<br>##Why Terra Died<br>1. Anchor offered a 20% yield. This was done by:<br>1. Borrowers paid 10-12% APY depending on their protocol. They were incentivized with ANC as a reward for borrowing, usually around 7%.<br>2. Anchor would stake its collateral funds to receive staking awards.<br>These were not enough to shake off the incredible demand imbalance between borrowers and lenders.<br>3. Anchor also had a reserve, mostly financed by Luna Foundation LFG, which would help cover the difference between 10-12% and 20%<br>4. Ideally, ecosystem eventually grows enough to support the high APY. But Terra was burning through its reserves and running out of money<br>Terra was paying for Anchor growth directly, hooping that when the subsidies expired in 2024, there would be a vibrant savings/loans ecosystem on Anchor protocol"	blockchain
xYe!+Ib98u	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	🔨Hacking Software	<b>nmap</b><br>Free &amp; open source Utility for network discovery &amp; security auditing<div>Discover hosts and services on a computer network by sending packets and analyzing the response<br><div>Includes host discovery and service and operating system detection</div></div><div><br></div><div><b>nslookup</b><br>Network administration command line tool for querying the domain name system to obtain the mapping between the domain name and IP address, or other DNS records<br></div><div><br></div><div><b>netstat &lt;domain&gt;</b><br>Command line network utility that displays network connections for Transmission Control Protocol, routing tables, and network interface + Protocol statistics<br></div><div><br></div><div>lsof -i-sTCP:LISTEN<br>List open files; show me everything being currently accessed on the computer<div>Show me all TCP currently being accessed</div></div><div><br></div><div>dnsrecon (-r)<br>Standard tool for sniffing ip addresses from dns address (can also work in reverse)<br></div><div><br></div><div><br></div><div><br></div><div>Technological Protection Measures (TPMs)<br>● Digital Rights Management (DRM)<br>○ Region codes for DVDs<br>○ Encryption for HD DVD &amp; Blu-ray that controls playback<br>○ Copy-protection on movies &amp; games<br>● Other things beyond DRM<br>○ Chip/software authentication handshakes<br>○ “Secret handshake” authentication sequence<br>between game software &amp; the gaming server<br></div>	career cybersecurity infosec technique
o/JYt`C$A8	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	🎯Vulnerability classification	"Impact - denial of service, code execution<div>Attack surface - local, remote</div><div>“No-interaction remote code execution” is the holy grail of hacking</div><div><br></div><div><br></div><div>Impact x Attack Surface<br>● Impact<br>○ Denial of Service<br>○ Code Execution<br>● Attack Surface<br>○ Local<br>○ Remote<br>● Interaction Required?<br>“No-Interaction Remote Code<br>Execution” is often the holy grails<br></div><div><br></div><div><br></div><div>Zero-Day Exploit:<br><div>&nbsp;<a href=""https://www.trendmicro.com/vinfo/us/security/definition/vulnerability"">vulnerability&nbsp;</a>in a system or device that has been disclosed but is not yet patched. An exploit that attacks a zero-day vulnerability is called a zero-day exploit.</div><div>Because they were discovered before security researchers and software developers became aware of them—and before they can issue a patch—zero-day vulnerabilities pose a higher risk to users for the following reasons:</div><ul><li>Cybercriminals race to exploit these vulnerabilities to cash in on their schemes</li><li>Vulnerable systems are exposed until a patch is issued by the vendor.</li></ul>Zero-day vulnerabilities are typically involved in targeted attacks; however, many campaigns still use old vulnerabilities.<br></div><div><br></div><div><br></div><div>Spear Phishing - the fraudulent practice of sending emails ostensibly from a known or trusted sender in order to induce targeted individuals to reveal confidential information.</div><div><br></div><div><img src=""Screenshot 2022-12-14 at 12.52.13 PM.png""><br></div><div><br></div><div><br></div><div><img src=""Screenshot 2022-12-14 at 12.51.47 PM.png""><br>Why are Advanced Persistent Threat (APT) attacks hard<br>intruder must establish illicit long-term presence on a network to mine sensitive data<br>IP theft, trade secrets, patents, user patterns &amp; compromat, infrastructure sabotage &amp; data deletion<br>Needs pro-grade software, around-the-clock team, full understanding of internal operations, and lots of fingerprints<br><br></div>"	dataprivacy infosec
vF.CWE,Jn8	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Direct proofs: implication, universally quantified statement, consequent, antecedent	"<b>Implication: if p, then q</b><div>Consequent/“want to show” q; antecedent/“assume step”&nbsp;p</div><div>Need to state two things:</div><div>1. The antecedent is assumed</div><div>2. You are going to prove the consequent is true</div><div>3. Your actual Reasoning</div><div><font face=""-apple-system-body"">4. Demonstrate that you arrived where you intended, and end with a square symbol</font></div><div><font face=""-apple-system-body""><br></font></div><div><font face=""-apple-system-body""><b>Universally quantified statement: for all p, q</b></font></div><div><font face=""-apple-system-body"">1. Label placeholder repenting all objects of a type</font></div><div><font face=""-apple-system-body"">2. State desired consequent &amp; given antecedent</font></div><div><font face=""-apple-system-body"">3. Choose arbitrary value; Claim about variable that necessarily holds regardless of chosen value; “consider, pick, let, fix, choose”</font></div><div><font face=""-apple-system-body""><br></font></div><div><font face=""-apple-system-body""><b>Existentially quantified statements: there exists p such that q</b></font></div><div><font face=""-apple-system-body"">1. State placeholder variable representing an object of a type; claim that holds for at least one variable choice</font></div><div><font face=""-apple-system-body"">2. Proof: pick x=___. We need to show that x is p and x is q.</font></div><div><br></div><div><font face=""-apple-system-body""><b>Biconditionals: q iff p</b></font></div><div><font face=""-apple-system-body"">Alternately: if p then q, and if q then p</font></div><div><font face=""-apple-system-body"">Usually requires two proofs</font></div><div><font face=""-apple-system-body"">Functions as logical equality; the two propositions must have equal truth values</font></div><div><font face=""-apple-system-body"">How do you simplify not PFFQ?</font></div><div><font face=""-apple-system-body"">P iff not(Q or not℗ iff Q</font></div><div><font face=""-apple-system-body""><br></font></div><div><font face=""-apple-system-body"">Keywords for structure:&nbsp;</font>assume, wants to show, since, there is some, such that, from this we see that there is, therefore, which is what we wanted to show</div>"	CS103 logic
K.1gK$9lV^	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Indirect proofs: contrapositive; contradiction	<b>Contrapositive: if not q, then not p</b><div>1. announce contrapositive proofs; “ by contrapositive” “we will prove x. To do so, we will prove the contrapositive, namely…”</div><div>2. Often, contrapositive proven by direct proofs</div><div><br></div><div><b>Contradiction: to prove x, assume not x, and derive an impossible statement</b></div><div>1. “Assume for the sake of contradiction that…”; actually write the negation</div><div>2. Using the assumption, conclude something impossible (1=0; both even and odd; something is element of empty set; |S| = |P(S)| )</div><div>3. State contradiction &amp; explain why if not obvious</div><div>4. We have reached a contradiction, so our assumption must have been wrong, so…</div><div><br></div><div>If you want to prove by contradiction:</div><div>1. All P’s are Q’s</div><div>2. No P’s are Q’s</div><div>3. Some P’s are Q’s</div><div>4. Some P is not a Q</div><div>5. If P, then Q</div><div>6. P is true and Q is true</div><div>7. P, Q, or both are true</div><div><br></div><div><br></div><div>Then prove:</div><div>1. Some P is not a Q</div><div>2. Some P is a Q</div><div>3. All P’s are not Q’s</div><div>4. All P’s are Q’s</div><div>5. P is true and Q is false</div><div>6. P, Q, or both are false</div><div>7. P is false, and Q is false</div><div><br></div><div><br></div><div><br></div>	CS103 logic
Qj/TZ4RkL/	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Proof writing style	<div><b>Definitions, intuitions, and conventions</b></div><div><b><br></b></div><div><b>Clearly articulate antecedent and consequents</b></div><b>Make sentences load bearing; Every sentence must either:</b><div>1. Set up a goal</div><div>2. Introduce a new variable</div><div>3. Combine preceding results into something new</div><div><b>Scope and properly introduce variables; variables must be:</b></div><div>1. An arbitrarily chosen value, often for universally quantified statements; “pick, let , consider”…and state variable type; reader picks value</div><div>2. An existentially instantiated value; “there is some…such that…”; you pick value</div><div>3. An explicitly chosen value; nobody picks value</div><div><b>Make specific claims about specific variables and definitions</b></div><div><b>Don’t repeat definitions, use them instead</b></div><div><b>Write in complete sentences and paragraphs</b></div><div>Avoid writing sentences where the mathematical notation functions as a verb; “we can write/rewrite; we see that; there is some “</div><div><b>Distinguish between proofs and disproofs</b></div><div>A proof shows why a theorem is true; a disproof shows why a claim is false; LABEL CLAIMS AND THEOREMS AT START</div><div><b>Avoid contradiction sandwich</b></div><div>Remove all extraneous lines; don’t restate; ask yourself if you can use a direct proof</div>	CS103 logic
u1LpP[UJ3/	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Computability Theory versus complexity theory versus discrete mathematics	Computability theory-what problems can you solve with a computer<div>Complexity theory-Why are some problems harder to solve than others</div><div>Discrete mathematics-How can we be certain in our answers to these questions</div>	CS103 logic
JxM1n@<,Mz	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Cardinalities: Programs strings and problems; Cantor’s	"Cardinality of programs is less than or equal to&nbsp;<div>the cardinality of strings is less than&nbsp;</div><div>the cardinality of the power set of strings is less than or equal to&nbsp;</div><div>the cardinality of the set of problems<div>All programs are strings but not all strings are programs; therefore the cardinality of programs is less than or equal to the cardinality of strings</div></div><div><br></div><div>

Cardinality of N, the infinite set of natural numbers; also infinite set of natural even numbers: Aleph zero, aleph null<div>Two sets have the same cardinality if there is a way to Pair there elements off without leaving any elements uncovered</div>
<div>If the cardinality of a set is equal to that of its power set we can pair up the elements of us and the subsets of us without leaving anything out</div>
<div>No matter how we pair up the elements of us and the subsets of us the complement a diagonal won’t appear in the table</div>
<div>I.e. in row and the nth element must be wrong; There is always at least one subset left over</div>
<div>The result is cantor’s theorem: every set is strictly smaller than its power set i.e. If s is a set, then cardinality of us is less than the cardinality of the powers of us</div></div>"	CS103 logic
dpxy(6kCuH	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Floors and ceilings	The <b>ceiling</b> of X is the <b>smallest</b> integer <b>greater</b> than or equal to X; the floor&nbsp;of x is the largest integer less than or equal to x<div>if n is an integer, then the floor of n/2+ ceiling of n/2 = N</div><div>ceiling of N plus floor of N equals 2n</div>	CS103 logic
Q,*W[rs!oi	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Indirect proof Methods	"<div>Dash logical negation</div><div>-A proposition is a statement that is either true or false.</div><div>– The negation of proposition X is a proposition that is true whenever x is false<span style=""color: var(--field-fg); font-family: -apple-system-body; background: var(--field-bg);"">&nbsp;and false whenever x is true</span></div><div>– proof by contradiction</div><div>– logical implication</div><div>– proof by contrapositive</div>"	CS103 logic
y?kv.)Lgv`	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Latin square	An nxn grid filled with the numbers one, two,…, N such that every number appears in each row and each column exactly once<div>The main diagonal of a Latin square runs from the top left corner to the bottom right corner</div><div>A Latin square is symmetric if the numbers are symmetric across the main diagonal</div><div>Every symmetric Latin square of odd size NX and has each of the numbers one, two,…, N on its main diagonal</div>	CS103 logic
l}DS)D`+!A	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	LaTeX legend	"<div>$\$<br>\\ newline<br>\subseteq for is subset of<br>\in for is element of, \notin vice versa<br>a^b = a superscript b<br>a_b = a subscript b<br>Brackets often must be separated $\{$&nbsp; &nbsp;$\}$<br>\rightarrow etc for arrows<br>\\Rightarrow for implies equals arrow<br>Number sets: \naturals \integers \reals<br>\circ for dot product of two functions<br><br>\frac{ }{ } for vertical fraction; num denom<br><br>\begin{} possible parameters<br>Document<br>Center<br>shaded<br>text<br>itemize<br>&nbsp; &nbsp; \item<br><br>\<br><br>piecewise:<br><pre><code>\documentclass{article}
\usepackage{amsmath}

\begin{document}

\begin{equation}
  f(x)=\begin{cases}
    1, &amp; \text{if $x&lt;0$}.\\
    0, &amp; \text{otherwise}.
  \end{cases}
\end{equation}

\end{document}</code></pre></div><div><br></div><div><br></div><div><br></div><div>Text surrounded by the dollar sign becomes Math</div><div>Text surrounded by two dollar signs will be displayed on its own line and centered</div><div>Special commands start with the\character</div><div>Curly braces are used for arguments or to group things together</div><div><br></div><div>Latex has two modes:</div><div>– text mode, where characters are written out as text</div><div>– math mode which is used for equations<br></div><div>By default, everything is written in text mode</div><div>^ for superscript, _ for subscript; these only pick up one character by default</div><div><br></div><div>\Commands</div><div>Back/cup displays as the union symbol</div><div>\Displays as intersections symbol</div><div>\\Displays as\</div><div>\Triangle displays as delta</div><div>\In displays as is element of</div><div>\Not\in displays as is not a element of</div><div>\Subset EQ displays as is contained in symbol<br></div><div>\Not\subset EQ displays as is not a subset of symbol</div><div>Cardinality of us displays as absolute value</div><div>\WPS displays as power set of s</div><div><br></div><div>Simple sets</div><div>\ Empty set, \math BB {N, Z, R}</div><div>\aleph_0</div><div>\{, \}</div>"	CS103 formula logic
AP5/_d1;g	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Propositional logic	<div>Propositional logic – reasoning about Boolean values/Propositional variables/prepositional connectives/truth tables/simplifying negations</div><div>Propositional variables (usually lower case letters) are statements/logical nouns, propositional connectives are logical links between them</div><div>Symbol for and/Logical conjunction is carrot, Symbol for or/logical disjunction is V</div><div>Seven propositional connectives: &amp;, or, not, then, true, false</div><div>Not, and, or, then</div><div>Negation, conjunction, disjunction, implication (material conditional)</div><div>Inclusive or, similar to ||, C++, Java; true if at least one operand is true</div>	CS103 logic
GVK*2-k*YO	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	🔣Logic Operators	Operator Precedence: Not, and, or, then, iff<div>All operators are right associative</div><div>Not binds to whatever follows it</div><div>And &amp; or bind more tightly than then</div><div>Minor implications don’t require parentheses</div><div><br></div><div><div>Implication: Material conditional, then, arrow pointing right represents implication</div><div>Implication is false only when the antecedent is true and the consequence is false</div><div>And implication with a false antecedent is called vacuously true; an application with a true consequence is called trivially true</div><div>P —&gt; Q == !(p ^ !q) == !P v Q</div><div>!(P—&gt;Q)=(P^!Q)</div></div><div>p → q is equivalent to ¬p&nbsp;∨&nbsp;q<div><br></div><div>¬(p → q) is equivalent to&nbsp;&nbsp;p&nbsp;∧ ¬q&nbsp;&nbsp;</div></div><div><br></div><div><br></div><div><br></div><div>Set technicalities: ∈, ∉; ⊆, ⊆<br>Is an element of; is a subset of<div>If the object on the left-hand side of ⊆ isn't a subset, the statement is false<br>-If a set is an element of a set, the elements of the inner set aren't elements of the outer set<br>-An object is not equivalent to the set containing that object<br>-The empty set is a subset of every set; only an element of sets that deliberately include it</div><div><br></div><div>Power set of empty set: Set containing empty set</div></div><div><br></div><div><br></div><div>Biconditional &lt;—&gt;<br>P implies q and q implies p; p iff q; p and q must have equal truth value for the biconditional to hold<div>Negating a biconditional:</div><div>p iff !q</div><div>!p iff q</div></div><div><br></div><div><br></div><div>Inclusion/Exclusion brackets<br>Brackets include end elements - [ ] is &lt;=; &gt;=<br>Parentheses exclude end elements - () is &lt;; &gt;<div><br><div>Let a and b be real numbers where a ≤ b.<div>● The notation [a, b] denotes the set of all</div><div>real numbers between a and b, inclusive.</div><div>[a, b] = { x ∈ ℝ | a ≤ x ≤ b }</div><div>● The notation (a, b) denotes the set of all</div><div>real numbers between a and b, exclusive.</div><div>(a, b) = { x ∈ ℝ | a &lt; x &lt; b }</div></div></div></div>	CS103 logic
P-DG@F(|,8	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	First order logic	"<div>
First order logic – reasoning about the properties of multiple objects&nbsp;<br></div><div>First order logic builds on propositional logic by introducing</div><div>– predicates that describe properties of objects; Operate on objects and produce a proposition</div><div>– functions that map objects to one another; Functions operate on objects and produce an object</div><div>– quantifiers &amp; connectives that allow us to reason about multiple objects; Connectives operate on propositions and produce propositions</div><div><br></div><div>You can’t apply connectives to objects; you can’t apply functions to propositions</div><div>Also introduces backwards e&nbsp;<span style=""color: var(--field-fg); font-family: -apple-system-body; background: var(--field-bg);"">there exists symbol has a quantifier; Takes precedence just below not symbol</span></div><div><font face=""-apple-system-body"">also introduces the upside down a universal quantifier; for any choice of</font></div><div><font face=""-apple-system-body"">Ax. Ey. P(x,y) —&gt; for every x, there exists a y such that p(x, y)</font></div><div><font face=""-apple-system-body"">Using universal quantifier on empty set will vacuously hold; using existential quantifier on empty set will always be false</font></div><div><font face=""-apple-system-body"">if there is exactly one object with a certain property, there is at least one object with that property, and no others have that property</font></div>"	CS103 logic
"I&-#{)X_=b"	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Dominating set of graph G=(V,E)	Subset D of vertices V such that every vertex in V is equal to at least one member of D.	CS103 logic
k>9[@(I.59	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Independent set	Any set of non-adjacent vertices	CS103 logic
J5bxosCYYO	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	First-order translation checklist	1. Pair quantifiers with appropriate connectives<div>-for all, implication are paired; and and there exists are paired</div><div>Don’t wrap implication in the existential quantifier; don’t wrap<br><div>2. Use white space and indentation to clarify meaning, like it’s code</div><div>3. Defer quantifiers until they’re needed; quantify variables as late as possible</div><div>Whenever you want to introduce a quantifier, surround the expression you want to quantify with parentheses</div><div>4. Check the types of all terms in the formula; predicates are functions with inputs and outputs</div><div>5. Check the scoping on each variable</div></div>	CS103 logic
solWLT>o]b	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	injection, surjection, bijection	"<div>injection is at MOST one element of domain per codomain; surjection is at least one element</div><div><br></div><div>Injection;&nbsp;one to one -- Associates <b>at most</b> one element of the domain with each element of the codomain<br></div><div><div>
<div>
<div>
<div>
<div><span style=""font-weight: 700;"">∀</span><span style=""font-weight: 700; font-style: italic;"">a</span><span style=""font-weight: 700;"">1 ∈ </span><span style=""font-weight: 700; font-style: italic;"">A</span><span style=""font-weight: 700;"">. ∀</span><span style=""font-weight: 700; font-style: italic;"">a</span><span style=""font-weight: 700;"">2 ∈ </span><span style=""font-weight: 700; font-style: italic;"">A</span><span style=""font-weight: 700;"">. (</span><span style=""font-weight: 700; font-style: italic;"">a</span><span style=""font-weight: 700;"">1 ≠ </span><span style=""font-weight: 700; font-style: italic;"">a</span><span style=""font-weight: 700;"">2 → </span><span style=""font-weight: 700; font-style: italic;"">f</span><span style=""font-weight: 700;"">(</span><span style=""font-weight: 700; font-style: italic;"">a</span><span style=""font-weight: 700;"">1) ≠ </span><span style=""font-weight: 700; font-style: italic;"">f</span><span style=""font-weight: 700;"">(</span><span style=""font-weight: 700; font-style: italic;"">a</span><span style=""font-weight: 700;"">2)) ===&nbsp;</span>""If the inputs are different, the outputs are different""</div></div></div></div></div></div><div><font face=""-apple-system-body"">Prove injective: Consider any x1,x2 where f(x1)=f(x2). We will prove that x1=x2. Since f(x1)=f(x2)...</font></div><div><font face=""-apple-system-body"">prove not injective: There exist inputs such that x1=x2, but f(x1)=/=f(x2)</font></div><div><font face=""-apple-system-body"">_________________________________________________________________________<br></font><div>
<b>Surjection</b>; onto — Associates <b>at least </b>one element of the domain with each element of the codomain</div><div><span style=""font-weight: 700;"">∀</span><span style=""font-weight: 700; font-style: italic;"">a</span><span style=""font-weight: 700;"">1 ∈&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">A</span><span style=""font-weight: 700;"">. ∀</span><span style=""font-weight: 700; font-style: italic;"">a</span><span style=""font-weight: 700;"">2 ∈&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">A</span><span style=""font-weight: 700;"">. (</span><span style=""font-weight: 700; font-style: italic;"">f</span><span style=""font-weight: 700;"">(</span><span style=""font-weight: 700; font-style: italic;"">a</span><span style=""font-weight: 700;"">1) =&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">f</span><span style=""font-weight: 700;"">(</span><span style=""font-weight: 700; font-style: italic;"">a</span><span style=""font-weight: 700;"">2) →&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">a</span><span style=""font-weight: 700;"">1 =&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">a</span><span style=""font-weight: 700;"">2) ===&nbsp;</span>""if outputs are the same, inputs are the same.""&nbsp;</div><div><span style=""font-weight: 700;"">∀</span><span style=""font-weight: 700; font-style: italic;"">b&nbsp;</span><span style=""font-weight: 700;"">∈&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">B</span><span style=""font-weight: 700;"">. ∃</span><span style=""font-weight: 700; font-style: italic;"">a&nbsp;</span><span style=""font-weight: 700;"">∈&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">A</span><span style=""font-weight: 700;"">.&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">f</span><span style=""font-weight: 700;"">(</span><span style=""font-weight: 700; font-style: italic;"">a</span><span style=""font-weight: 700;"">) =&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">b === ""</span>For every output, there exists an input which produces it ""</div></div><div>Prove surjective: choose an arbitrary <span style=""font-style: italic;"">y </span>∈ R, then prove that there is some <span style=""font-style: italic;"">x </span>∈ R where <span style=""font-style: italic;"">f</span>(<span style=""font-style: italic;"">x</span>) = <span style=""font-style: italic;"">y</span>.</div><div>Prove not surjective: let n∈ R=arbitrary. Now, pick arbitrary m∈ R. We need to show that g(m)=/=n</div><div><br></div><div>——————————————————————————————-</div><div><b>Bijection:&nbsp;</b>Both injective and surjective; a way of pairing off the elements of A and B<br>Prove bijection: 1) show well-defined; 2) show f injective; 3) show f surjective<br>1) for any x in domain, f(x) in codomain<br>2) for any f(x1)=f(x2), ""by definition"" and simplification x1=x2<br>3)for any f(x) in codomain, pick arbitrary input and show an input can be chosen from domain&nbsp;<br></div>"	CS103 logic
IF?/tFJwQN	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	If S is a set, then |S| ≠ | (℘ S)|	Let S be an arbitrary set. We will prove that |S| ≠ | (℘ S)| by showing that there are no bijections from S to (℘ S). To do so, choose an arbitrary function f : S → (℘ S). We will prove that f is not surjective.<div><br><div>Starting with f, we define the set D = { x ∈ S | x ∉ f(x) }. We will show that there is no y ∈ S such that f(y) = D. To do so, we proceed by contradiction. Suppose that there is some y ∈ S such that f(y) = D. From the definition of D, we know that y ∈ D if and only if y ∉ f(y).</div><div>Since we know f(y) = D, the above statement means that y ∈ D if and only if y ∉ D. This is impossible.&nbsp;</div><div>We have reached a contradiction, so our assumption must have been wrong. Therefore, there is no y ∈ S such that f(y) = D, so f is not surjective.</div></div>	CS103 logic
P9GIvb[>(*	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	ISO 27001 - infosec standard	Information security management standards<br>can be turned into legal requirement by law or contract<br>can be turned into legal req by law or contract	
E4<eA_y3z:	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	🫂Network Protocols	"Internet Protocol, Border Gateway Protocol<br>Address Resolution Protocol (ARP):<br>procedure connecting a mutable IP (Internet Protocol) address to a fixed MAC (Media Access Control) address once a computer joins a LAN (Local Area Network)<br><br>ARP translates a 32bit IPv4 address to a 48bit MAC address<br><br>Mac address also known as Data Link Layer<br><br>Border Gateway Protocol (BGP):<br>Postal service of the internet - determines routing, data travel, movement between autonomous systems<br><br>Autonomous Systems typically belong to ISPs or tech companies, universities, agencies, institutions<br><br>each AS wishing to exchange routing infor must have a registered autonomous system number (ISN), assigned by the interne Assigned Numbers Authority (IANA)<br><br><br>Glue Protocols - DNS, ARP, DHCP<br>Domain Name Service, Address Resolution Protocol, Dynamic Host Configuration Protocol<br><br>SMTP - Simple mail transfer Protocol<br>Internet standard communication Protocol for electronic Mail transmission<div>Mail servers and other message transfer agents use SMTP to send and receive email</div><div><br></div><div>TCP - Transmission Control Protocol</div><div>-defines how to establish and maintain a network conversation for applications to exchange data<br><div>-originated in the initial network implementation in which it complemented the Internet protocol, completing the TCP/IP suite.</div></div><div><br></div><div>ICMP - Internet Control Message Protocol, network protocol used to diagnose network issues, split network response into packets</div><div><br></div><div>Payment Card Industry Data Security Standard (PCI DSS) - Anti credit card fraud<br></div><div><br></div><div><br></div><div>IpV4 vs IPV6</div><div><img src=""IPv4-vs-IPv6.png""><br></div><div><br></div><div>HTTP<br>HTTP Request Order-Of-Operations:<br><ul><li>Establish server client connection</li><li>HTTP initial request</li><li>After IP data packaged in Internet level, router sends to client</li><li>Server checks request data, in order, before sending to client:</li><li>Frame data</li><li>IP data</li><li>Port data</li><li>Then flops source &amp; destination port, source &amp; destination IP addresses switched</li><li>The router</li></ul><div><br></div><div>The main reason it's difficult to make responsive websites is that HTTP is stateless - each command is executed independently without knowledge of any other commands.</div><div>Apache HTTP Server</div><div><ul><li><div>Open-source, free web server software powering ~40% of websites</div></li><li><div>First version 1995</div></li><li><div>4 servers: file, database, mail, web</div></li><li><div>Highly customizable, module-based structure</div></li><li><div>Apache foundation banned react in 2017, although it subsequently went through a revamp and WordPress is fine with it now</div></li><ul><li><h3><span style=""font-weight: 400;"">Pros:</span></h3></li><ul><li><div>Open-source, free, even for commercial use</div></li><li><div>Reliable, stable, regularly patched, huge community, good support</div></li><li><div>Flexible, module-based, easy to configure, beginner-friendly</div></li><li><div>Cross-platform &amp; works out of box with WordPress sites, content management systems (Joomla, Drupal), web frameworks (Django, Laravel) and programming languages</div></li><li><div>Great for all web hosting, such as VPS or shared hosting</div></li></ul><li><h3><span style=""font-weight: 400;"">Cons:</span></h3></li><ul><li><div>Performance problems for traffic-heavy sites</div></li><li><div>Too many configuration options can lead to security issues</div></li></ul></ul><li>NGINX Server</li><ul><li><div>2004 launch</div></li><li><div>Created to solve&nbsp;<span style=""font-weight: 700;"">c10k problem</span>&nbsp;- a threading server can’t simultaneously manage &gt;10,000 connections</div></li><li><div>Apache uses threads, so traffic-heavy websites use NGINX</div></li><ul><li><div>NGINX handles every incoming request in a single thread</div></li><li><div>Distributes user requests among worker processes</div></li><li><div>Used for Netflix, Hulu, Pinterest, Airbnb</div></li></ul></ul><li>Apache Tomcat</li><ul><li><div>Apache is general-purpose HTTP server, Tomcat is for Java apps, not static websites</div></li><li><div>Less efficient than Apache for static pages</div></li><ul><li><div>Pre-loads java libraries, java virtual machine</div></li></ul><li><div>Less configurable compared to other web servers</div></li></ul></ul><div><br></div></div><div><div><strong>HTTP, request &amp; response</strong>&nbsp;In a GET request, the response contains an entity corresponding to the requested resource In a POST request the response contains an entity describing/contaiining the result of the action API -Request contains url, headers, body(not needed for get, needed for post), specific call &lt;URL&gt;/status</div><div><strong>anatomy of a request:</strong>&nbsp;Request type: GET, POST {baseURL} /specificRequestName /books/1 /:pathVariable/subVar books/:id?foo=bar ?key=value&amp;key=value. //query parameters</div><ul><li>Response contains packet data Status code Headers, addl info for message</li></ul><div><strong>Collections &amp; variables</strong>&nbsp;Requests must be saved to a collection in postman Can highlight url without /message, set it as a variable like baseURL, and select the scope for the variable Variables can be saved scoped to collections, and can be accessed from the three-dot dropdown on each collection</div></div><div><br></div><div><br></div><div><br></div><div><ul><li><h3><span style=""font-weight: 400;"">HyperText Transfer Protocol (HTTP)</span></h3></li><li><div><b><ul><li><h3><span style=""font-weight: 400;"">3 HTTP PARTIES:</span></h3></li><ul><li><div>User<span style=""font-weight: 400;"">: individual making request</span></div></li><ul><li><div><span style=""font-weight: 400;"">Most APIs require a key or verification for security</span></div></li></ul><li><div>Client<span style=""font-weight: 400;"">: computer sending request to server</span></div></li><ul><li><div><span style=""font-weight: 400;"">URL requests use your internet browser as client, with URL as path</span></div></li><li><div><span style=""font-weight: 400;"">Prefab HTTP clients/ private programs translate code at scale</span></div></li><ul><li><div><span style=""font-weight: 400;"">REST-Client, Postman, Paw</span></div></li><li><div><span style=""font-weight: 400;"">Can build custom URLs from existing API documentation</span></div></li></ul></ul><li><div>Server:<span style=""font-weight: 400;"">&nbsp;computer responding to request</span></div></li><ul><li><div><span style=""font-weight: 400;"">Ways to make a request on a server:</span></div></li><ul><li><div><span style=""font-weight: 400;"">HTTP/url request</span></div></li><li><div><span style=""font-weight: 400;"">Text formats: XML, JSON are main languages for accessing API data</span></div></li><li><div><span style=""font-weight: 400;"">Usually data received is in this format and must be sifted thru</span></div></li></ul></ul></ul><li><h3><span style=""font-weight: 400;"">4 HTTP METHODS:</span></h3></li><ul><li><div>GET<span style=""font-weight: 400;"">: request data from server like status or specifics</span></div></li><li><div>POST:<span style=""font-weight: 400;"">&nbsp;sends changes from client to server; adding info; making new entry</span></div></li><li><div>PUT:<span style=""font-weight: 400;"">&nbsp;revises or adds to existing information</span></div></li><li><div>DELETE<span style=""font-weight: 400;"">: deletes existing information</span></div></li></ul></ul></b></div></li><li><h3><span style=""font-weight: 400;"">Amazon Elastic Compute Cloud (EC2)</span></h3><h3><b><ul><li><div><span style=""font-weight: 400;"">Secure &amp; resizable cloud computing;</span>&nbsp;launch apps when needed, without upfront commitments</div></li><li><div><span style=""font-weight: 400;"">Used by Allergan, Airbnb, Netflix, Expedia, BP</span></div></li><li><div><span style=""font-weight: 400;"">Usable across different processors, can be optimized for:</span></div></li><ul><li><div><span style=""font-weight: 400;"">Computation</span></div></li><li><div><span style=""font-weight: 400;"">Memory - high performance databases, real time big data analytics</span></div></li><li><div><span style=""font-weight: 400;"">Acceleration</span></div></li><li><div><span style=""font-weight: 400;"">Storage - nosql</span></div></li></ul></ul></b></h3><h3><span style=""font-weight: 400;"">Amazon Simple Storage Service (S3) - Data lake management</span></h3><h3><ul><li><div><span style=""font-weight: 400;"">Object storage for writing, managing, and reading any amount of data from anywhere</span></div></li><li><div><span style=""font-weight: 400;"">Compliant with up-to-date codes of storage and security</span></div></li><li><div>Tools:<span style=""font-weight: 400;"">&nbsp;analytics, security, fixing problems, single-location storage, backup &amp; disaster recovery, archiving</span></div></li><li><div>Scale your storage resources up and down to meet fluctuating demands</div></li><ul><li><div><span style=""font-weight: 400;"">Query-in-place functionality</span></div></li><li><div>Access points<span style=""font-weight: 400;"">&nbsp;- hundreds per bucket provision data set access</span></div></li></ul><li><div><span style=""font-weight: 400;"">Used by Georgia-Pacific, Nasdaq, Sysco, Nielsen</span></div></li></ul></h3></li></ul></div></div>"	formula fullstack internet language webdev
uY{$=LMPP,	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	DMCA	"§ 1201. Circumvention of copyright <br>protection systems<br>§ 1202. Integrity of copyright management <br>information<br>§ 1203. Civil remedies<br>§ 1204. Criminal offenses and penalties<br>(first offense: up to $500K fine + 5 years in prison;<br>subsequent offense: up to $1M + 10 years)<br>§ 1205. Savings clause<br><br>Summary of §§ 1201(a)-(b)<br>30<br>● You may not circumvent technological access controls.<br>● You may not distribute tools to let other people do so.<br>● You may circumvent technological copy controls.<br>● But you may not distribute tools to let other people do so.<br><br>● Prohibitions<br>○ Acts of circumvention – § 1201(a)(1) - bans circumventing access controls on copyrighted works<br>-no descrambling scrambled work, decrypting encrypted work<br>DOES NOT PROHIBIT circumventing copy controls<br>○ Trafficking in circumvention tools – § 1201(a)(2), § 1201(b)(1)<br>which could circumvent either an access-control or copy-control tpm<br>● Permanent exemptions<br>● You may not circumvent technological access controls.<br>● You may not distribute tools to let other people do so.<br>● You may circumvent technological copy controls.<br>● But you may not distribute tools to let other people do so.<br>○ Reverse engineering for <br>interoperability – § 1201(f)<br>○ Security testing – § 1201(j)<br>● § 1201(d): Nonprofit libraries, archives, &amp; educational institutions <br>● § 1201(e): Law enforcement<br>● § 1201(f): Reverse engineering for interoperability<br>● § 1201(g): Encryption research<br>● § 1201(h): Exceptions regarding minors<br>● § 1201(i): Protection of Personally Identifying Info<br>● § 1201(j): Security testing exemption<br><br>“Technological protection measure” (TPM): <br>The thing that gets circumvented.<br>“Circumvention technology”:<br>The thing that does the circumventing.<br><br>Security Testing Exemption<br><img src=""Screen Shot 2022-10-30 at 8.37.58 PM.png""><br><br>Interoperability Exemption Defense<br><img src=""Screen Shot 2022-10-30 at 8.37.31 PM.png""><br><br><br><br>DMCA §1201 Lawsuits over years<br>● 1201(a)(1) - circumventing an access control:<br>○ Ripping Blu-rays by removing encryption (2016-19)<br>● 1201(a)(2) - tool to circumvent access control:<br>○ Hosting Blizzard gaming server emulator (2004-05)<br>● 1201(b) - tool to circumvent copy control:<br>○ Selling “mod chips” to defeat copy-protection on<br>PlayStation games (2006)<br>● All three:<br>○ Jailbreaking PS3 &amp; posting its private keys (2011)"	cybersecurity dataprivacy law
fANf*>rBtO	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	ECPA vs SCA	"● Wiretap Act = accessing contents of comms in transit<br>● SCA = accessing comms in electronic storage at a third-party facility<br>● Acquiring a comm while it’s in momentary, “transient” storage during <br>its transmission to its destination = Wiretap, not SCA<br>● Examples:<br>○ Software that secretly copies &amp; forwards emails as they’re being routed <br>through a server en route to the recipient → Wiretap<br>○ Using someone else’s login credentials to read their emails through <br>Microsoft Exchange (without their knowledge or permission) → SCA<br>● Exactly how contemporaneous the acquisition is can get complicated&nbsp;<br><br>ECPA Structure<br>Wiretap Act (Title 1) - 18 U.S.C. § 2511<br>Prohibits intentionally:<br>○ Intercepting wire/oral/electronic communications<br>○ Using a device to intercept oral communications<br>○ {Disclosure, use} of contents of wire/oral/electronic communication<br>that you (have reason to) know was illegally intercepted<br><br>""Readily accessible to general public"" Exception:<br>§ 2511(2)(g)(i):<br>OK to intercept an electronic communication that’s made through a system “that<br>is configured so that such electronic communication is readily accessible to the<br>general public”<br>→ OK, so what do those terms mean?<br>§ 2510(16): “readily accessible to the general public” defined only “with respect to<br>a radio communication”<br>§ 2510(12): “electronic communication” not limited to radio transmissions"	
u[KhqQQ=QR	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	In re Google Inc. Cookie <br>Placement Consumer Privacy <br>Litigation (3d Cir. 2015)	● Plaintiffs alleged that Google<br>○ circumvented their browsers’ cookie-blockers to set unwanted cookies<br>○ intercepted their GET requests to first-party webpages<br>○ and thereby acquired &amp; tracked the URLs they visited<br>● Holds that URLs can sometimes be “contents” of a communication<br>○ URLs can serve merely a routing function (→ not content), <br>or also convey substantive info (→ content)<br>○ Is a particular URL “content”? Depends what role the URL played in the <br>“intercepted” communication <br>● Previous example: Ninth Circuit case involving Zynga<br><br>the contentful part of the url is the query, the content specifier after the routing information<br><br>● Does it violate the Wiretap Act to intercept GET requests that contain queried URL “contents”?<br>● Third Circuit’s holding: No<br>● Party exception applies:<br>○ First-party page told browser to send GET requests directly to Google<br>○ Google was thus the “intended recipient” of those GET requests <br>● Crime/tort “exception to the exception” didn’t apply	
u4yGa:]WD<	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	<h1>Sony Pictures hack</h1>	"<div>On November 24, 2014, a <a href=""https://en.wikipedia.org/wiki/Hacker_(computer_security)"">hacker</a> group identifying itself as ""<a href=""https://en.wikipedia.org/wiki/Lazarus_Group"">Guardians of Peace</a>"" <a href=""https://en.wikipedia.org/wiki/Internet_leak"">leaked</a> a release of confidential data from the <a href=""https://en.wikipedia.org/wiki/Film_studio"">film studio</a> <a href=""https://en.wikipedia.org/wiki/Sony_Pictures"">Sony Pictures</a>
 Entertainment (SPE). The data included personal information about Sony 
Pictures employees and their families, emails between employees, 
information about executive salaries at the company, copies of 
then-unreleased Sony films, plans for future Sony films, scripts for 
certain films, and other information.<sup><a href=""https://en.wikipedia.org/wiki/Sony_Pictures_hack#cite_note-1"">[1]</a></sup> The perpetrators then employed a variant of the <a href=""https://en.wikipedia.org/wiki/Shamoon"">Shamoon</a> <a href=""https://en.wikipedia.org/wiki/Wiper_(malware)"">wiper</a> malware to erase Sony's computer infrastructure.<sup><a href=""https://en.wikipedia.org/wiki/Sony_Pictures_hack#cite_note-2"">[2]</a></sup>
</div><div>During the hack, the group demanded that Sony withdraw its then-upcoming film <i><a href=""https://en.wikipedia.org/wiki/The_Interview"">The Interview</a></i>, a comedy about a plot to assassinate <a href=""https://en.wikipedia.org/wiki/North_Korea"">North Korean</a> leader <a href=""https://en.wikipedia.org/wiki/Kim_Jong-un"">Kim Jong-un</a>, and threatened <a href=""https://en.wikipedia.org/wiki/Terrorist_attack"">terrorist attacks</a> at cinemas screening the film. After many major U.S. theater chains opted not to screen <i>The Interview</i>
 in response to these threats, Sony chose to cancel the film's formal 
premiere and mainstream release, opting to skip directly to a 
downloadable digital release followed by a limited theatrical release 
the next day.<sup><a href=""https://en.wikipedia.org/wiki/Sony_Pictures_hack#cite_note-oag1-3"">[3]</a></sup><sup><a href=""https://en.wikipedia.org/wiki/Sony_Pictures_hack#cite_note-time-4"">[4]</a></sup><sup><a href=""https://en.wikipedia.org/wiki/Sony_Pictures_hack#cite_note-5"">[5]</a></sup>
</div><div>United States intelligence officials, after evaluating the 
software, techniques, and network sources used in the hack, concluded 
that the attack was sponsored by the government of North Korea, which 
has since denied all responsibility.<sup><a href=""https://en.wikipedia.org/wiki/Sony_Pictures_hack#cite_note-nyt-linkedtokorea-6"">[6]</a></sup>
</div>
<div><div><h2></h2></div></div>"	
s<=u2$Afi_	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Lockheed Martin Cyber/Social Eng Kill Chain; Solarwinds Sunspot Example	"<img src=""Screenshot 2022-12-14 at 12.45.37 PM.png""><img src=""Screenshot 2022-12-14 at 12.45.47 PM.png""><img src=""Screenshot 2022-12-14 at 12.53.06 PM.png"">"	
"kiUqv3k#g1"	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	⚖️Cyberlaw	"<br>Laws &amp; Bodies Securing Federal Government Systems<br>• Securing federal government systems<br>○ Congress (e.g. FISMA)<br>○ Agencies (e.g. CISA’s emergency directives telling fed agencies to patch vulns)<br>○ The President (e.g. May 2021 EO on fed gov cybersecurity)<br>• Industry-specific laws and regulations - examples:<br>○ Health care: HIPAA (HHS)<br>○ Publicly-traded companies: disclosure regulations (SEC)<br>○ Financial institutions: Gramm-Leach-Bliley Act (FTC)<br>○ Consumer protection (FTC)<br>• State data security laws <br>○ E.g. MA, CA, NV, NY<br><br><br>3 main Sources of Federal &amp; State Law<br>● International: treaties &amp; executive agreements<br>○ Example: Budapest Convention on Cybercrime<br>● “Statutory law”: Legislative branch<br>○ Statutes enacted by the legislature<br>● “Administrative law”: Executive branch<br>○ Agency rules (aka regulations)<br>■ In addition to rules, look at orders in agency’s cases, other guidance docs<br>○ Executive orders (President or state governor)<br>● “Case law”: Judicial branch<br>○ Judicial opinions<br>■ Court levels: trial (lowest), appeals (intermediate), supreme (highest)<br>■ “Binding” versus “persuasive” precedent<br><br><br>Domestic law relevant to cyber conflict<br>● Courts: smaller role than other branches<br>○ Criminal: Rise in DOJ indictments of foreign gov-affiliated hackers<br>■ Mostly in absentia, so questionable if any deterrent effect<br>■ Examples: Sandworm (RU), APT-40 (PRC), APT-38 (DPRK).<br>○ Civil: Foreign govts can’t be sued in U.S. courts for hacking U.S. targets<br>■ Foreign governments are generally immune from civil lawsuits<br>● NSO Group tried to dodge WhatsApp lawsuit this way 🙄<br>■ Exception for torts (wrongful conduct) doesn’t apply<br>● Courts say tort must occur wholly in U.S. → hacks from abroad don’t qualify<br>and so foreign govt hackers can’t be sued civilly in U.S. courts<br><br>● Congress:<br>○ Powers: declare war, regulate &amp; terminate uses of force, power of the purse<br>○ U.S. Code Title 10, ch. 19: Statutory authorities for military cyber ops<br>■ SecDef may conduct military cyber activities or ops in cyberspace, including<br>clandestine ones<br>■ Requires appropriate authorization; subject to oversight by Congress<br>■ Purposes: “preparation of the environment, information operations, force<br>protection, and deterrence of hostilities, or counterterrorism operations...”<br><br>● Executive: very active in recent years in this area<br>○ NSPM-13 (2018) (classified)<br>■ Presidential directive that loosened rules for cyber operations<br>■ Military can use hacking tools w/less oversight from other agencies<br>■ Revisions by Biden admin underway<br>● DOD will reportedly retain some key broad authorities<br>● DOD will have to give WH details well in advance<br>● Dispute process for agencies e.g. State to flag ops they find concerning<br>○ EO 14024 (April 2021): Sanctions on Russia<br>■ Response to SolarWinds hack, 2020 election interference, etc.<br>■ Unsurprisingly, Russian gov-affiliated hackers are still hacking<br><br>● 2018 Presidential Finding<br>○ Like NSPM-13: easier for CIA to authorize its own ops w/o WH approval<br>○ Changes:<br>■ Easier for CIA to damage adversaries’ critical infra (e.g. cut off electricity)<br>■ Easier for CIA to carry out “hack and dump” ops<br>■ Previously off-limits targets (e.g. banks) are now in-bounds<br>■ Lower bar to carry out ops against non-gov entities (e.g. media orgs, charities,<br>religious groups) believed to be foreign intel operatives<br>○ Has been used for over a dozen cyber ops vs. PRC, RU, Iran, DPRK<br>■ Both “stuff is on fire and exploding” &amp; “hack and dump”<br><br><i><b>United States v. Riggs(1990) - don't transfer files over state borders</b></i><br>the government of the United States prosecuted Robert Riggs and&nbsp;<a href=""https://en.wikipedia.org/wiki/Craig_Neidorf"">Craig Neidorf</a>&nbsp;for obtaining unauthorized access to and subsequently disseminating a file held on&nbsp;<a href=""https://en.wikipedia.org/wiki/BellSouth"">BellSouth's</a>&nbsp;computers. The file, referred to as the E911 file, gave information regarding BellSouth's products implementing 911 emergency telephone services.<sup><a href=""https://en.wikipedia.org/wiki/United_States_v._Riggs#cite_note-acm-4"">[4]</a></sup>&nbsp;Riggs and Neidorf were both indicted in the&nbsp;<a href=""https://en.wikipedia.org/wiki/United_States_District_Court_for_the_Northern_District_of_Illinois"">District Court of the Northern District of Illinois</a>&nbsp;on numerous charges relating to the dissemination of the E911 text file. As Riggs had previously been indicted in the&nbsp;<a href=""https://en.wikipedia.org/wiki/United_States_District_Court_for_the_Northern_District_of_Georgia"">Northern District of Georgia</a>&nbsp;in relation to the same incident, his charges from Illinois were transferred to Georgia. Riggs ultimately pleaded guilty in Georgia and was sentenced to 21 months in prison and two years' supervised release.<sup><a href=""https://en.wikipedia.org/wiki/United_States_v._Riggs#cite_note-appeal_denied-3"">[3]</a></sup>&nbsp;<br><br>The Government dropped all charges against Neidorf and a mistrial was declared. Riggs' charges were transferred to Georgia as he had already been indicted there in connection with the same events. Riggs pleaded guilty in Georgia to charges of wire fraud, access code fraud and conspiracy."	cybersecurity infosec law
u/s!|`j~eh	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Sources of Law (fed/state)	● Constitution<br>● International: treaties &amp; executive agreements<br>○ Example: Budapest Convention on Cybercrime<br>● “Statutory law”: Legislative branch<br>○ Statutes enacted by the legislature<br>● “Administrative law”: Executive branch<br>○ Agency rules (aka regulations)<br>■ In addition to rules, look at orders in agency’s cases, other guidance docs<br>○ Executive orders (President or state governor)<br>● “Case law”: Judicial branch<br>○ Judicial opinions<br>■ Court levels: trial (lowest), appeals (intermediate), supreme (highest)<br>■ “Binding” versus “persuasive” precedent	
lXcSxI))$0	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	⚖️CFAA	"<div></div><div><div><div>Core text of the CFAA</div><div>Whoever, having devised or intending to devise any scheme or artifice to defraud, or for<br>obtaining money or property by means of false or fraudulent pretenses, representations, or<br>promises, transmits or causes to be transmitted by means of wire, radio, or television<br>communication in interstate or foreign commerce, any writings, signs, signals, pictures, or<br>sounds for the purpose of executing such scheme or artifice, shall be fined under this title or<br>imprisoned not more than 20 years, or both. If the violation [relates to federal<br>disaster/emergency relief], or affects a financial institution, such person shall be fined not<br>more than $1,000,000 or imprisoned not more than 30 years, or both.<br><br>(1) You have a scheme to defraud somebody, and<br>(2) you use the internet, TV, radio, or an interstate phone call in furtherance of that scheme.&nbsp;<br></div><div><br></div><div><em>Essential Elements of Wire Fraud:<br>United States v. Maxwell</em>, 920 F.2d 1028, 1035 (D.C. Cir. 1990) (""Wire fraud requires proof of (1) a scheme to defraud; and (2) the use of an interstate wire communication to further the scheme."").<br></div><div><br></div><div><br></div><div>CFAA Subsections</div><div><ul><li>○ (a) 7+ prohibitions (specifying what conduct is illegal)</li><ul><li>-------● (a)(1): Espionage — trespass + taking classified/restricted info</li><li>from fed govt computers</li><li>● (a)(2): Trespass + obtaining info from 3 sources:</li><li>&nbsp; &nbsp; ○ (A) financial/banking/credit institutions (Equifax, Capital One)</li><li>&nbsp; &nbsp; ○ (B) federal government (OPM, SolarWinds)</li><li>&nbsp; &nbsp; ○ (C) “any protected computer” (pick your fave hack)</li><li>● (a)(3): Trespass on federal govt computer systems</li><li>● (a)(4): Fraud schemes facilitated by the computer access</li><li>● (a)(5): Causing damage</li><ul><li>A. Whoever ... knowingly causes the transmission of a program, information, code, or command, and as a result of such conduct, intentionally causes damage without authorization, to a protected computer</li></ul><li>● (A) knowingly causes the transmission of a program, information, code, or command, and as a result of such conduct, intentionally causes damage without authorization, to a protected computer;</li><li>● (B) intentionally accesses a protected computer without authorization, and as a result of such conduct, recklessly causes damage; or</li><li>● (C) intentionally accesses a protected computer without authorization, and as a result of such conduct, causes damage and loss.</li><li><br></li><li>● (a)(6): Password trafficking</li><li>● (a)(7): Extortion involving a computer/data (ransomware)</li><ul><li>c. Whoever ... with intent to extort from any person any money or other thing of value, transmits in interstate or foreign commerce any communication containing any ... demand or request for money or other thing of value in relation to damage to a protected computer, where such damage was caused to facilitate the extortion</li></ul></ul><li>○ (b) Attempt and conspiracy</li><li>○ (c) Sentences for criminal violations</li><li>○ (d) Investigatory authority for Secret Service &amp; FBI</li><li>○ (e) Definitions</li><ul><li>&nbsp; &nbsp; ● (A): financial or federal government computer</li><li>● (B): computer “used in or affecting interstate</li><li>or foreign commerce or communication”</li><li>● (C): computer that “is part of a voting system”</li><li>(any internet-connected</li><li>computer)</li><li>(“air-gapped” voting machines)</li><li>the term “damage” means any impairment to the integrity or availability of data, a program, a system, or information;<br></li><li>● the term “loss” means any reasonable cost to any victim, including the cost of responding to an offense, conducting a damage assessment, and restoring the data, program, system, or information to its condition prior to the offense, and any revenue lost, cost incurred, or other consequential damages incurred because of interruption of service<br></li></ul><li>○ (f) Exemption for law enforcement &amp; intelligence activities</li><li>○ (g) Private right of action; negligence exemption</li><ul><li>■ Victims who’ve suffered “damage” or “loss” can sue attacker;</li><li>2-year statute of limitations</li><li>■ Can’t sue for negligent design or manufacture of computer</li><li>hardware/software/firmware</li></ul><li>○ (h) Reporting to Congress (now expired)</li><li>○ (i) &amp; (j) Forfeiture provisions</li></ul></div><div><br></div><div><br></div><div>Key Concepts, 18 USC S.1030</div><div>Access without authorization, exceeding authorized access<div>Eight subsections:</div><div>(a) 7 specific prohibitions</div><div>(b) attempt and conspiracy,&nbsp;</div><div>(c) sentences for criminal violations</div><div>(d) Investigatory authority for secret service &amp; fbi</div><div>(e) definitions</div><div>-""protected computer"":</div><div>1: financial/federal govt computer</div><div>2: ""used in or affecting interstate or foreign commerce or communication""</div><div>3: ""is part of a voting system""</div><div>(f) Exemption for law enforcement &amp; intelligence activities&nbsp;</div><div>(g) Private right of action; negligence exemption</div><div>-Victims can claim damage or loss and can die with two year statute of limitations</div><div>-Can’t sue for negligent design or manufacture of soft/hard/firmware</div><div>(h) Reporting to congress has now expired</div><div>(i &amp; j) Forfeiture Provisions</div><div>Damage: impairment to the integrity or availability of data, a program/system</div><div>Loss: any reasonable cost to any victim, incl cost of incident response</div><div>Offenses:&nbsp;</div><div>A1. Espionage, trespass, theft on government computers</div><div>A2. Trespass, theft from financial/governmental/“protected” institutions</div><div>A3. Trespass on federal govt computer systems</div><div>A4. Fraud schemes facilitated by computer</div><div>A5. Causing damage</div><div>1: knowingly/intentionally transmits damaging info</div><div>2: intentionally accesses w/o auth; recklessly causes damage</div><div>3: intentionally accesses a protected computer without auth, causes damage/loss</div><div>A6. Password trafficking</div><div>A7. Extortion/ransom ware</div></div><div><br></div><div><br></div><div><br></div><div><br></div><div>Examples of CFAA indictments of overseas hackers<br>17<br>● China: <br>○ Who: Members of hacking group linked to Ministry of State Security <br>○ Victims: 45+ companies in 12+ nations<br>○ What: Industrial espionage &amp; IP theft<br>● Iran: <br>○ Who: Mabna Institute, a “hackers for hire” group<br>○ Victims: 144 U.S. universities, federal agencies, 2 states, the UN<br>○ What: Stole research, IP, proprietary info, at behest of Iranian govt<br>● Russia: <br>○ Who: Organized crime<br>○ Victims: banks &amp; financial institutions such as JPMorgan<br>○ What: Stole 80 million JPM customers’ personal info<br>○ Result: Hacker extradited by Georgia; sentenced to 12 years in prison</div></div></div><div><br></div><div>gagging research:</div><div>● MIT students “gagged” from speaking at Defcon <br>security conference (MBTA v. Anderson, 2008)<br>● Social science researchers feared prosecution <br>(Sandvig v. Barr, 2018/2020)<br>● U. of Michigan student investigated by FBI (2019)<br></div><div><br></div><div><br></div><div><br></div><div><br></div><div>Businesses love using the CFAA to punish their competitors:<br>● Departing employees who start competing businesses<br>○ Civil lawsuits in 4th &amp; 6th Circuits; criminal prosecution in 9th Circuit<br>● Companies that access plaintiff’s data to build a competing product<br>○ hiQ v. LinkedIn (9th Cir. 2022):<br>■ Accessing publicly-available data isn’t a CFAA violation<br>■ But, could violate CFAA if you circumvent a technological access barrier<br>(e.g. password authentication)<br>○ Web scraping is a hot topic: legality still unsettled, so still carries legal risk<br>● But other laws provide a remedy anyway!<br>○ Intellectual property: trade secrets, ™ , ©<br>○ Breach of contract (employment agreement, TOS)<br>■ Example: Twitch’s lawsuit against users for “hate raids”<br></div><div><br></div><div><br></div><div><img src=""Screen Shot 2022-10-30 at 8.35.35 PM.png""><br></div><div><br></div><div><br></div><div><br></div><div><h1>18 U.S. Code § 1343</h1></div><div><div><div>Whoever, having devised or intending to devise any&nbsp;<a href=""https://www.law.cornell.edu/definitions/uscode.php?width=840&amp;height=800&amp;iframe=true&amp;def_id=18-USC-1034014607-980273003&amp;term_occur=999&amp;term_src=title:18:part:I:chapter:63:section:1343"">scheme or artifice to defraud</a>, or for obtaining money or property by means of false or fraudulent pretenses, representations, or promises, transmits or causes to be transmitted by means of wire, radio, or television communication in interstate or foreign commerce, any writings, signs, signals, pictures, or sounds for the purpose of executing such scheme or artifice, shall be fined under this title or imprisoned not more than 20 years, or both. If the violation occurs in relation to, or involving any benefit authorized, transported, transmitted, transferred, disbursed, or paid in connection with, a presidentially declared major disaster or emergency (as those terms are defined in section 102 of the&nbsp;<a href=""https://www.law.cornell.edu/topn/disaster_relief_act_of_1974"">Robert T. Stafford Disaster Relief and Emergency Assistance Act</a>&nbsp;(<a href=""https://www.law.cornell.edu/uscode/text/42/5122"">42 U.S.C. 5122</a>)), or affects a financial institution, such person shall be fined not more than $1,000,000 or imprisoned not more than 30 years, or both.</div><div><br></div><div><div></div><div><div><div>Let’s break down the wire fraud statute into its parts<br>21<br>18 U.S.C. § 1343 - Fraud by wire, radio, or television<br>1. Having devised or intending to devise<br>a. What? “any scheme or artifice”<br>i. For what purpose?<br>1. “to defraud, or”<br>2. “for obtaining money or property”<br>a. How? “by means of false or fraudulent pretenses, representations,<br>or promises”<br>2. Transmitting or causing to be transmitted<br>a. What? “any writings, signs, signals, pictures, or sounds”<br>b. How? “by means of wire, radio, or television communication”<br>c. Where? “in interstate or foreign commerce”<br>d. Why? “for the purpose of executing such scheme or artifice”<br>Penalty = fine, prison, or both (even higher if involves disaster relief or financial institution)</div></div></div></div></div><div>(Added July 16, 1952, ch. 879, § 18(a),&nbsp;<a href=""https://www.law.cornell.edu/rio/citation/66_Stat._722"">66 Stat. 722</a>; amended July 11, 1956, ch. 561,&nbsp;<a href=""https://www.law.cornell.edu/rio/citation/70_Stat._523"">70 Stat. 523</a>;&nbsp;<a href=""https://www.law.cornell.edu/rio/citation/Pub._L._101-73"">Pub. L. 101–73, title IX, § 961(j)</a>, Aug. 9, 1989,&nbsp;<a href=""https://www.law.cornell.edu/rio/citation/103_Stat._500"">103 Stat. 500</a>;&nbsp;<a href=""https://www.law.cornell.edu/rio/citation/Pub._L._101-647"">Pub. L. 101–647, title XXV, § 2504(i)</a>, Nov. 29, 1990,&nbsp;<a href=""https://www.law.cornell.edu/rio/citation/104_Stat._4861"">104 Stat. 4861</a>;&nbsp;<a href=""https://www.law.cornell.edu/rio/citation/Pub._L._103-322"">Pub. L. 103–322, title XXXIII, § 330016(1)(H)</a>, Sept. 13, 1994,&nbsp;<a href=""https://www.law.cornell.edu/rio/citation/108_Stat._2147"">108 Stat. 2147</a>;&nbsp;<a href=""https://www.law.cornell.edu/rio/citation/Pub._L._107-204"">Pub. L. 107–204, title IX, § 903(b)</a>, July 30, 2002,&nbsp;<a href=""https://www.law.cornell.edu/rio/citation/116_Stat._805"">116 Stat. 805</a>;&nbsp;<a href=""https://www.law.cornell.edu/rio/citation/Pub._L._110-179"">Pub. L. 110–179, § 3</a>, Jan. 7, 2008,&nbsp;<a href=""https://www.law.cornell.edu/rio/citation/121_Stat._2557"">121 Stat. 2557</a>.)</div></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div>Anticompetitive CFAA Precedent:<br>● Departing employees who start competing businesses<br>○ Civil lawsuits in 4th &amp; 6th Circuits; criminal prosecution in 9th Circuit<br>● Companies that access plaintiff’s data to build a competing product<br>○ hiQ v. LinkedIn (9th Cir. 2022):<br>■ Accessing publicly-available data isn’t a CFAA violation<br>■ But, could violate CFAA if you circumvent a technological access barrier<br>(e.g. password authentication)<br>○ Web scraping is a hot topic: legality still unsettled, so still carries legal risk<br>● But other laws provide a remedy anyway!<br>○ Intellectual property: trade secrets, ™ , ©<br>○ Breach of contract (employment agreement, TOS)<br>■ Example: Twitch’s lawsuit against users for “hate raids”<br>○ Breach of privacy (scraping people’s personal data)<br></div><div><br></div><div><br></div><div>CFAA precedent &amp; hacking history</div><div>● Prosecutors should not bring CFAA charges for<br>“good-faith security research”<br>● What’s not “good faith”? Extortion, etc.<br>● Limitations:<br>○ Just a policy, not law<br>○ No effect on civil cases or state anti-hacking laws<br>● Definition comes from 2021 rulemaking under the DMCA<br></div><div><br></div><div><br></div><div><br></div><div><br></div><div>3 Main Cyber laws under federal government:</div><div>CFAA, DMCA, ECPA<br>● Wire fraud (which you read); ID fraud, ID theft, “access device” fraud<br></div><div><br></div><div><br></div><div>First worm &amp; first CFAA Felony Conviction:<br>Morris Worm 1988<div>Spread via Internet</div><div>Grad student trying to measure size of Internet triggered a mass DoS&nbsp;</div><div>At least 100k in damage ($247k in 2020)</div><div>Led to Changes in CFAA a(5)</div><div>infected 3-10% of all internet-connected computers at the tiime</div></div><div>was an appeal of the conviction of&nbsp;<a href=""https://en.wikipedia.org/wiki/Robert_Tappan_Morris"">Robert Tappan Morris</a>&nbsp;for creating and releasing the&nbsp;<a href=""https://en.wikipedia.org/wiki/Morris_worm"">Morris worm</a>, one of the first Internet-based&nbsp;<a href=""https://en.wikipedia.org/wiki/Computer_worm"">worms</a>. This case resulted in the first conviction under the&nbsp;<a href=""https://en.wikipedia.org/wiki/Computer_Fraud_and_Abuse_Act"">Computer Fraud and Abuse Act</a>. In the process, the dispute clarified much of the language used in the law, which had been heavily revised in a number of updates passed in the years after its initial drafting. Also clarified was the concept of ""unauthorized access,"" which is central in the United States' computer security laws.<sup><a href=""https://en.wikipedia.org/wiki/United_States_v._Morris_(1991)#cite_note-usvmorris506-1"">[1]</a></sup>&nbsp;The decision was the first by a U.S. court to refer to ""the&nbsp;<a href=""https://en.wikipedia.org/wiki/Internet"">Internet</a>"",<sup><a href=""https://en.wikipedia.org/wiki/United_States_v._Morris_(1991)#cite_note-pathofinternetlaw-2"">[2]</a></sup>&nbsp;which it described simply as ""a national computer network.""<sup><a href=""https://en.wikipedia.org/wiki/United_States_v._Morris_(1991)#cite_note-usvmorris506-1"">[1]</a></sup><br></div><div><br></div><div><br></div><div>Drew, Nosal, Van Buren, TOS, CFAA<br>U.S. v. Drew (C.D. Cal. 2009)<br>○ Making a fake social media account isn’t “access<br>without authorization”<br>● U.S. v. Nosal (9th Cir. 2012) (en banc)<br>○ Violating employer’s computer-use policy isn’t<br>“exceeding authorized access”<br>● Van Buren v. United States (2021)<br>○ “Exceeds authorized access” = unlawful access<br>to info, not misuse of info you’re allowed to access<br>○ If screwing around on your work computer is a<br>CFAA violation, then we’re all criminals<br></div><div><br></div><div><div><div><div>TOS violations =/= CFAA violations &amp; Van Buren Footnote 8<br></div><div>Do TOS violations = CFAA violations? No, but...<br>21<br>● U.S. v. Drew (C.D. Cal. 2009)<br>○ Making a fake social media account isn’t “access<br>without authorization”<br>● U.S. v. Nosal (9th Cir. 2012) (en banc)<br>○ Violating employer’s computer-use policy isn’t<br>“exceeding authorized access”<br>● Van Buren v. United States (2021)<br>○ “Exceeds authorized access” = unlawful access<br>to info, not misuse of info you’re allowed to access<br>○ If screwing around on your work computer is a<br>CFAA violation, then we’re all criminals</div></div></div><div><br></div><div><br></div><div>p. 1658-59: Liability “stems from a gates-up-or-down inquiry —<br>one either can or cannot access a computer system, and one<br>either can or cannot access certain areas within the system.8”<br>Which is it? Can policy-based limits make someone’s access “without<br>authorization” – or can only code-based limits on access do that?<br><br></div><div><br></div><div>● How will courts treat footnote 8?<br>● What counts as a “gate” that is “down”?<br>● How do you know when a technological “gate” is there, it’s<br>“down,” &amp; you’re bypassing it?<br>● How do you know if you’re accessing a file or folder you’re<br>not supposed to access?<br>[8] “For present purposes, we need not address whether this<br>inquiry turns only on technological (or ‘code-based’) limitations on<br>access, or instead also looks to limits contained in contracts or<br>policies.”<br>P. 1662: “the drafting practices of private parties” can’t control<br>whether policy violations are CFAA violations based on whether<br>policy limits are “expressed as either access or use restrictions”<br></div><div><br></div><div><br></div></div>"	cybersecurity history law
"v$tu?0#wK]"	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Local User Privilege Levels	"<img src=""Screenshot 2022-12-14 at 1.31.18 PM.png""><br><br>ESCALATION OF PRIVILEGE ATTACK METHODS<br>1. Local cracking of administrator accounts<br>2. Pass the hash on administrator access<br>3. Kerberos configuration issues<br>4. Direct exploitation of insecure services<br>5. WPAD spoofing<br>... and many more<br><br>What are next steps?<br>● Pivot Externally<br>○ Use our pwned machine to scan for more EternalBlue vulnerable machines<br>● Pivot Internally<br>○ Use the pwned machine to scan our internal network, looking to hop<br>● Add our machine to a botnet<br>○ Use our machine to join in spamming, DDoS attacks, etc.<br>● Install a cryptominer<br>○ $$$"	cybersecurity dataprivacy
JR(hIaccy^	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	🗝️Cryptography	"A hash is a function that creates a “fingerprint” of an arbitrary input that is:<br>1. The same every time<br>2. Fixed length<br>3. Difficult to return to the original<br><br>ROT13<br>simple letter substitution cipher replacing each letter with its inverse, or the letter 13 places after it in the alphabet<br><br>ROT13 is its own inverse and offers no security; canonical example of weak encryption<br><br><a href=""https://en.wikipedia.org/wiki/ROT13"">https://en.wikipedia.org/wiki/ROT13</a>"	cybersecurity infosec
P[BTyz4&Ok	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	FAA702: Upstream vs. PRISM	"<img src=""Screenshot 2022-12-14 at 1.49.47 PM.png"">"	
BxsOMKLY$t	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	📑Personal OpSec	"VPN Risks:<br>1. VPN entry point is often static, <br>easy to find and block<br>2. VPN exit is static, easy to sniff<br>3. A “global adversary” can easily <br>see input to VPN, output, <br>correlate the two<br><br>Don't keep your bank passwords in your phone password manager<br>It's easier than ever to search your photo roll for PII, license, passport, social security, etc and delete it all.<br><div>You SHOULD encrypt every hard drive on devices you own; back up data</div>
<div>silo google tracking flows into a different browser than usual</div>"	career cybersecurity dataprivacy
r{3isS/hd@	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Government Hacking Toolbox	"<img src=""Screenshot 2022-12-14 at 1.58.54 PM.png"">● Tools in law enforcement’s (LE’s) investigative toolbox (easy to hard)<br>○ Traditional evidence-gathering: warrants, ECPA, etc.<br>○ Compelled technical assistance<br>○ Government hacking<br>● What’s the difference?<br>○ Traditional evidence-gathering: Evidence is readily available<br>○ Compelled T.A.: Make provider repurpose/add a feature for LE purposes<br>○ Hacking: Using a bug for LE purposes, without involving the provider<br><br><br><b>Warrants<br></b>● In federal investigations, warrant issued under Rule 41 of Federal <br>Rules of Criminal Procedure<br>● Rule 41 amended to allow remote-hacking warrants in Dec. 2016<br>● Maybe no warrant needed if LE is only collecting IP addresses?<br>○ Per 4th Amendment, warrant required if there’s a “reasonable <br>expectation of privacy” (REoP) in the data to be searched/seized<br>○ Multiple federal courts say no REoP in your IP address<br>■ But state law may differ <br>● CA: state law enforcement agencies (LEAs) need warrant for IP address"	
m4z@=3ri>@	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	📛FBI History	<div></div><div><div><div>Old School: Keystroke Loggers - U.S. v. Scarfo (D.N.J. 2001)<br>10<br>● FBI developed keystroke logger tool (whose details are classified)<br>● Warrants to search office &amp; computer, but computer file encrypted<br>● FBI got a warrant to install keystroke logger on keyboard <br>● Logger captured passphrase to encrypted file as he typed it in<br>○ Configured not to activate if modem in use (or they’d need a wiretap order)<br>● Required physical entry; today, keyloggers can be remotely installed</div></div></div><div><br></div><div>OS: CIPAV</div><div>● CIPAV = “Computer and Internet Protocol Address Verifier”<br>● Developed by FBI, used at least 2004-2007<br>● CIPAV warrants for targets using anonymizing services to hide their <br>true identity &amp; location<br>● Deployed by sending phishing messages to specific targets<br>● Collected true IP address, MAC address, logged-in user name, last <br>URL visited, other (non-content) info<br>● Transmitted that data back to FBI via internet<br></div><div><br></div><div>------------------------------------------------</div><div><br></div><div><b>More Recent:&nbsp;</b></div><div>Digital Forensics Tools to Access Devices<br></div><div>● LE has the device, has a warrant to search it, needs a tool to get into it<br>● Federal government<br>○ FBI has an in-house hacking R&amp;D unit (“OTD”) to develop its own tools<br>○ Partnerships with state/local LEAs, e.g. fed gov regional forensics labs<br>● Third-party vendors of “device forensics” tools<br>○ E.g. Cellebrite (Israel), Grayshift (U.S.)<br>○ Customers: Federal, state, &amp; local LE agencies; military; foreign govts<br>○ Used by 2,000+ LE agencies in all 50 states<br>○ Used in cases of minor crimes (e.g. graffiti) as well as serious crimes<br>● Perennial cat-and-mouse game with Apple/Google/etc.<br></div><div><br></div><div><b>Secure Phone Services</b><br></div><div>● “Secure phone” companies sell to the paranoid... and to criminals<br>○ Some are legit; some get corrupted; some are run by &amp; for criminals<br>● EncroChat: secure phone favored by EU drug rings/org crime<br>○ 3-year-long French/Dutch operation → 800+ arrests in 5+ countries <br>■ French LE seized server in France using French surveillance law<br>■ LE deployed malicious update to all phones - then they could:<br>● Determine users’ location by IDing nearby Wi-Fi hotspots<br>● Record users’ lockscreen passcode<br>● Read 100MM+ messages sent over the network (“man in the middle”)<br>○ Court challenges in 5 countries to mass hacking operation’s legality<b><br></b></div><div><br></div><div><b>In one case the US launched its own Secure Phone Service: Anom</b><br></div><div>● “Operation Trojan Shield,” 2018-2021 (US, Australia, &amp; ???)<br>● Brainchild of ex-secure phone salesman, for LE to sell to criminals<br>○ Attached an extra encryption “master key” to every message sent → <br>police could decrypt &amp; store all messages<br>○ ~12K devices in 90 countries, &gt;20MM messages intercepted<br>● Was this actually legal?<br>○ Probable cause? US &amp; Australian LE claimed 100% criminal usage<br>○ Legal gymnastics: Australia monitored US persons, FBI monitored non-US<br>○ Unnamed third country copied Anom server there (under its law) &amp; <br>periodically sent copies to FBI<b><br></b></div><div><br></div><div><br></div><div><br></div><div>TOR vs FBI<br>1. FBI gets seizure warrant for server<br>2. Seizes server hosting Tor Hidden Service<br>3. Conducts a “watering hole” attack<br>a. Adds code to site’s landing page<br>b. Code exploits a vuln that causes Tor<br>browser to transmit every visitor’s real IP<br>address back to server<br>4. Looks up which ISP owns IP address<br>5. Court issues subpoena or (d) order → FBI<br>serves order on ISP, gets user’s ID info<br>6. Court issues arrest + seizure warrants<br>7. FBI seizes device(s), arrests the suspect<br></div>	
v8h*Q^u^={	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	<div></div><div><div><div>Playpen: United States v. Werdene (3d Cir. 2018)</div></div></div>	"● FBI’s 3rd watering-hole attack on a Tor Hidden Service<br>● FBI seized Playpen server, moved it from N.C. to Virginia<br>● FBI used “Network Investigative Technique” (NIT) to exploit Tor browser vuln<br>● 2 warrants:<br>○ #1: Warrant from judge in E.D. Va. authorizing use of NIT<br>■ FBI obtained true IP addresses of 1000s of Playpen visitors worldwide<br>○ #2: Warrant for Werdene’s computer from judge in E.D. Pa.<br>■ If NIT warrant was invalid, that affects this one<br>● Ruling: NIT warrant was void, but Leon “good faith” exception applied <br>→ district court did not have to throw out evidence gathered via NIT warrant"	
J%f7ErX!*Q	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Disclose or not disclose? + VEP	● Defensive &amp; offensive equities<br>○ “Equities” = considerations, factors, interests to be weighed<br>● Dual roles of U.S. government: Attack &amp; defense<br>● Pros &amp; cons of disclosure vs. non-disclosure<br>○ Disclose to vendor: favors defensive equities<br>○ Don’t disclose (temporarily): favors operational equities<br>● When U.S. govt sits on exploits &amp; loses control of them, it’s bad:<br>○ Wikileaks Vault 7 dump: revealed CIA capabilities (but not actual tools)<br>○ NSA: Shadow Brokers tool dump: ETERNALBLUE → WannaCry<br><br><b>VEP<br></b>● Only for vulns that are “both newly discovered and not publicly known”<br>● Interagency process, risk/benefit analysis<br>○ Equities Review Board = 10 agencies; others may participate as appropriate<br>● Equities: <br>○ Defensive<br>○ Intelligence/law enforcement/operational<br>○ Commercial<br>○ International partnerships<br>● Supposedly favors disclosure in majority of cases<br>● We haven’t gotten the transparency we were promised	
Q1{:$?s[C|	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	NSO Group + WhatsApp Lawsuit 2019	● Private-sector vendor based in Israel, like Cellebrite<br>● Provides remote-hacking software to govts, + tech support, training<br>○ NSO claims it’s used only for LE &amp; counter-terrorism<br>○ But its software has been used repeatedly by govts to violate their own <br>citizens’ rights &amp; spy on officials of other countries<br>■ E.g.: US embassy personnel in Africa, many govt officials in EU <br>countries, activists, dissidents, journalists, their friends &amp; families<br>● Nov. 2021: sanctioned by Commerce Dept. over human rights abuses<br>● Last weekend: NYT reported that FBI came very close to using Pegasus<br>→ When US uses same tools as repressive govts, harder for us to condemn it<br><br>WhatsApp Lawsuit (N.D. Cal. filed 2019)<br>● NSO allegedly exploited a flaw in WhatsApp servers to hack users’ phones<br>● At least 1400 WhatsApp users were affected (&amp; notified by WhatsApp)<br>○ &gt;100 were journalists, human rights activists, lawyers, etc. <br>● “Zero-click” attack: NSO created WA user accounts, used them to send <br>malicious code to target devices<br>● Novel theory: Hacking WA users = CFAA violation against WhatsApp<br>○ NSO’s exploit hacked users’ devices through WhatsApp’s equipment<br>○ (Users could also have sued for CFAA violations on their own behalf)<br><br> District court denied NSO’s motion to dismiss CFAA claim<br>○ “Access without authorization” claim?  👎<br>■ NSO’s accounts had rights to access some parts of WhatsApp<br>○ “Exceeds authorized access” claim?  👍<br>■ NSO’s code used WA’s “relay servers” without authorization<br>■ NSO’s code evaded technical restrictions on access to “signaling servers” <br>■ Upgrading WA’s system in response to intrusion = &gt;$5,000 in loss<br>● NSO appealed to 9th Circuit (over a part of the ruling you didn’t read) &amp; lost<br>○ Argues it should be immune from civil lawsuits like foreign govts are<br>● Current status: NSO is trying to get SCOTUS to take the case	
C;>{k<>|]S	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Project Raven: Ex-US govt employees hacking for UAE	● Many ex-U.S. mil/intel personnel go on to hack for foreign govts for $$$<br>● 2016-on: UAE firm hired hackers from U.S. &amp; elsewhere for UAE govt work<br>○ Goals of both domestic control + foreign intelligence: hack its own citizens + <br>foreign targets (Qatari officials, U.S. journalists, Michelle Obama)<br>● 2021: DOJ deferred prosecution against 3 ex-U.S. govt employees<br>○ CFAA + providing “defense services” to foreign govt w/o proper license<br>● Multiple U.S.-based firms do get the right licenses, though<br>○ Other firms have sold powerful exploits to UAE etc. <br>○ Lines crossed here seem to be (1) U.S. targets &amp; (2) no license<br>● Last year, CIA warned retired agents not to go hack for foreign govts<br>○ Undermines CIA’s mission, benefits U.S. adversaries	
G;s[0tUl,i	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Malware types - virus, worm, trojan, rootkit, RAT &amp; Examples	● Virus- A malicious program that infects other programs, usually spreads with <br>human assistance<br>● Worm - A malicious program that spreads automatically, often without <br>human intervention<br><b>Example: Stuxnet<br></b>The most complex malware of it’s day<br>Multi-stage lifecycle<br>● Initial infection seeded via compromised Farsi <br>websites<br>● Movement between machines via net/USB<br>● On Siemens control system, local infection of <br>master software<br>● Loaded onto PLCs to cause damage<br>Complex, stealthy mechanism for air-gap jumping <br>communication<br>● Trojan Horse - A malicious program that pretends to be something <br>innocuous<br>● Rootkit - Software that provides an adversary access to a computer in a <br>hidden manner<br><b>Example: TDL4/TDSS:</b><br>Installed via affiliates, who might use<br>● Social engineering attack<br>● Infected download<br>● Exploited website<br>Hides in Windows<br>● MBR infection<br>● Bypasses driver signing!<br>Makes money as a botnet<br>● Controlled by P2P network<br>● Deletes other bots<br>● Does not infect in Russia<br><br>● RAT (Remote Access Toolkit) - A type of rootkit that is often optimized for <br>ease-of-use	
"FHPoGCq#9q"	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Ransomware against Municipalities	● May 2019, Baltimore, MD: City <br>government computer systems infected by <br>RobbinHood ransomware for 13 bitcoin <br>(~$100k). Attack ultimately cost the city an <br>estimated $6 million in damages<br>● February 2016, Hollywood Presbyterian <br>Medical Center: Hospital had to divert <br>patients and use paper and fax. Ultimately <br>paid a 40 bitcoin (~$17k) fine<br>● November 2016, San Francisco MUNI: <br>department had to make Muni fares free as <br>they scrambled to recover from attack	
vr<)8L~`D`	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Suffolk County 2022 Compromise	● Victims of BlackCat/ALPHV RaaS<br>● Police fell back from email-&gt;radio<br>● Paper checks instead of direct deposit<br>● Real estate transactions stopped due <br>to inability to title search<br>● No ransom paid, 4TB of info posted	
b36@`X>]={	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Computer Network Operations: CND, CNE, CNA	● Computer Network Defense (CND)<br>○ Actions taken via computer networks to protect, monitor, analyze, detect, &amp; <br>respond to network attacks, intrusions, disruptions or other unauthorized <br>actions that would compromise or cripple the defender’s information systems &amp; <br>networks.<br>● Computer Network Exploitation (CNE)<br>○ Enabling actions &amp; intelligence collection via computer networks that exploit <br>data gathered from the target’s information systems or networks.<br>● Computer Network Attack (CNA)<br>○ Actions taken via computer networks to disrupt, deny, degrade, or destroy the <br>information within computers and computer networks and/or the <br>computers/networks themselves.<br><br>Tarah Wheeler on SolarWinds: “cyberwarfare” (CNA) vs. “cyberespionage” (CNE)<br>Cyberwarfare is the use of computers to conduct an operation that is intended to have a kinetic effect, whether that is shutting down power grids, crashing airplanes, <br>denying access to critical communications, attacking military infrastructure, or <br>interrupting hospital operations. ...<br>Cyberespionage, on the other hand, is the act of a government listening in on the <br>activities of foreign computers. ... SolarWinds did not do one dollar of physical <br>damage to any computer system, nor did a single human so much as break a finger-<br>nail, and, as a result, this operation was an act of cyberespionage.<br>Source<br>CNA	
C~>1kNW[$f	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Cyberspace Solarium Commission report (March 2020)	● Comprehensive strategic approach to defending U.S. in cyberspace<br>● Vision: “layered cyber deterrence” to limit use of cyberspace against U.S.<br>○ Shape behavior: Promote responsible behavior in cyberspace &amp; isolate bad actors <br>○ Deny benefits: Public/private collab to secure critical networks &amp; build resilience<br>○ Impose costs: Build capacity to “defend forward” &amp; retain U.S. offensive capabilities<br>● Goal: Change attacker cost-benefit calculus → reduce attack frequency &amp; severity<br>○ Through public/private collab, raise adversary costs in using cyberspace offensively<br>○ Attacks will still happen but eventually won’t be major threats to economy/society	
"M/p8$2i]b#"	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	International Humanitarian Law:&nbsp;<i>jus in bello&nbsp;</i>(Rules of War)	● Limits on acceptable conduct while already engaged in war (Geneva Convention)<br>● Distinction: Who are legitimate targets?<br>○ Avoid harm to civilian noncombatants<br>● Proportionality: How much force is appropriate? <br>○ Oppose force with similar force; use minimum force needed to thwart attacker<br>○ Injury caused should be proportional to the desired objective<br>○ Costs shouldn’t outweigh benefits<br>● Distinction &amp; proportionality challenges in cyber realm <br>○ E.g., Stuxnet designed to minimize collateral damage... but still spread beyond target<br>○ MSFT: RU has taken more care than with NotPetya to confine CNA to Ukr domains<br><br><br><br><b>Jus ad bellum (right to war)<br></b>● When may a state engage in use of force to defend itself?<br>● Characterization of cyber op determines permissible response<br>○ “Soft” cyber op (use info to influence, persuade, manipulate): kinetic response not OK<br>○ “Hard” cyber op (effect on data C/I/A, and/or physical effect): harder line to draw<br>■ States disagree over whether cyber ops with no physical effect = “use of force”<br>● Not every cyber op is a “use of force”; not every use of force is an “armed attack”<br>● When does a hostile cyber operation rise to the level of an “armed attack”? <br>○ No consensus; many states say only the gravest “uses of force” = “armed attacks”<br>○ Pentagon disagrees: all unlawful uses of force = armed attacks; so if an unlawful <br>cyber op = use of force → justifies use of force (cyber or kinetic) in response	
Cx(2@-KPqN	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Tallinn Manual (2013), Tallinn Manual 2.0 (2017) &amp; Tallinn analysis - when/why/what justified	"<img src=""Screenshot 2022-12-14 at 2.23.26 PM.png"">● Academic manual on how international law applies to cyber conflicts &amp; cyber warfare<br>● Go-to resource for governments’ lawyers despite being non-binding<br>● “1.0” focused on cyber ops that occur during armed conflict<br>● 2.0 expanded to include analysis of legal framework for ops that fall below that level<br>○ Still the touchstone now that there’s a hot war in Europe<br>● Version 3.0 is currently in progress, due 2026<br>○ Aims to set clearer rules in cyberspace<br>○ Influenced by major recent events (2016 election, ransomware crisis, Ukr war)<br><br><b>what if self-defense isn't justified?</b><br>● If an attack has been legally attributed to a state and that state has broken a primary rule of international law (e.g. use of force, violation of state sovereignty), then victim state may:<br>○ Seek remedies: cessation of hostile op, restitution, compensation, etc.<br>○ Take countermeasures: cyber (e.g. hacking back), non-cyber (e.g. closing airspace)<br>■ Would otherwise be unlawful, except that they’re meant to compel offending <br>state to cease unlawful conduct and/or secure reparations for harm done<br>● If the cyber op can’t be attributed or didn’t breach a rule of international law?<br>○ Target state is usually limited to acts of “retorsion”: unfriendly but lawful actions<br>■ Sanctions, cut off voluntary aid, chill diplomatic relations (e.g. Albania/Iran)<br>■ Least aggressive response to a cyber operation<br><br><br>Tallinn 1.0:&nbsp;<b>""when might a cyber op justify kinetic response?""</b><br>● Tallinn 1.0 analyzed Estonia, Georgia, &amp; Stuxnet incidents under certain rules:<br>○ A cyber op may constitute a “use of force” in violation of UN Charter.<br>○ Depending on its scale and effects, a cyber op may rise to the level of an “armed attack”; if so, target state may respond with force in self-defense. <br>○ But, not every “use of force” rises to the level of an “armed attack.” <br>■ At the least, requires human injury/death or property damage/destruction <br>(but see directness &amp; measurability factors re: causation of harm).<br>○ Cyber ops executed in the context of an armed conflict are subject to the law of armed conflict.<br><br><br><b>Tallinn Historical Case Studies</b><br>---<br>● Estonia 2007 - Attribution: Russia(?)<br>○ Tallinn 1.0 concludes only a “use of force,” not “armed attack”<br>○ Defacement + “fairly mild &amp; simple” DDoS attacks against govt &amp; media websites<br>○ Attribution problem: Attacks came from computers worldwide (“script kiddies,” <br>zombie botnet); Russia refused Estonia’s treaty request to assist in investigation<br>○ Not an “armed attack”: worst-case harm avoided; “more of a cyber riot”<br>● SolarWinds 2020 - Attribution: Russia (APT-29)<br>○ Cyber espionage (CNE), not attack (CNA)<br>○ Info-gathering op against U.S. agencies; no real-world property damage or injury<br><br>● Stuxnet 2008-2010 - Attribution*: U.S., Israel, Netherlands<br>○ Clearly a use of force, but Tallinn authors didn’t all agree it was an “armed attack” <br>○ Illegal use of force? “Preventive” self-defense not OK unless attack imminent<br>○ *No formal, legal attribution: Iran didn’t acknowledge<br>● Iran 2019 - Attribution*: U.S.<br>○ Iran attacked oil tankers &amp; Saudi oil facilities, downed a U.S. military drone<br>○ U.S. came very close to launching missiles onto Iranian soil (but didn’t want a hot war)<br>○ Cyber ops against systems used for tanker attacks &amp; missile strikes, propaganda <br>capabilities; allegedly affected “physical hardware”<br>○ *Again, Iran refused attribution &amp; denied it happened<br><br><br><b>Are we in a post-Tallinn era?<br></b>● Requiring attribution is one drawback of Tallinn analysis<br>● Consider the U.S.-Iran “undeclared cyberconflict”<br>○ “Carefully calibrated to remain in the gray zone between war &amp; peace” &amp; stay below <br>level of armed conflict (NYT)<br>● Nobody seems to want a hot war (just look at Ukraine to see why)<br>○ Cyber brinkmanship designed to avoid kinetic response<br>● Are analogies to kinetic contexts useful anymore?<br>○ Do we need a new body of international law just for cyber conflict?<br>○ Does Ru/Ukr war show a need to update how we analyze cyber/kinetic conflicts?<br>● Tallinn Manual 3.0 is due in 2026 - what will the state of play be like by then?"	
cd|9.OO*uS	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	How is an SSL key verified?	"Best StackExchange answer:<br><ol>
<li><div>Your web browser downloads the web server's certificate, which 
contains the public key of the web server.  This certificate is signed 
with the private key of a trusted certificate authority.</div></li>
<li><div>Your web browser comes installed with the public keys of all of 
the major certificate authorities.  It uses this public key to verify 
that the web server's certificate was indeed signed by the trusted 
certificate authority.</div></li>
<li><div>The certificate contains the domain name and/or ip address of the
 web server.  Your web browser confirms with the certificate authority 
that the address listed in the certificate is the one to which it has an
 open connection.</div></li>
<li><div>Your web browser generates a shared symmetric key which will be 
used to encrypt the HTTP traffic on this connection; this is much more 
efficient than using public/private key encryption for everything.  Your
 browser encrypts the symmetric key with the public key of the web 
server then sends it back, thus ensuring that only the web server can 
decrypt it, since only the web server has its private key.</div></li>
</ol>
<div>Note that the certificate authority (CA) is essential to preventing 
man-in-the-middle attacks.  However, even an unsigned certificate will 
prevent someone from passively listening in on your encrypted traffic, 
since they have no way to gain access to your shared symmetric key.</div><div><br></div><div>source:&nbsp;<a href=""https://stackoverflow.com/questions/188266/how-are-ssl-certificates-verified"">https://stackoverflow.com/questions/188266/how-are-ssl-certificates-verified</a></div>"	
nVn4<gOTf4	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Market Making	"Providing liquidity/market depth as a service, e.g.<br>Blackrock wants to buy $30m of a stock<br>Goldman Sachs shorts $30m of that stock simultaneously<br>Blackrock pays Goldman a commission, and they slowly buy back their shares until their short position is closed, profiting from the bid-ask spread on their asset with the newly provided market depth<br><br>Blackrock commissions Goldman to temporarily take on its institutional risk<br><br>A MM must commit to a bid and ask price &amp; volume, trading frequency<br><br><a href=""https://www.investopedia.com/terms/m/marketmaker.asp"">https://www.investopedia.com/terms/m/marketmaker.asp</a>"	blockchain
v]X}?CsKPW	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	🧱⛓️Blockchain Concepts	"Composability - refers to natively interoperability between two protocols — i.e. a MakerDAO-generated token can be traded on a DEX like Uniswap.<br><br>Cobie - The Meme of Market Caps &amp; Unlocks<br>Market cap = total $ public buying demand;&nbsp;Total amount of public $ that wants to buy the token at current price.<br>FDV is a measure of supply, not demand.<br>As demand increases for unlocked coins (market cap increases), the FDV increases proportionally even though demand for locked coins doesn’t increase. As a result, FDV increases 1:1 with market cap even if those locked coins would happily be sold at much lower prices<br><br>Very easy to pump FDV by keeping majority of tokens locked<br>Teams and seed investors are often happy sellers even after a 95% drop<br><br>Pros/Investors trade locked coins at a discount to market price and sign contractual obligations to sell coins as they become unlocked. If the team is the one selling, often the lock period of those sold locked tokens is extended.<br><br>A bearish catalyst turned neutral is very bullish, and vice versa. But 90% of 2022 unlocks will be bearish<br><br>This means as prices go parabolic, the valuation of locked coins and valuation of open market coins detach because smart money is less likely to buy inflated valuations and the locked coin holders are increasingly incentivised to sell (and become happier with larger discounts). In contrast, when markets have grown organically and steadily over time, it’s more likely that the cost basis of locked coins could move up to be closer to the open market valuation.<br><br><br><a href=""https://cobie.substack.com/p/on-the-meme-of-market-caps-and-unlocks?utm_source=%2Fprofile%2F8555922-cobie&amp;utm_medium=reader2&amp;s=r"">https://cobie.substack.com/p/on-the-meme-of-market-caps-and-unlocks?utm_source=/profile/8555922-cobie&amp;utm_medium=reader2&amp;s=r</a>"	blockchain
DCT4wqz6mD	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	EIP 1559 / London Hard Fork Improvements	"&nbsp; &nbsp; ""On average, we saved about 9% on effective gas prices (this was computed as the difference in confirmed gas price between legacy transactions and EIP-1559 transactions).<br><br>&nbsp;&nbsp;&nbsp; At the same time, we improved our broadcast-to-confirmation time by 11 seconds, or 0.7 blocks (this was computed as the difference in broadcast-to-confirmation time between legacy transactions and EIP-1559 transactions)."""	blockchain
Q0c-8YrB2o	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	NFT Marketplaces	OpenSea<br>Rarible<br>SuperRare (High-end 1-of-1s)<br>LooksRare<br>X2Y2<br>Sloika (photography)<br>Metahood (metaverse land)<br>Catalog (Music)<br><br>Building an NFT Marketplace:<br>-Build the community first absolutely - generally takes years and is near impossible in months or days<br>-Every NFT project out there utilizes social media structures<br>-almost every NFT project out there pays influencers<br>-Don't have your main sale on a tough gas day<br>-Have full transparency with your audience; attempt a giveaway	blockchain
"eI+rH=#An@"	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	The Great Hack - Cambridge Analytica Documentary	Cambridge Analytica was given carte Blanche to Facebook data and extrapolated 5,000 data points on every single adult U.S. voter. The success of the Obama campaign set a perfect stage for them to channel this data into a psychoanalysis and optimization path for persuadable U.S. adults.<br><br>MOST are reactionary, will simply vote for the candidate who “lies less”, who has “made fewer mistakes”, or who “appears strong against opposition”<br><br>Digital video content is the most optimal immersion to change someone’s mind on a strongly held opinion<br><br>Information input creates personality, which creates beliefs and instincts, which create behavior, which governs information input. It’s a classical smart animal flaw.<br><br>Steve Bannon was the Vice President of Cambridge Analytica<br><br>CA is a “full-service propaganda machine”<br>In order to change society, it must be broken - the breitbart way<br><br>CA only confirmed data collection with those who took their survey. Then they harvested 100% of friends’ status updates, likes, and private messages without permission or knowledge and assembled a psychological profile on each person<br><br>The strategy is almost purely devised for swing voters<br><br>Brittany Kaiser, “whistleblower”, was on Obama’s social media team and pioneered the way that social media was used to communicate with voters<br><br>Cambridge Analytica’s greatest success was in Trinidad &amp; Tobago, where they managed to goad teens into an apathy campaign until they simply gave up on voting. Their greatest successes have often been in places where they were able to make an anti-politics case to the most impressionable. In T&amp;T they banked on Indian kids voting because of the stress of their parents, and black kids not voting because of the intuitiveness of an anti-politics resistance movement<br><br>CA targeting tool methodology, psychographics, used to be embargoed in the UK as a “weapons-grade communication tactic”<br><br>The best propaganda is brandless, unattributable, untraceable, so that it passes for casual opinion sharing<br><br>Facebook is a mix of psychological tactics developed for propaganda, gambling, and targeted lies<br><br>When everyone lives in their own reality, they’re easiest to manipulate<br><br><br>Hillary and Obama simply weren’t willing to pay Brittany Kaiser the money she needed to support her family - so she found people who were<br><br>She lost her family the year she started working at Cambridge	dataprivacy documentary movie
"z]#E%j=oj,"	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Final Cut Pro X Shortcuts	I- input<br>O-output<br>F-favorite selection<br>Cmd b - cut clip<br>Backspace - delete selection<br>Cmd + or cmd - zoom in or zoom out<br>Arrow keys move playhead forward/backward by one frame<br>Clips dragged above main video timeline function as b-roll, whose audio takes a backseat to the main timeline<br>Q -connect clip above primary storyline<br>W - insert selected clip WITHIN primary storyline<br>Primary storyline, b-roll is not<br>Primary storyline is magnetic, b-roll is not, so select b-roll and press alt-g to make magnetic<br>E - append clip to end of primary storyline<br>V - turns b-roll clips off or on<br>Press p and click the pointer arrow at the top to prevent all clips moving when you just crop one - useful for music videos etc where you don’t want your whole timeline to move; press A to switch back to standard arrow<br><br>Transitions<br>Bottom right - transitions like fade, cross dissolve<br>Drag transition sides to lengthen/shorte transitions, or use the two bars at the top corners to alter the clips underneath without altering the transitions<br><br>FX<br>Effects can be drag and dropped or selected and added<br>Effects are accessible in the top right window with a variety of possibilities<br><br>Color<br>Next to fx in top right<br>Exposure, saturation, color<br><br>Cmd 1 - events browser <br>Cmd 7 - waveform<br><br>Cmd c cmd v works to c/p clips<br>How too c/p fx?<br><br>Audio<br>3rd menu in top right - looks like speaker<br>Can use equalizer, loudness, noise removal, audio pan, loads of audio effects in bottom right<br>Drag line on audio window up or down to increase/decrease loudness, drag teardrop on left for audio fade in<br>Alt + click will add a keyframe which can be dragged to desired loudness without altering the rests<br><br>Titles are in 3rd menu in left sidebar with a T in a square<br>These are dragged down on top of your clips and can be edited on the right to create a glossy finish<br>Can be faded in and out with some cross dissolves, same as a normal vid clip<br><br>File-share-apple devices 4k	
KLxbxj*|Xf	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Steve Jobs Mockumentary	"-Change in product price points $1500-$2495 had made them less competitive ahead of their first launch of the Macintosh<br>-Replaced the motorola 6809 with the 68000, which supported menus, windows, point-and-click, high-res graphics<br>-at the time, memory was what cost the most money<br>-Steve &amp; Chrisann's relationship was an enormous mess; he manipulated her into a victim complex for having needs and a child to raise alone<br>-He had a preposterous god complex which he used to erase his bad deeds<br>-His delusion was deepened by half a billion of wealth<br>-Wozniak was a huge advocate for the computers too have more e.g. 8 slots, while Steve argued for two slots exactly - a printer and a modem<br>-2 minutes ahead of showtime they decided to commit fraud by demoing a 128 computer on a 512, which was shipping in under a year. The decision was made because Jobs felt that computers had been made too scary by Hollywood and needed the ability to speak in order to be huumanized. It was a huge part of their ""1984"" ad push which sold the mac as a tool for revolution. ""You'll see why 1984 won't be like '1984'.""<br>-John Sculley, CEO of Apple: Should adopted babies feel accepted or rejected?<br>-Jobs was obsessed, fixated on control &amp; fighting to keep it as an adopted kid<br>-The mac sold miserably, 500 in a month, causing closing of 2 factories and ousting of Jobs, with Woz calling him ""an insulting and hurtful guy""<br>-Jobs founded a new company, Next, in 1988<br>-Jobs saw himself as the conductor of an orchestra - guiding the group and directing its motion while contributing no technical or skill knowledge<br>-NEXT was an insane bid for apple to buy him and several lead engineers back, purchasing their OS and hardware patents to combat their declining market share among educators &amp; administrators<br>-It would cost Apple half a billion in stock to buy Steve back<br>-1998, Jobs returned to Apple and introduced the iMac, many callbacks to his original stint at apple. The big sell was cleaner form factor &amp; internet-forward OS design<br>-Andy Hertzfeld stepped in to pay for Lisa's Harvard expenses &amp; therapy without Jobs' knowledge<br>-Jobs' bio dad was a restaurant owner, unaware of their relation<br>-Jobs killed the Newton because of the stylus, believing fingers superior"	
O&:qFI>~b@	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Line Goes Up: The Problem with NFTs	Hype-based obfuscation<br>intentionally more difficult to understand, creating the illusion THEY are the only ones who understand it<br>Synthetic demand from a tiny <br>Silk road had genuine demand for bitcoin<br>Chris diixon seems like an underdog but sits on boards of coinbase and oculus vr<br>Thiel loves eugenics, anti-banker theology is mostly antisemitism<br>Banking problems are problems of human behaviors<br>Nodes are in competition over the block solution for every block<br>The submitted solution is instantly verified based on output<br>A fuckton of huge mining rigs compete<br>Bitcoin parallels <br><br>“It’s a system that is at once impenetrable and brittle, and that arrangement disproportionately empowers the dishonest.”<br><br>“But in now, buy in early, and you could be that future boot.”	blockchain business documentary economics movie
sPUl(-4hbX	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Stochastic/Random Process	Mathematical object traditionally defined as a family of random variables<div>Often used to model random variations in systems/phenomena, e.g. game of life/bacteria growth, electrical currents’ variation in response to thermal noise; molecule movement</div><div>Stochastic - A random probability distribution that can be analyzed statistically but not predicted precisely</div>	aiml statistics
ctT&RRnqw`	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Latent Dirichlet Allocation	tries to view a document as a collection of topics and a topic as a collection of words. Especially useful to find evidence in legal documents	aiml
g^VS7|K~&0	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	👤AI Models over time	<div>Eliza (60s) - designed to solve the Turing test; used pattern matching without encoding source context<br></div><div><br></div><div>AI History - Symbolic, Neural, and Statistical AI</div><div>1956: John McCarthy organizes workshop at Dartmouth<div>Faced problems of limited computation &amp; limited information<br><div>Originated technologies like Lisp, Garbage Collection, Time-Sharing<br><div>1952: Samuel’s amateur checkers program</div><div>1955: Newell and Simon’s logic theorists proves theorems in principia mathematics using search and heuristics; General Problem Solver (GPS)</div><div>1966: ALPAC report cuts of government funding for MT,&nbsp;<b>first AI winter</b></div></div></div><div>70S-80s: era of knowledge-based systems</div><div>DENDRAL, MYCIN, XCON, SHRDLU</div><div>Knowledge helped info and computation Gao, first real applications that impacted industry</div><div>Problems: deterministic rules couldn’t handle real-world randomness; rules quickly became too complex to maintain</div><div>1987: collapse of Alison machines;&nbsp;<b>second AI winter</b></div><div><br></div><div>Neutral AI</div><div>1943: NNs; relate neural circuitry and math logic&nbsp;</div></div><div><br></div><div>Tay (MSFT 2016) - tweet like a teen; learn from conversations with real Twitter users; Tay adopted sexist and racist language; illustrates “must debias data” point from the “Stochastic Parrots” paper</div><div><br></div><div>The Sesame Street Models - BERT, ELMo, Big BIRD, ERNIE, Kermit, Grover, RoBERTa, and Rosita. Good at providing contextual embeddings and enhanced knowledge representation</div><div><br></div><div>Word2Vec (orig. 2013); GLoVE</div><div><div>uses vanilla NN to extract high-dimensional word embeddings</div><div><br></div><div><div>-2 variations: Skip-Gram, which predicts surrounding words given a target word, and Continuous Bag-of-Words (CBOW), which predicts the target word from surrounding words</div><ul><li>discard the final layer after training; the models take a word as input and give a context-captured embedding as output. If two words appear on similar contexts, their W2V embedding will be similar</li><li>GLoVE is similar to W2V, but learns word embeddings using matrix factorization rather than neural learning. GLoVE builds matrices based on the final word-to-word Co-occurrence counts&nbsp;</li><li>DNNs typically work without extracted features, although TF-IDF or BOW features can be inputs&nbsp;</li><li>-probabilistic Markov models</li></ul></div></div><div><br></div>	aiml history
t}b.bb!hb,	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Stemming vs Lemmatization (Data Preprocessing)	"<b>Same Goal:</b>&nbsp;maximize richness and streamline formatting for model input<br><b>Stemming:</b>&nbsp;converting words to their basic forms with heuristic rules &amp; etymology; more primitive &amp; lossy; removes some derivational affixes<br><b>Lemmatization:</b>&nbsp;Converting words to their base form using morphology and a vocabulary, aiming to remove inflectional endings only and return the lemma<br>the&nbsp;<b>Lemma</b>&nbsp;is the base dictionary form of a word, with no inflection or derivation applied<br><a href=""https://nlp.stanford.edu/IR-book/html/htmledition/stemming-and-lemmatization-1.html"">https://nlp.stanford.edu/IR-book/html/htmledition/stemming-and-lemmatization-1.html</a><br><div>-Stemming and lemmatization are provided by spaCy and NLTK</div>"	aiml dataflow
QqyBZn`!7T	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Function Definition (Logic) - 2 rules	"we say that f : A → B if the following two rules hold.<br>First, f must be obey its domain/codomain rules:<br>∀a ∈ A. ∃b ∈ B. f(a) = b<br>(“Every input in A maps to some output in B.”)<br> Second, f must be deterministic:<br>∀a₁ ∈ A. ∀a₂ ∈ A. (a₁ = a₂ → f(a₁) = f(a₂))<br>(“Equal inputs produce equal outputs.”)<br><br><br>To define a function, you need to<br>● specify the domain,<br>● specify the codomain, and<br>● give a rule used to evaluate the function.<br><br>Functions cannot produce random outputs; same input must always produce same output<div><br></div><div>

Deterministic - &nbsp;Given the same input, A function must always produce the same output.<div>Can only be applied to elements of its domain to produce elements of its codomain&nbsp;</div>
<div>The output of the function must always be in the codomain, but not all elements of the codoMain must be produced as outputs</div>
<div><br></div>
<div>f:A—&gt;B iff&nbsp;<br>
</div>
<div>Every input in A maps to an output in B</div>
<div>Equal inputs produce equal outputs</div>
<div><br></div>
<div>f:A—&gt;A iff f is an involution iff For all x in a, f(f(x))=x</div></div>"	CS103 logic
x*jlc7;a2+	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Automaton	-A math model of a computing device; abstraction of a real computer<br>-Fixed vs flexible set of functions, reprogrammability, memory size<br>-Receive input, provided sequentially one unit at a time, and each input causes the device to change configuration<br>-Once all input is provided &amp; all changes made, we should be able to read an answer off of the device<br>-collection of states linked by transitions, where each state is a possible memory config; there must exist a start state<br>Finite automata:<br>-Some states are marked as accepting states, denoted in diagrams w double ring<br>-if device ends in accepting state after seeing all input, it accepts the input<br>-if it doesn't end in one such state, it rejects the input<br>-Edge cases where the automata fails: no transition designated for current input, multiple transitions designated for current input	automata computability CS103 logic
F9>jp}?K5R	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	🔤Alphabet, formal language	"-a finite, nonempty set of symbols called characters, usually referred to by Σ<br>-A string over an alphabet is a finite series of characters thereof<br>-the empty string has no characters and is denoted ε<br>-<b>Formal language:</b>&nbsp;A set of strings; L is a language over Σ if it is a set of strings thereof<br>-The power set of all possible strings composed from letters in Σ is denoted Σ*<br>-L is a language over Σ if L is contained in Σ*<br>-The language of A, denoted (ℒ A), is the set of strings over Σ that A accepts:<br>ℒ(A) = { w ∈ Σ* | A accepts w }<br>EX. So (ℒ D) = { w ∈ {a, b}* | w ends in a }.<br><br><div>Recognizable (RE) vs. Decidable (R) Languages, ATM<br></div><div><br></div><div>A language is called&nbsp;<span style=""font-weight: 700; font-style: italic;"">recognizable (RE)&nbsp;</span>if it is the language of some TM.</div><div>For any&nbsp;<span style=""font-style: italic;"">w&nbsp;</span>∈ Ł(<span style=""font-style: italic;"">M</span>),&nbsp;<span style=""font-style: italic;"">M&nbsp;</span>accepts&nbsp;<span style=""font-style: italic;"">w</span>.<br>For any&nbsp;<span style=""font-style: italic;"">w&nbsp;</span>∉ Ł(<span style=""font-style: italic;"">M</span>),&nbsp;<span style=""font-style: italic;"">M&nbsp;</span>does not accept&nbsp;<span style=""font-style: italic;"">w</span>.</div><div><span style=""font-style: italic;"">M&nbsp;</span><span style=""font-weight: 700;"">might reject</span>, or it&nbsp;<span style=""font-weight: 700;"">might loop forever</span>.</div><div><br></div><div><div><div><div>A language&nbsp;<span style=""font-style: italic;"">L&nbsp;</span>is called&nbsp;<span style=""font-weight: 700; font-style: italic;"">decidable (R)&nbsp;</span>if there exists a decider&nbsp;<span style=""font-style: italic;"">M&nbsp;</span>such that Ł(<span style=""font-style: italic;"">M</span>) =&nbsp;<span style=""font-style: italic;"">L</span>.&nbsp;</div></div></div><div><div><div><div><div><div><div><div>Decider machines are implemented in a way that they have no danger/possibility of looping forever.&nbsp;<br></div><div>&nbsp;</div><div><div><div><div><div><div>AsubTM ATM is the language of the universal Turing machine.&nbsp;</div><div>The universal Turing Machine UTM is a recognizer for ATM.&nbsp;</div></div></div></div></div></div><div>Every decider is a TM, but not every TM is a decider. Thus, R ⊆ RE</div><div><div><div><div><div><div>●</div></div><div><div>If ATM is decidable, we can construct a TM that</div><div>determines what it's going to do in the future (whether it will accept its input), then actively chooses to do the opposite.</div><div>This leads to an impossible situation with only one resolution:&nbsp;<span style=""font-weight: 700;"">A</span><span style=""font-weight: 700;"">TM&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">must not be decidable!&nbsp;</span></div></div></div></div></div></div></div></div></div></div></div></div></div></div>"	automata computability CS103 language logic
vLO?1Zh.s$	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	DFA: Deterministic Finite Automaton	"-simplest variety in the course; defined relative to some language Σ<br>-DETERMINISTIC: For each state in DFA, exactly one transition defined for each symbol in Σ<br>-unique start, zero or more accepting states<br>-Because at each point the DFA only ""remembers"" its current state, build each state to correspond to a piece of info remembered; finite states means finite memory<br>-Language of D, where D is a DFA: ℒ(D) = { w ∈ Σ* | D accepts w }<br><img src=""Screenshot 2023-02-26 at 10.28.01 AM.png"">"	automata computability CS103 logic
bPo?q>ZZX~	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Involutions	"
<div>
<div>
<div>
<div>

A function f : A → A (notice this requires the domain and codomain to be the same set) is called an involution if the following first-order logic statement is true about f: ∀x ∈ A. f(f(x)) = x.<br>(“Applying f twice is equivalent to not applying f at all.”)&nbsp;</div><div>&nbsp;<span style=""font-weight: 700;""><br></span></div><div><span style=""font-weight: 700;"">∀</span><span style=""font-weight: 700; font-style: italic;"">x </span><span style=""font-weight: 700;"">∈ </span><span style=""font-weight: 700; font-style: italic;"">A</span><span style=""font-weight: 700;"">. </span><span style=""font-weight: 700; font-style: italic;"">f</span><span style=""font-weight: 700;"">(</span><span style=""font-weight: 700; font-style: italic;"">f</span><span style=""font-weight: 700;"">(</span><span style=""font-weight: 700; font-style: italic;"">x</span><span style=""font-weight: 700;"">)) = </span><span style=""font-weight: 700; font-style: italic;"">x</span><span style=""font-weight: 700;"">.<br>
</span></div><div><span style=""font-weight: 700;"">Both injective and surjective</span></div><div>
<div>
<div>
<div>
<div><br></div></div></div><div><div>
</div>
</div>
<div>
<div>
<div>Therefore, we’ll have the reader pick some n ∈ Z, then argue that f(f(n)) = n.&nbsp;</div></div></div>
</div></div><div><span style=""font-weight: 700;"">""applying f twice is equivalent to not applying f at all.""</span></div><div>The domain and codomain must be the same set; f maps A to A f(f(x)) = x</div><div><br></div><div>Examples:</div><div><div>
<div>
<div>
<div>
<div><span style=""font-style: italic;"">f </span>: Z → Z defined as <span style=""font-style: italic;"">f</span>(<span style=""font-style: italic;"">x</span>) = <span style=""font-style: italic;"">x</span>.</div><div>&nbsp;<span style=""font-style: italic;"">f </span>: Z → Z defined as <span style=""font-style: italic;"">f</span>(<span style=""font-style: italic;"">x</span>) = -<span style=""font-style: italic;"">x</span>.</div><div><div>
<div>
<div>
<div>
<div><span style=""font-style: italic;"">f </span>: N → N de$ned as follows: <span style=""font-style: italic;"">Yep!
</span></div>
<div>{<span style=""font-style: italic;"">n</span>+1 if <span style=""font-style: italic;"">n </span>is even
<span style=""font-style: italic;"">n</span>−1 if <span style=""font-style: italic;"">n </span>is odd&nbsp;</div><div><br></div><div>Prove involution:</div><div><br></div>
</div>
</div>
</div></div></div>
</div>
</div>
</div></div></div>
</div>
</div>
</div>"	CS103 logic
vnAeX49P;d	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Graph Walks; Paths; Cycles; Complements	"<div><div>Graph G=(V, E) is collection of nodes V and edges E; edges usuallly unordered pairs or sets with cardinality two directed graphs also called digraphs; usually the only kind of graph to allow self-loops&nbsp;</div><div>Unless specified otherwise, graph means ""undirected graph""</div></div><div>
Graphs can’t have Self-loops; digraphs can&nbsp;<br></div><div><b>In Bold: Given theories from class</b></div><div><br></div><ul><li>Walk:&nbsp;node sequence where any two sequence-adjacent nodes are also graph-adjacent; its length is the number of nodes minus one for start point</li><ul><li><b>If u, v&nbsp;∈ V, then there's a path from u to v if and only if there's a walk from u to v.</b><br></li></ul><li>A Closed walk returns to starting point. </li><li>A Path is a walk that does not repeat nodes or edges.&nbsp;</li><li>A Cycle is a path which repeats the first/last node.</li><ul><li><b>If C is a cycle in G, then C's length is at least three and C contains at least three nodes.</b></li></ul><li>the Complement is the set of edges exactly opposite to what the graph actually contains; The <span style=""font-style: italic;"">complement of G </span>is the graph <span style=""font-style: italic;"">G</span><span style=""font-style: italic;"">c </span><span style=""font-style: italic;"">= </span>(<span style=""font-style: italic;"">V</span>, <span style=""font-style: italic;"">E</span><span style=""font-style: italic;"">c</span>), where
<span style=""font-style: italic;"">E</span><span style=""font-style: italic;"">c </span>={{<span style=""font-style: italic;"">u</span>,<span style=""font-style: italic;"">v</span>}|<span style=""font-style: italic;"">u</span>∈<span style=""font-style: italic;"">V</span>,<span style=""font-style: italic;"">v</span>∈<span style=""font-style: italic;"">V</span>,<span style=""font-style: italic;"">u</span>≠<span style=""font-style: italic;"">v</span>,and{<span style=""font-style: italic;"">u</span>,<span style=""font-style: italic;"">v</span>}∉<span style=""font-style: italic;"">E</span>}&nbsp;</li><li>G is&nbsp;Connected&nbsp;if all pairs of distinct nodes in G are reachable; a&nbsp;connected component&nbsp;or CC of G is a maximal set of mutually reachable nodes</li><ul><li><b>Every node in V belongs to exactly one connected component of G.</b></li><li><b>Graph G is connected if and only if it has exactly one connected component.</b></li></ul><li><b><div style=""font-weight: 400;""><div><b>Vertex cover</b><br></div><div>Let&nbsp;<span style=""font-style: italic;"">G&nbsp;</span>= (<span style=""font-style: italic;"">V</span>,&nbsp;<span style=""font-style: italic;"">E</span>) be an undirected graph. A&nbsp;<span style=""font-weight: 700; font-style: italic;"">vertex cover&nbsp;</span>of&nbsp;<span style=""font-style: italic;"">G&nbsp;</span>is a set&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>⊆&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>such that the following statement is true:</div></div><div style=""font-weight: 400;""><div><span style=""font-weight: 700;"">∀</span><span style=""font-weight: 700; font-style: italic;"">x&nbsp;</span><span style=""font-weight: 700;"">∈&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">V</span><span style=""font-weight: 700;"">. ∀</span><span style=""font-weight: 700; font-style: italic;"">y&nbsp;</span><span style=""font-weight: 700;"">∈&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">V</span><span style=""font-weight: 700;"">. ({</span><span style=""font-weight: 700; font-style: italic;"">x</span><span style=""font-weight: 700;"">,&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">y</span><span style=""font-weight: 700;"">} ∈&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">E&nbsp;</span><span style=""font-weight: 700;"">→ (</span><span style=""font-weight: 700; font-style: italic;"">x&nbsp;</span><span style=""font-weight: 700;"">∈&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">C&nbsp;</span><span style=""font-weight: 700;"">∨&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">y&nbsp;</span><span style=""font-weight: 700;"">∈&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">C</span><span style=""font-weight: 700;"">))&nbsp;</span><span style=""font-style: italic;"">(“Every edge has at least one endpoint in C.”)&nbsp;<br></span></div><div><b><i>Independent set</i></b><br></div><div><div><div><div>If&nbsp;<span style=""font-style: italic;"">G&nbsp;</span>= (<span style=""font-style: italic;"">V</span>,&nbsp;<span style=""font-style: italic;"">E</span>) is an (undirected) graph, then an&nbsp;<span style=""font-weight: 700; font-style: italic;"">independent set&nbsp;</span>in&nbsp;<span style=""font-style: italic;"">G&nbsp;</span>is a set&nbsp;<span style=""font-style: italic;"">I&nbsp;</span>⊆&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>such that</div><div><span style=""font-weight: 700;"">∀</span><span style=""font-weight: 700; font-style: italic;"">u&nbsp;</span><span style=""font-weight: 700;"">∈&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">I</span><span style=""font-weight: 700;"">. ∀</span><span style=""font-weight: 700; font-style: italic;"">v&nbsp;</span><span style=""font-weight: 700;"">∈&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">I</span><span style=""font-weight: 700;"">. {</span><span style=""font-weight: 700; font-style: italic;"">u</span><span style=""font-weight: 700;"">,&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">v</span><span style=""font-weight: 700;"">} ∉&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">E</span><span style=""font-weight: 700;"">.&nbsp;</span><span style=""font-style: italic;"">(“No two nodes in I are adjacent.”)&nbsp;</span></div></div></div></div></div></b></li></ul><div><div><div><div><img src=""Screenshot 2023-02-28 at 5.54.42 PM.png""><br></div>
</div>
</div>
</div>"	CS103 logic
n}It|$5M<.	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Ramsey's Theorem: Red and Blue n-cliques	"<div>
<div>
<div>
<div>
<div><span style=""font-weight: 700;"">For any natural
number n, there is a number R(n) where for any
clique with R(n) or more nodes that’s painted red
or blue, that clique has either a red n-clique or a
blue n-clique, and for all cliques with fewer than
R(n) nodes, there’s a way to paint it red and blue so
it has no red n-cliques and no blue n-cliques.&nbsp;</span></div><div><span style=""font-weight: 700;""><br></span></div><div><img src=""Screenshot 2023-05-23 at 11.03.43 AM.png""><span style=""font-weight: 700;""><br></span></div>
</div>
</div>
</div></div>"	CS103 logic
qGZgZQD>QQ	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	God-Tier Terminal Commands	"<div>Tab autocompletes a command when possible, arrow keys navigate between previously run commands</div><div><i>pwd</i>&nbsp;prints working directory,&nbsp;<i>cd</i>&nbsp;to change directory<br></div><div>. means current directory, .. means one directory one level out from current, ~ means user home directory</div><div><i>open &lt;filepath&gt;</i>&nbsp;opens filepath in finder<br></div><div><i>ls -a</i>&nbsp;lists contents with some metadata<br></div><div><i>clear</i>&nbsp;clears the terminal by moving all text up to the top, like a TI-84<br></div><div><i>touch</i>&nbsp;&lt;<i>filename&gt;</i>&nbsp;creates filename in current directory<br></div><div><i>nano &lt;filename&gt;</i>&nbsp;opens filename in nano, or creates blank file w filename if it doesn't exist<br></div><div><i>rm &lt;filename&gt;</i>&nbsp;moves filename to trash, flag -r deletes a directory directly without trash<br></div><div><i>mkdir &lt;filename&gt;</i>&nbsp;creates directory with filename<br></div><div><i>ping &lt;url&gt;</i>&nbsp;will check if the given site is up and running<br></div><div><br></div><div><i>say ""string""</i>&nbsp;will make your mac speak string out loud<br></div><div><i>| pbcopy</i>&nbsp;will copy any returned string to your clipboard<br></div><div><i>caffeinate</i>&nbsp;keeps screen awake as long as terminal is open<br></div><div>Command-option-shift-v pastes without formatting</div><div>command-control-shift-4 copies a screenshot to your clipboard</div><div><br></div><div>PATH</div><ul><li><i>echo $PATH</i> ; source .bash_profile; export PATH for .bash_profile</li><li><i>echo $SHELL</i> shows you whether you're using bash/zsh,&nbsp;<i>cat /etc/shells</i>&nbsp;shows you possible options</li><li>Default PATH:&nbsp;<code>export PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin</code></li><li><code>command-Shift-period shows hidden files in finder gui</code></li><li><font face=""monospace"">zsh2bash switch: chsh -s /bin/bash ;;&nbsp;</font>chsh -s /bin/zsh</li><li>add to .bashrc file: echo ""export PATH=$PATH:/home/youruserdirectory/anaconda3/bin""&gt;&gt; ~/.bashrc</li><li><pre><code>chsh -s $(which zsh) or </code>chsh -s $(<span style=""font-family: Arial;"">which</span><span style=""font-family: Arial;""> bash) will switch shells</span></pre></li></ul><div>Changing shells, more fully:</div><div><ol>
<li>List available shells by typing <strong><strong>cat /etc/shells</strong></strong>.</li><li>List current shell with commands&nbsp;<b>echo $SHELL</b>&nbsp;or <b>echo $0</b></li>
<li>Note down the path to bash such as <strong>/bin/bash</strong></li>
<li>To update your account to use bash run <strong>chsh -s /bin/bash</strong></li>
<li>Close terminal app, reopen and verify that bash is your default shell.</li></ol></div><div><br></div><div><div>Grep&nbsp;<br></div><div>Linux / Unix CLI tool used for searching for a string of characters in a file or block of text. For instance, grep can be used to find a string in a file — often once on a machine hackers will look for passwords, and grep is a perfect tool to quickly search files for the word “password”.&nbsp;</div></div>"	formula
mp=u36zmTR	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Rules of Counting	"<b>Sum Rule of (mutually exclusive)counting</b>: If the outcome of an experiment can be <b>either</b> from<br><ul><li>Set A, where |A| = m</li><li>Set B, where |B| = n</li><li>where A \cap B = Null</li></ul><div>Then the number of the outcomes in the experiment is |A|+|B| = m + n</div><div><br></div><div><b>Product Rule of Counting</b>: If an experiment has two parts, where<br></div><div><ul><li>First part's outcomes drawn from A where |A| = m,</li><li>Second part's outcomes drawn from B where |B| = n</li></ul><div>Then the number of the outcomes of the experiment is |A||B|=mn<br></div></div><div>Generalizes to multistep experiments</div><div><br></div><div><div>E.g. the number of possible states on a Go board is 3(possible states per spot)^(19*19) spots, or roughly 10^172 possible configurations with about 10^170 being legal configurations. This is roughly the number of atoms in the universe squared; no computer could store the amount of information required to store all possible states.</div></div><div>The product rule of counting can help with this, by encoding a set of binary decisions to reach a much larger set of outcomes. If you need to generate 10mil unique data points for a set of outcomes, you would only need to encode log(2)(10,000,000)&lt;n, or n=24 binary decisions.</div><div><br></div><div><br></div><div><b>Inclusion-Exclusion Principle</b><br></div><div>If the outcome of an experiment can be <b>either</b> from</div><div><ul><li>Set A or Set B,</li><li>Where A and B may overlap,</li></ul><div>Then the total number of experiment outcomes is |A \cup B| = |A|+|B|-|A \cap B|</div></div><div>|A or B| = |A| + |B| - |A and B|</div><div><br></div><div><b>General Principle of Counting</b><br></div><div>If an experiment has r steps, such that Step i has n_i outcomes for all i=1, ..., r,</div><div>Then the number of outcomes for that experiment is&nbsp;</div><div><img src=""Screenshot 2023-04-24 at 8.32.15 AM.png""><br></div><div><br></div><div><b>Pigeonhole Principle</b><br></div><div>For positive integers m and n, if m objects are placed in n buckets, then at least one bucket must contain at least \ceiling{m/n} objects.&nbsp;</div><div><br></div><div><b>Overcounting and Correcting</b><br></div><div>-A common strategy for counting involves overcounting all outcomes under relaxed assumptions, and then dividing by whatever multiple you overcounted by, or by subtracting the exact number of elements that were overcounted if you know the number.</div><div><br></div>"	CS109 statistics
"DV#qzG0IdY"	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Combinatorics	"A permutation is an unordered arrangement of objects<br>The number of unique permutations of n distinct objects is:<br>N! = n*(n-1)*(n-2)*...*2*1<br>A combination is an unordered arrangement of objects<br><img src=""Screenshot 2023-04-24 at 9.08.12 AM.png""><img src=""Screenshot 2023-04-24 at 9.07.49 AM.png""><img src=""Screenshot 2023-04-24 at 9.04.46 AM.png""><img src=""Screenshot 2023-04-24 at 8.56.09 AM.png""><br><img src=""Screenshot 2023-04-26 at 10.10.46 AM.png""><br><img src=""Screenshot 2023-04-24 at 8.55.17 AM.png""><img src=""Screenshot 2023-04-24 at 8.54.22 AM.png""><img src=""Screenshot 2023-04-24 at 8.47.57 AM.png"">"	CS109 statistics
D-S?Vn&uVA	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Variance	"Measures how far each datum is from the mean, and thus from every number in the set<br>Square of the standard deviation (SD or σ)<br>In markets, denoted σ<sup>2</sup>, and measures volatility &amp; market security&nbsp;<br>Take the differences between each number in the dataset and the mean, square the differences to make them positive, and divide the sum of the squares by the number of values in the dataset.<br><b>Pitfalls:</b>&nbsp;Outliers skew outcomes because of squares; often variation is what you pass through to get SD<br>Visually, the larger the variance, the fatter the probability distribution would be<br><img src=""Screenshot 2023-04-24 at 8.37.23 AM.png""><br><img src=""Screenshot 2023-04-24 at 5.32.06 PM.png""><br><br><img src=""Screenshot 2023-04-24 at 10.17.09 AM.png""><br><img src=""Screenshot 2023-04-24 at 9.32.51 AM.png""><br>Expectation -Measures a Probability Mass Function (PMF's) center of gravity"	CS109 statistics
Q_:hjj4Z@-	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Intro Probability, 3 Axioms, Sample Space / Event	"<b>Sample Space, S:</b>&nbsp;Set of all possible experiment outcome<br><b>Event, E:</b>&nbsp;Some subset of S (E \subseteq S)<br><img src=""Screenshot 2023-04-26 at 10.39.47 AM.png""><br><img src=""Screenshot 2023-04-26 at 10.45.01 AM.png""><br><img src=""Screenshot 2023-04-26 at 10.47.25 AM.png""><br><img src=""Screenshot 2023-04-24 at 9.23.49 AM.png""><br><br>"	CS109 statistics
Fzy{-U5ZiW	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Linear Algebra Basics Review	-A <b>vector </b>is a tuple of real numbers (scalars), the components of the vector<br>-v \in R^d because they can exist in any number of dimensions; they always have magnitude and direction<br>-the&nbsp;<b>norm</b>&nbsp;of a vector, or ||v||, is equal to the root of the sum of the squares of the components<br>-if v=[v<sub>1</sub>, ..., v<sub>n</sub>], then ||v||=sqrt(sum(v<sub>1</sub><sup>2</sup>, ..., v<sub>n</sub><sup>2</sup>))<br>-v-hat is the&nbsp;<b>normalization of v</b>, i.e. (1) unit norm, (2)direction unchanged; intuitively captures direction &amp; orientation of v<br>-v-hat=[(v<sub>1</sub>/||v||), (v<sub>2</sub>/||v||), ..., (v<sub>n</sub>/||v||)]<br><br><b>Vector Operations</b><br><ol><li><b>Addition</b>&nbsp;legal as long as added vectors have same dimensionality; add values in same axes for final result</li><li><b>Subtraction</b>&nbsp;- same rules as addition<br></li><li><b>Centroid</b>&nbsp;of two vectors is the vector to the midpoint of the line joining those vectors' ends; centroid = m = (v<sub>1</sub>+v<sub>2</sub>)/2<br></li><li><b>Scalar Multiplication</b>&nbsp;- multiply vector components by a scalar constant<br></li><ol><li>Ratio of different coordinates &amp; thus direction unchanged</li><li>The normalization itself is a scalar multiplication</li></ol><li><b>Dot Product</b>&nbsp;- A*B, A transpose B = a<sub>1</sub>b<sub>1</sub>&nbsp;+ a<sub>2</sub>b<sub>2</sub>&nbsp;+ ... + a<sub>n</sub>b<sub>n</sub><br></li><ol><li>If the dot product is positive, the vectors are in the same quadrant</li><li>If negative, they are in different quadrants</li><li>if zero, they are orthogonal to one another</li><li>the dot product of a vector with itself is the square of the norm</li></ol></ol><div><br></div><div>Just as a vector is a tuple of scalars, a&nbsp;<b>matrix is a tuple of vectors</b></div><div><ul><ul><li>Typically a capital letter represents a matrix<br></li><li>Matrix has m*n dimensions, where m is the number of rows and n is the number of columns</li><li><b>Matrix-vector product</b>:&nbsp;<br></li><ul><li>The number of columns in the matrix must match the dimensionality of the vector</li><li>If matrix P is m*n dimensions, and vector v is dimensionality n, then A=Pv is a vector with m dimensions&nbsp;</li></ul></ul></ul></div>	CS221
lzO+gl?m$*	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Poisson RV; Distribution	"<img src=""Screenshot 2023-04-24 at 9.56.39 AM.png""><img src=""Screenshot 2023-04-24 at 9.52.35 AM.png""><img src=""Screenshot 2023-04-24 at 9.52.30 AM.png"">"	CS109 statistics
B|v9!`IiGG	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Continuous Distributions	"<img src=""Screenshot 2023-04-24 at 10.14.02 AM.png""><img src=""Screenshot 2023-04-24 at 10.24.01 AM.png"">"	CS109 statistics
m[DDRI~9iR	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Equally Likely Outcomes; Distinguishable/Indistinguishable; Tons of Examples	"<img src=""Screenshot 2023-04-26 at 10.51.04 AM.png""><br><img src=""Screenshot 2023-04-26 at 10.52.10 AM.png""><br><img src=""Screenshot 2023-04-26 at 10.52.41 AM.png""><br><img src=""Screenshot 2023-04-26 at 10.59.44 AM.png""><img src=""Screenshot 2023-04-26 at 11.01.59 AM.png""><br><img src=""Screenshot 2023-04-26 at 11.03.32 AM.png"">"	CS109 Example formula statistics
JTHRZP}V(P	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Conditional prob; Bayes'; Corollaries of Axioms; Zika; Monty Hall	"<img src=""Screenshot 2023-04-26 at 11.06.34 AM.png""><img src=""Screenshot 2023-04-26 at 11.07.22 AM.png""><img src=""Screenshot 2023-04-26 at 11.12.25 AM.png""><img src=""Screenshot 2023-04-26 at 11.12.40 AM.png""><img src=""Screenshot 2023-04-26 at 11.25.17 AM.png""><br><br><img src=""Screenshot 2023-04-26 at 11.27.26 AM.png""><img src=""Screenshot 2023-04-26 at 11.27.52 AM.png""><br><br><br><br><img src=""Screenshot 2023-04-26 at 11.31.17 AM.png""><img src=""Screenshot 2023-04-26 at 11.32.55 AM.png""><img src=""Screenshot 2023-04-26 at 11.33.22 AM.png""><br><img src=""Screenshot 2023-04-26 at 11.38.52 AM.png""><img src=""Screenshot 2023-04-26 at 11.41.10 AM.png""><img src=""Screenshot 2023-04-26 at 11.44.38 AM.png""><img src=""Screenshot 2023-04-26 at 11.44.45 AM.png""><br><img src=""Screenshot 2023-04-27 at 2.47.33 PM.png"">"	CS109 Example formula statistics
OS7od=d{bA	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Independence; Dice Rolls; Coin Flips; Complements; Trials	"Events E and F are independent iff:&nbsp;<b>P(EF) = P(E)P(F) &amp; P(E|F)=P(E)<br></b>knowledge of F's outcome does not change our expectation for E.<br>If two events are independent, so too are their complements<br><img src=""Screenshot 2023-04-26 at 11.51.11 AM.png""><img src=""Screenshot 2023-04-26 at 11.52.10 AM.png""><img src=""Screenshot 2023-04-26 at 11.54.21 AM.png""><img src=""Screenshot 2023-04-26 at 11.57.07 AM.png""><img src=""Screenshot 2023-04-26 at 12.01.02 PM.png""><img src=""Screenshot 2023-04-26 at 12.01.43 PM.png"">"	CS109 Example formula statistics
HF*N0jsXb:	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	De Morgan's Laws; Hash Tables	"<img src=""Screenshot 2023-04-26 at 12.06.20 PM.png""><img src=""Screenshot 2023-04-26 at 12.04.03 PM.png""><img src=""Screenshot 2023-04-26 at 12.06.20 PM.png""><br><img src=""Screenshot 2023-04-26 at 12.08.00 PM.png""><br><br><div><span style=""color: var(--field-fg); background-image: ; background-position-x: ; background-position-y: ; background-size: ; background-repeat-x: ; background-repeat-y: ; background-attachment: ; background-origin: ; background-clip: ;"">– not (P &amp; Q) is equivalent to not P or not Q; not (P&nbsp;</span><span style=""color: var(--field-fg); background-image: ; background-position-x: ; background-position-y: ; background-size: ; background-repeat-x: ; background-repeat-y: ; background-attachment: ; background-origin: ; background-clip: ;"">or Q) is equivalent to not P and not Q</span></div><div>These laws make coding easier with more logical short-circuiting; if(!p v !q) &gt;&gt;&gt;&gt;&gt; if(!(p &amp;&amp; q))</div>"	CS109 Example formula logic statistics
"eulkDZ#r`1"	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	2 Types of Random Variables: Bernoulli and Binomial	Bernoulli Variable - formalizes the idea of a biased coin fliip where heads and tails are generalized to be success and failure<br>Binomial Variable - collection of independent Bernoulli trials, where each Bernoulli trial succeeds with the same probability<br>--Binomial variable counts the number of successful bernoulli trials in the collection, attaches a probability to each possible count, and comes with easily remembered general formulas for expectation and variance.	CS109 Example formula statistics
E`Q=k)8<+6	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	AI Search Algorithms	"<img src=""Screenshot 2023-04-30 at 8.53.09 PM.png""><img src=""Screenshot 2023-04-30 at 8.53.40 PM.png""><img src=""Screenshot 2023-04-30 at 8.54.07 PM.png""><img src=""Screenshot 2023-04-30 at 8.57.19 PM.png""><img src=""Screenshot 2023-04-30 at 8.57.44 PM.png""><br><br><br><img src=""Screenshot 2023-04-30 at 9.00.04 PM.png""><img src=""Screenshot 2023-04-30 at 9.03.35 PM.png""><img src=""Screenshot 2023-04-30 at 9.04.17 PM.png""><img src=""Screenshot 2023-04-30 at 9.04.37 PM.png""><img src=""Screenshot 2023-04-30 at 9.07.19 PM.png"">"	aiml CS221 Example formula statistics
CrhK8HuIz0	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	BASIX: Training; Loss	"Training - determining (learning) good values for all weights and the bias from labeled examples<br>In supervised learning, ML algorithms build models by examining many examples and attempting to find a model that minimizes loss -&nbsp;<b>Empirical risk minimization<br><br>Loss</b>&nbsp;is the penalty for a bad prediction, i.e. a number indicating&nbsp;<i>how bad</i>&nbsp;the model's prediction was. If prediction perfect, loss zero. Goal of training is to find weights and biases that minimize loss across all examples.&nbsp;<br><br><b>Squared loss</b>: the square of the loss; difference between label and prediction<br>(observation-prediction(x))^2<br>(y-y')^2<br><br><b>Mean Squared Error</b>&nbsp;is average squared loss per example over the whole dataset. It can be calculated by summing squared losses and then dividing by the number of examples:<br><img src=""Screenshot 2023-05-10 at 2.41.36 PM.png""><br>Where (x, y) is an example where&nbsp;<br><ul><li>x is the set of features that the model uses to make predictions</li><li>y is the example's label</li><li>Prediction(x) is a function of the weights and bias in combination with the set of features x</li><li>D is a data set containing many labeled examples of (x, y) pairs</li><li>N is the number of examples in D</li></ul><div><br></div>"	aiml CS221 formula
KrXzvwv-Ds	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	BASIX: Gradient Descent	"<div>Gradient descent, conceptually:&nbsp;</div><div>Gradient descent helps minimize loss by generalizing a negative gradient step to a broader function.</div><div>In the same way you might take a derivative of a function and get its critical point to minimize it, you take the gradient of a loss function and optimize for the&nbsp;<i>least</i>&nbsp;loss by performing a gradient descent.</div><div>The&nbsp;<b>Gradient vector</b>&nbsp;has direction and magnitude. Gradient descent algos multiply the gradient by a scalar known as&nbsp;<b>learning rate/step size</b>&nbsp;to determine next point. If the gradient magnitude is 2.5 and the learning rate is 0.1, the gradient descent algo will pick next point .025 away from the previous point.&nbsp;</div><div><img src=""Screenshot 2023-05-10 at 2.53.04 PM.png""><br></div><div><br></div><div>A too-small learning rate can take forever; a too-large learning rate will probably cause the next point to jump over its desired optimal position.</div><div><br></div><div>a&nbsp;<b>batch</b>&nbsp;is the total number of examples used to calculate a single iteration of the gradient. We assumed so far that the batch is the whole set. However, larger datasets usually need many batches for redundant data; redundancy becomes more likely as batch size grows. Some redundancy helps smooth noisy gradients, but enormous batches tend to not be MUCH more predictive than smaller batches.</div><div><br></div><div><b>Stochastic Gradient Descent</b>&nbsp;uses a batch size of 1 per iteration in order to choose random examples from the dataset and noisily estimate a big average from a much smaller one. ""Stochastic"" indicates the chosen example is random for each batch.<br></div><div><br></div><div><b>Mini-batch Stochastic GD</b>&nbsp;compromises between full-batch and SGD. Mini-batches comprise 10-10,000 examples at random and can reduce the amount of noise of SGD without the efficiency loss of full batch.&nbsp;<br></div>"	aiml CS221 formula
q;&=s=EF;O	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	ML Glossary: EZ formulas; Linear Predictors; Classification; regression	"<ul><li><i><b>w</b>&nbsp;</i>is a linear model/weight vector \in \reals^d;&nbsp;<u><b>ɸ(x) = [ɸ1(x) ... ɸd(x)] \in R^d</b>&nbsp;</u> (vertical within brackets) is a feature vector \in \reals^d</li><li><b>Score</b><span style=""font-weight: bold;"">&nbsp;s(x, w):&nbsp;</span><b>s(x, w) = w \dot ɸ(x)&nbsp;of (ɸ(x), y) </b>∈R^d×R&nbsp;for linear model of weights w \in R^d given by inner product:<b>&nbsp;</b></li><li><b>Linear classifier</b> - given w &amp; ɸ(x), binary linear classifier f_w given by:<img src=""Screenshot 2023-05-10 at 3.19.57 PM.png"" width=""313""></li><li><b>Margin</b>&nbsp;<b><u>m(x, y, w) = s(x, w) x y</u>&nbsp;</b>&nbsp;\in \reals of (ɸ(x), y) \in R^d x {-1, +1} for <b>w</b>&nbsp;quantifies prediction confidence; larger value = better.&nbsp;</li><li><b>Linear Regression:&nbsp;<u>f_w(x) = s(x, w)</u>&nbsp;</b>given <b>w</b> &amp;&amp; <b>ɸ(x)</b></li><li><b>Residual:&nbsp;</b><u><b>res(x, y, w) = f_w(x) - y</b></u>&nbsp; \in \reals is defined as being the amount by which the prediction overshoots the target y:&nbsp;</li></ul>"	aiml CS221 Example formula
f]kb1}a!d=	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	BASIX: Loss Minimization	"<ul><li>a <b>Loss Function</b>&nbsp;<b><u>Loss(x, y, w)</u>&nbsp;</b>quantifies how unhappy we are with the weights w of the model in prediction task of output y from input x.&nbsp;</li><li><b>Classification</b>&nbsp;of a case x of true label y \in {-1, +1} with <b>w</b>&nbsp;can be done with the predictor <u><b>f_w(x)≜sign(s(x,w))</b></u>. The margin&nbsp;<b>m(x, y, w)</b>&nbsp;can be used:</li><ul><li><img src=""Screenshot 2023-05-10 at 3.51.29 PM.png"" width=""497""><br></li></ul><li><b>Regression case</b>&nbsp;of sample x of true label&nbsp;<b>y \in \reals</b>&nbsp;with w can be done with predictor <u><b>f_w​(x)≜s(x,w)</b>.</u>&nbsp;Quality of regression described by margin res(x, y, w)</li><li><img src=""Screenshot 2023-05-10 at 3.53.49 PM.png"" width=""507""><br></li><li><b>Minimize loss using&nbsp;</b><img src=""Screenshot 2023-05-10 at 3.56.54 PM.png"" width=""469""><br></li></ul>"	aiml CS221 Example formula
hAcoL[(wq9	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Pinecone Vector Database	"<br><ol><li>Vector Databases &amp; Vector Search take advantage of new semantic richness technologies to access better, faster, and more accurate query results, parsing semantic intent instead of just query tokens.<br>We generate vector embeddings with embedding models<br>-Good example is nearest-neighbor search in which other closely related search terms can be simultaneously retrieved, e.g. ""Monday"" pulls up all other days of the week<br>-Vector databases best meet scaling demand<br></li><li>Pinecone is one such Vector database, its main advantages being:</li><ol><li>low-latency query ability, even with billions of items</li><li>Live index updates when you add, edit, or delete data</li><li>metadata filters + vector search = faster results</li><li>""Pods"" are Kubernetes Pods within whatever region the project specifies</li><ol><li>p1 pods are performance-optimized, can hold 1mil vectors with 768 dimension given metadata nuance &amp; cardinality</li></ol></ol></ol>"	aiml fullstack webdev
xt-FR];Vq[	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	📃CS103 Theorems/Proofwriting	"Theorem: For any set A, we have |A| = |A|.<br>Theorem: If A, B, and C are sets where |A| = |B| and |B| = |C|, then |A| = |C|.<br>Theorem: |[0, 1]| = |[0, 2]|.<br>Theorem: If f : A → B is surjective and g : B → C is surjective, then g ∘ f : A → C is also surjective.<br>Theorem: For any function f : A → A, if f is an involution, then f is injective.<br><span style=""font-weight: 700; font-style: italic;"">Theorem:&nbsp;</span>Let&nbsp;<span style=""font-style: italic;"">G&nbsp;</span>= (<span style=""font-style: italic;"">V</span>,&nbsp;<span style=""font-style: italic;"">E</span>) be a graph and&nbsp;let&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>⊆&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>be a set. Then&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is a vertex cover of&nbsp;<span style=""font-style: italic;"">G&nbsp;</span>if and only if&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>–&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is an independent set in&nbsp;<span style=""font-style: italic;"">G</span>.&nbsp;<br>Ramsey's Theorem:&nbsp;<span style=""font-weight: 700;"">For any natural number n, there is a number R(n) where for any clique with R(n) or more nodes that’s painted red or blue, that clique has either a red n-clique or a blue n-clique, and for all cliques with fewer than R(n) nodes, there’s a way to paint it red and blue so it has no red n-cliques and no blue n-cliques.&nbsp;<br>____________________________________________________<br></span><span style=""font-weight: 700; font-style: italic;"">Theorem:&nbsp;</span>Let&nbsp;<span style=""font-style: italic;"">G&nbsp;</span>= (<span style=""font-style: italic;"">V</span>,&nbsp;<span style=""font-style: italic;"">E</span>) be a graph and&nbsp;let&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>⊆&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>be a set. Then&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is a vertex cover of&nbsp;<span style=""font-style: italic;"">G&nbsp;</span>if and only if&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>–&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is an independent set in&nbsp;<span style=""font-style: italic;"">G</span>.&nbsp;<br><div><div><span style=""font-weight: 700; font-style: italic;"">Lemma 1:&nbsp;</span>Let&nbsp;<span style=""font-style: italic;"">G&nbsp;</span>= (<span style=""font-style: italic;"">V</span>,&nbsp;<span style=""font-style: italic;"">E</span>) be a graph and let&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>⊆&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>be a set. If&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is a vertex cover of&nbsp;<span style=""font-style: italic;"">G</span>, then&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>–&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is an independent set of&nbsp;<span style=""font-style: italic;"">G</span>.<br></div></div><div><div><div><div><div><div><div><div><span style=""font-weight: 700; font-style: italic;"">Proof:&nbsp;</span>Assume&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is a vertex cover of&nbsp;<span style=""font-style: italic;"">G</span>. We need to show that&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>–&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is an independent set of&nbsp;<span style=""font-style: italic;"">G</span>. To do so, pick any nodes&nbsp;<span style=""font-style: italic;"">x</span>,&nbsp;<span style=""font-style: italic;"">y&nbsp;</span>∈&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>–&nbsp;<span style=""font-style: italic;"">C</span>; we will show that {<span style=""font-style: italic;"">x</span>,&nbsp;<span style=""font-style: italic;"">y</span>} ∉&nbsp;<span style=""font-style: italic;"">E</span>.</div><div>Suppose for the sake of contradiction that {<span style=""font-style: italic;"">x</span>,&nbsp;<span style=""font-style: italic;"">y</span>} ∈&nbsp;<span style=""font-style: italic;"">E</span>. Because&nbsp;<span style=""font-style: italic;"">x</span>,&nbsp;<span style=""font-style: italic;"">y&nbsp;</span>∈&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>–&nbsp;<span style=""font-style: italic;"">C</span>, we know that&nbsp;<span style=""font-style: italic;"">x&nbsp;</span>∉&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>and&nbsp;<span style=""font-style: italic;"">y&nbsp;</span>∉&nbsp;<span style=""font-style: italic;"">C</span>. However, since&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is a vertex cover of&nbsp;<span style=""font-style: italic;"">G&nbsp;</span>and {<span style=""font-style: italic;"">x</span>,&nbsp;<span style=""font-style: italic;"">y</span>} ∈&nbsp;<span style=""font-style: italic;"">E</span>, we also see that&nbsp;<span style=""font-style: italic;"">x&nbsp;</span>∈&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>or&nbsp;<span style=""font-style: italic;"">y&nbsp;</span>∈&nbsp;<span style=""font-style: italic;"">C</span>, contradicting our previous statement.</div><div>We’ve reached a contradiction, so our assumption was wrong. Therefore, we have {<span style=""font-style: italic;"">x</span>,&nbsp;<span style=""font-style: italic;"">y</span>} ∉&nbsp;<span style=""font-style: italic;"">E</span>, as required. ■&nbsp;</div><div><br></div><div><div><div><div><div><div><span style=""font-weight: 700; font-style: italic;"">Lemma 2:&nbsp;</span>Let&nbsp;<span style=""font-style: italic;"">G&nbsp;</span>= (<span style=""font-style: italic;"">V</span>,&nbsp;<span style=""font-style: italic;"">E</span>) be a graph and let&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>⊆&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>be a set. If&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is not a vertex cover of&nbsp;<span style=""font-style: italic;"">G</span>, then&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>–&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is not an independent set of&nbsp;<span style=""font-style: italic;"">G</span>.</div><div><span style=""font-weight: 700; font-style: italic;"">Proof:&nbsp;</span>Assume&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is not a vertex cover of&nbsp;<span style=""font-style: italic;"">G.&nbsp;</span>We need to show that&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>–&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is not an independent set of&nbsp;<span style=""font-style: italic;"">G</span>.</div><div>Since&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is not a vertex cover of&nbsp;<span style=""font-style: italic;"">G</span>, we know that there exists nodes&nbsp;<span style=""font-style: italic;"">x</span>,&nbsp;<span style=""font-style: italic;"">y&nbsp;</span>∈&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>where {<span style=""font-style: italic;"">x</span>,&nbsp;<span style=""font-style: italic;"">y</span>} ∈&nbsp;<span style=""font-style: italic;"">E</span>, where&nbsp;<span style=""font-style: italic;"">x&nbsp;</span>∉&nbsp;<span style=""font-style: italic;"">C</span>, and where&nbsp;<span style=""font-style: italic;"">y&nbsp;</span>∉&nbsp;<span style=""font-style: italic;"">C</span>. Because&nbsp;<span style=""font-style: italic;"">x&nbsp;</span>∈&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>and&nbsp;<span style=""font-style: italic;"">x&nbsp;</span>∉&nbsp;<span style=""font-style: italic;"">C</span>, we know that<br><span style=""font-style: italic;"">x&nbsp;</span>∈&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>–&nbsp;<span style=""font-style: italic;"">C</span>. Similarly, we see that&nbsp;<span style=""font-style: italic;"">y&nbsp;</span>∈&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>–&nbsp;<span style=""font-style: italic;"">C</span>.</div><div>This means that {<span style=""font-style: italic;"">x</span>,&nbsp;<span style=""font-style: italic;"">y</span>} ∈&nbsp;<span style=""font-style: italic;"">E</span>, that&nbsp;<span style=""font-style: italic;"">x&nbsp;</span>∈&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>–&nbsp;<span style=""font-style: italic;"">C</span>, and that<br><span style=""font-style: italic;"">y&nbsp;</span>∈&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>–&nbsp;<span style=""font-style: italic;"">C</span>, and therefore that&nbsp;<span style=""font-style: italic;"">V&nbsp;</span>–&nbsp;<span style=""font-style: italic;"">C&nbsp;</span>is not an independent set of&nbsp;<span style=""font-style: italic;"">G</span>, as required. ■&nbsp;</div></div></div></div></div></div></div></div></div></div></div></div></div><div><span style=""font-weight: 700;"">____________________________________________________</span><br></div><div><div>Theorem: If f : A → B is surjective and g : B → C is surjective, then g ∘ f : A → C is also surjective.<br></div><div>Proof: Let f : A → B and g : B → C be arbitrary surjections.</div><div>We will prove that the function g ∘ f : A → C is also</div><div>surjective. To do so, we will prove that for any c ∈ C, there</div><div>is some a ∈ A such that (g ∘ f)(a) = c. Equivalently, we</div><div>will prove that for any c ∈ C, there is some a ∈ A such that</div><div>g(f(a)) = c.</div><div>Consider any c ∈ C. Since g : B → C is surjective, there is</div><div>some b ∈ B such that g(b) = c. Similarly, since f : A → B is</div><div>surjective, there is some a ∈ A such that f(a) = b. Then</div><div>we see that</div><div>g(f(a)) = g(b) = c,</div><div>which is what we needed to show</div></div><div><span style=""font-weight: 700;"">____________________________________________________</span><span style=""font-weight: 700;""><br></span></div><div>Theorem: If f : A → B is an injection and g : B → C is an injection, then the function g ∘ f : A → C is also an injection.<br>Let f : A → B and g : B → C be arbitrary injections. We<div>will prove that the function g ∘ f : A → C is also injective.</div><div>To do so, consider any a₁, a₂ ∈ A where a₁ ≠ a₂. We will</div><div>prove that (g ∘ f)(a₁) ≠ (g ∘ f)(a₂). Equivalently, we need to</div><div>show that g(f(a₁)) ≠ g(f(a₂)).</div><div>Since f is injective and a₁ ≠ a₂, we see that f(a₁) ≠ f(a₂).</div><div>Then, since g is injective and f(a₁) ≠ f(a₂), we see that</div><div>g(f(a₁)) ≠ g(f(a₂)), as required</div></div><div><span style=""font-weight: 700;"">____________________________________________________</span><span style=""font-weight: 700;""><br></span></div><div>Theorem: If A, B, and C are sets where |A| = |B| and |B| = |C|, then |A| = |C|.<br>Consider any sets A, B, and C where |A| = |B| and |B| = |C|.<div>We need to prove that |A| = |C|. To do so, we need to show that there is a bijection from A to C.</div><div>Since |A| = |B|, we know that there is a some bijection f : A → B. Similarly, since |B| = |C| we know that there is at least one bijection g : B → C.</div><div>Consider the function g ∘ f : A → C. Since g and f are bijections, their composition is a bijection. Thus g ∘ f is a bijection from A to C, so |A| = |C|, as required.</div></div><div><span style=""font-weight: 700;"">____________________________________________________</span><span style=""font-weight: 700;""><br></span></div><div>Theorem: For any set A, we have |A| = |A|.<br>Consider any set A, and let f : A → A be the function defined as f(x) = x. We will prove that f is a bijection.<div><br></div><div>First, we’ll show that f is injective. Pick any x₁, x₂ ∈ A where f(x₁) = f(x₂). We need to show that x₁ = x₂. Since f(x₁) = f(x₂), we see by definition of f that x₁ = x₂, as required.</div><div><br></div><div>Next, we’ll show that f is surjective. Consider any y ∈ A. We will prove that there is some x ∈ A where f(x) = y. Pick x = y. Then x ∈ A (since y ∈ A) and f(x) = x = y, as required.</div></div><div><span style=""font-weight: 700;"">____________________________________________________</span><span style=""font-weight: 700;""><br></span></div><div><div>Theorem: For any function f : A → A, if f is an involution, then f is injective.<br>Consider any function f : A → A that’s an involution. We will prove that f is injective. To do so, choose any a₁, a₂ ∈ A where a₁ ≠ a₂. We need<div>to show that f(a₁) ≠ f(a₂). We’ll proceed by contradiction.&nbsp;</div><div><br></div><div>Suppose that f(a₁) = f(a₂). This means f(f(a₁)) = f(f(a₂)), which in turn tells us a₁ = a₂ because f is an involution. But that’s impossible, since a₁ ≠ a₂. We’ve reached a contradiction, so our assumption was wrong. Therefore, we see that f(a₁) ≠ f(a₂), as required.</div></div><div><span style=""font-weight: 700;"">____________________________________________________</span><span style=""font-weight: 700;""><br></span></div></div><div>Theorem: |[0, 1]| = |[0, 2]|<br>—Consider the function f : [0, 1] → [0, 2] defined as f(x) = 2x. We will prove that f is a bijection.<div><div>—First, we’ll show that f is injective. Pick any x₁, x₂ ∈ [0, 1] where f(x₁) = f(x₂). We need to show that x₁ = x₂. To see this, notice that since f(x₁) = f(x₂), we see that 2x₁ = 2x₂, which in turn tells us that x₁ = x₂, as required.</div><div>—Finally, we will show that f is surjective. To do so, consider&nbsp;any y ∈ [0, 2]. We need to show there is some x ∈ [0, 1] where f(x) = y. Let x = y/2. Since y ∈ [0, 2], we know 0 ≤ y ≤ 2, and therefore that 0 ≤ y/2 ≤ 1. We picked x = y/2, so we know that 0 ≤ x ≤ 1, which in turn means x ∈ [0, 1]. Moreover, notice that f(x) = 2x = 2(y/₂) = y, so f(x) = y, as required.</div></div></div><div><div><span style=""font-weight: 700;"">____________________________________________________</span><span style=""font-weight: 700;""><br></span></div></div><div>Useful Given Graph Theorems: path length, cycle length, CCs of G</div><div><img src=""Screenshot 2023-05-23 at 10.41.02 AM.png""><span style=""font-weight: 700;""><br></span></div><div><div><span style=""font-weight: 700;"">____________________________________________________</span><span style=""font-weight: 700;""><br></span></div></div><div><div>Pigeonhole Principle<br></div><div>If&nbsp;<span style=""font-style: italic;"">m&nbsp;</span>objects are distributed into&nbsp;<span style=""font-style: italic;"">n&nbsp;</span>bins and&nbsp;<span style=""font-style: italic;"">m&nbsp;</span>&gt;&nbsp;<span style=""font-style: italic;"">n</span>, then at least one bin will contain at least two objects.</div><div>with n nodes, there are n possible degrees&nbsp;</div></div><div><div><span style=""font-weight: 700;"">____________________________________________________</span><span style=""font-weight: 700;""><br></span></div></div><div>Multi-Function Composition<br>● Suppose that we have two functions f : A → B and g : B → C.<div>● The composition of f and g, denoted g ∘ f, is a function where&nbsp;g ∘ f : A → C, and&nbsp;(g ∘ f)(x) = g(f(x)).</div><div>● A few things to notice: The domain of g ∘ f is the domain of f. Its codomain is the codomain of g.</div><div>● Even though the composition is written g ∘ f, when evaluating (g ∘ f)(x), the function f is evaluated first</div></div><div><div><span style=""font-weight: 700;"">____________________________________________________</span><span style=""font-weight: 700;""><br></span></div></div><div><div>– Prove universal statements by making arbitrary choices</div><div>– prove existential statements by making concrete choices</div><div>– prove “FP, then Q” by assuming P and proving Q</div><div>– number formulas when referring to them</div><div>–summarize what was shown in proofs by cases</div><div>– articulate your start and end points</div></div><div><div><span style=""font-weight: 700;"">____________________________________________________</span><span style=""font-weight: 700;""><br></span></div></div><div><div><div><div>A&nbsp;<span style=""font-weight: 700; font-style: italic;"">proof by induction&nbsp;</span>is a way to use the principle of mathematical induction to show that some result is true for all natural numbers&nbsp;<span style=""font-style: italic;"">n</span>.</div><div>In a proof by induction, there are three steps:</div></div></div><div><div><div><div><div><div><div><div>Prove that&nbsp;<span style=""font-style: italic;"">P</span>(0) is true.<br>This is called the&nbsp;<span style=""font-weight: 700; font-style: italic;"">basis&nbsp;</span>or the&nbsp;<span style=""font-weight: 700; font-style: italic;"">base case</span>.</div><div>Prove that if&nbsp;<span style=""font-style: italic;"">P</span>(<span style=""font-style: italic;"">k</span>) is true, then&nbsp;<span style=""font-style: italic;"">P</span>(<span style=""font-style: italic;"">k</span>+1) is true.</div><div>This is called the&nbsp;<span style=""font-weight: 700; font-style: italic;"">inductive step</span>.<br>The assumption that&nbsp;<span style=""font-style: italic;"">P</span>(<span style=""font-style: italic;"">k</span>) is true is called the&nbsp;<span style=""font-weight: 700; font-style: italic;"">inductive&nbsp;</span><span style=""font-weight: 700; font-style: italic;"">hypothesis</span>.</div></div></div></div></div></div></div></div><div><div><div>Conclude, by induction, that&nbsp;<span style=""font-style: italic;"">P</span>(<span style=""font-style: italic;"">n</span>) is true for all&nbsp;<span style=""font-style: italic;"">n&nbsp;</span>∈ N.&nbsp;</div></div></div></div>"	CS103
E{o%7bc/vU	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	How to Read a Smart Contract	<ol><li>Gives insight into distributed ownership, its capabilities, its popularity.&nbsp;</li><li>Gain individual transaction details</li><li>A smart contract is a piece of code that executes a blockchain action when the time is right. Parties must digitally sign and permit the contract to execute.</li><li>Contract addresses for NFT collections can be found on Etherscan</li><ol><li>Etherscan Header:</li><ol><li><b>Balance+Value</b>: how much coin the contract holds</li><li><b>My Name Tag</b>: if logged in, you can write notes to yourself here</li><li><b>Creator</b>: The walllet that created the contract, and the original transaction where the creation occurred</li></ol><li>Etherscan Body:</li><ol><li><b>transaction confirmation</b><br></li></ol></ol></ol>	blockchain
"v`c#%S2,DF"	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Powershell Commands	Get-Process: shows running processes<br>exit: exits<br>The URI path displayed when powershell opens can be aliased into your .bash_profile as follows e.g.&nbsp;<br><i>alias powershell='</i>/usr/local/microsoft/powershell/7-lts/pwsh'&nbsp;<br>Powershell accepts &amp; returns&nbsp;<i>echo</i>&nbsp;commands<br><i>whoami</i>&nbsp;displays current user<br><i>ls</i>&nbsp;lists directory items,&nbsp;<i>dir</i>&nbsp;shows with line breaks &amp; metadata	formula
"mSg?CKN*%#"	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Python Env Shell Path Setup (NLPCourse)	"<div>Env Setup:</div><ul><li><i>cd</i></li><li><i>bash ~/Downloads/Anaconda3-2023.03-1-MacOSX-x86-64.pkg</i></li><li><i>conda init bash</i></li><li><i>conda activate nlp_course</i></li><li><i>jupyter notebook</i></li></ul><div><i>Environment Setup by Django founder:</i></div><div><a href=""https://jacobian.org/2019/nov/11/python-environment-2020/"">https://jacobian.org/2019/nov/11/python-environment-2020/</a><i><br></i></div><div><br></div><div>Conda Managing Environments</div><div><a href=""https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#activating-an-environment"">https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#activating-an-environment</a><br></div><div><br></div><div>pipx</div><div><a href=""https://pypa.github.io/pipx/"">https://pypa.github.io/pipx/</a><br></div><div><br></div><div>poetry</div><div><a href=""https://python-poetry.org/docs/#installing-with-the-official-installer"">https://python-poetry.org/docs/#installing-with-the-official-installer</a><br></div>"	aiml Example formula
Gj-73{r9!G	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	God-Tier Excel Shortcuts	"-Click inside any cell and press&nbsp;<b>ctrl-shift-L</b>&nbsp;to create a filter from that cell. The same shortcut also deactivates that cell<br>-select any set of cells and press&nbsp;<b>ctrl-T</b>&nbsp;to create a table, which will be much more easily styled and visually organized into a pivot table<br>-<b>ctrl-arrow keys</b>&nbsp;will instantly navigate you to the farthest filled value in the dataset in a certain direction, adding&nbsp;<b>shift</b>&nbsp;highlights<br>-highlight a set of cells and press&nbsp;<b>ctrl-1</b>&nbsp;to bring up cell formatting options<br>-<b>alt-equals</b>&nbsp;automatically creates a sum function for you and guesses what cells you want to be summed into the selected one<br>-to copy-paste a value without its formula behind it,&nbsp;<b>ctrl-c and then alt-e-s-v</b>&nbsp;brings up the paste special options box<br>-<b>alt-enter</b>&nbsp;adds a new line to the current cell without skipping to the next one<br>-<b>ctrl-a</b>&nbsp;then&nbsp;<b>alt-f1</b>&nbsp;creates a default chart for all the data in your set<br><br><b>Rows and Columns</b><br>-<b>ctrl-e</b>&nbsp;or&nbsp;<b>flash fill</b>&nbsp;uses a single or few values to autofill the rest of the values in the selected set, guessing of course<br>-<b>shift-space</b>&nbsp;highlights a row,&nbsp;<b>ctrl-space</b>&nbsp;highlights a column,&nbsp;<b>ctrl-plus</b>&nbsp;adds a new one of either,&nbsp;<b>ctrl-minus&nbsp;</b>removes one<br>-<b>hold shift and click-drag</b>&nbsp;to actually rearrange data instead of swapping values<br>-<b>ctrl-zero</b>&nbsp;hides a column<b>, ctrl-9</b>&nbsp;hides a row<br>-<b>alt-semicolon</b>&nbsp;shows any hidden rows or columns<br><br>-instant timestamp:&nbsp;<b>ctrl-semicolon</b>&nbsp;or&nbsp;<b>ctrl-shift-colon</b><br>-<b>f5-alt-s-o-x</b>&nbsp;shows all cells which DON'T have formulas behind them<br><br><br><ol><li><div>VLOOKUP, Xlookup
Pivot Tables
Lookup Formulas
Nested Formulas
IF Sumifs Vlookup xlookup Pivot table Conditional formatting
$ in formulae
ctrl ; to insert today's date
Ctrl + T</div>
<div>Alt + A T</div>
<div>Alt + W F R</div>
<div>Alt + ArrowDown</div>
<div>Copy / Paste Special-Transpose. Turn rows into columns and columns into rows.</div>
<div>Macros / Record Macro. You don’t need to know how to write a macro, excel will do it for you. If you are doing something repetitive just have excel record your actions and excel will write a macro for you. Super easy introduction to VBA, and/or a good way to get the VBA code for something (like me) if you are too lazy to google it.</div>
<div>Index/Match. Vlookup on steroids.</div>
<div>Customize Quick Access Toolbar. Build your own ribbon of commands that you use most frequently.</div>
<div>Name Manager. Use names instead of ranges (eg A1:C3). So much easier to understand in formulas and really easy to update or change with the Name Manager.
Name Manager</div>
<div>Data Validation</div>
<div>Lookup Functions - VLookup, XLookup, Index, Match</div>
<div>Keyboard shortcuts</div>
<div>Charts based on Pivot Tables</div></li></ol><br><br>"	Example formula
l|I02haN$M	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	🗼SQL vs NoSQL	"<ol><li>Structured Query Language can perform CRUD operations using a universal language&nbsp;</li><ol><li>Several Relational Database Management Systems, or RDBMS: MySQL, PostgreSQL, Microsoft SQL Server</li><li>Created in 60s, became standard in the 80s, grew exponentially in the 90s</li></ol><li>Key DB attributes: Structure, storage scale, access<br></li><ol><li><b>Structure:&nbsp;</b></li><ol><li><b>Tables</b> where a row contains:</li><ol><li>primary keys, type-limited</li><li>attributes correspond to columns, also T-L</li><li>optional foreign keys link to other tables</li></ol><li><b>Constraints</b>&nbsp;where a column can only contain a certain variable type</li><li><b>Relations</b>&nbsp;use foreign keys to link data rows from disparate tables together<br></li><ol><li>used to substitute values, keep storage size down</li></ol></ol><li><b>Storage</b>: concentrated; there is a single node which contains a full copy of your data, not partitioned or segregated in any way unless using advanced strategies<br></li><li><b>Scale</b>:&nbsp;</li><ol><li>vertical; your machine must physically improve to improve computation speed; limited</li><li>horizontal; you need more machines to improve computation speed; some partitioning between master-Replica nodes becomes possible to offload master node load</li></ol><li><b>Access:</b><br></li><ol><li><b>Raw SQL</b>&nbsp;- SELECT * FROM...</li><li>direct connection to database</li><li>Object Relational Mappers help add data in a procedural way</li></ol></ol><li>NoSQL is anything else:&nbsp;</li><ol><li><b>Pro:</b>&nbsp;high-performance scaling<br></li><li><b>con:</b>&nbsp;queries much less flexible<br></li><li><b>Structure:</b>&nbsp;implementation-dependent<br></li><ol><li>Table, Document(JSON), Graph database<br></li><li>In general, you must know your key when looking for a query</li></ol><li><b>Storage:</b>&nbsp;inputs must be hashed</li><ol><li>To read records, pass key input through hashing program which knows WHICH data partition to search for</li></ol><li><b>Scale:</b>&nbsp;add more partitions; scale those partitions individually<br></li><ol><li>Typically your NoSQL engine will do this for you</li></ol><li><b>Access</b>:&nbsp;<b>Rest APIs</b>; CRUD in vendor-specific language<br></li></ol><li>When to use?</li><ol><li><b>SQL</b>:&nbsp;<br></li><ol><li>your access patterns aren't defined</li><li>you want to be able to perform flexible queries</li><li>you want to perform relational queries which can hop between different tables</li><li>when you want to enforce field constraints so malformed data can't be added to the DB</li><li>when you want to use a well-documented access language</li></ol><li><b>NoSQL:</b>&nbsp;<br></li><ol><li><b>Main advantage</b>: high-performance and low-latency at scale</li><li>Your access pattern IS defined</li><li>your primary keys are known; your inputs are predictable</li><li>when your data model best fits, i.e. graphs and documents</li></ol><li>Small project; low scale; unknown access patterns -&gt; SQL</li><li>large project; high scale; relational queries -&gt; SQL managed solution with read replicas, like Amazon Aurora or RDS</li><li>medium-large project with high scale and high performance -&gt; NoSQL, like DynamoDB or MongoDB</li></ol></ol><div><br></div><div>&nbsp;A relational database scales out reasonably
 well for reads (there is a clue in the name ""Read Replicas""), but there
 is still a single master, hence a bottleneck for writes. The design of 
KV stores was largely to get around this problem. Some of the 
constraints of a relational DB are relaxed to provide scalability (see 
CAP theorem).<br></div><div><br></div><div><br></div><div>SQLite</div><div>-good for small to medium size databases<br>-part of standard python library, no need to install anything<br>-Databases can be an actual DB file or an in-memory database that lives in RAM<br></div><div><br></div><div><b>MongoDB</b></div><div><ul><li>-NoSQL database like MySQL; does away with SQL data tables and one-to-many relationships between them</li><ul><li>Main-advantages: high-speed and flexible queries</li></ul><li>-Uses collections of documents to store particular types of data records</li><ul><li>typically these documents have JSON-like key-value pairs which makes it highly compatible with javascript</li><li>enables document-within-document relations, e.g. an author can have several books, saving some table construction which would be required in an SQL database</li></ul><li>Mongo shell allows you to modify data with no instance running online</li></ul></div>"	dataflow webdev
D44*0FU.hz	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	🧩Software Design Patterns	"Original ""Gang of Four"" Design patterns book, written for C++:<br>Notes from Design Patterns video by FireShip:&nbsp;<a href=""https://www.youtube.com/watch?v=tv-_1er1mWI"">https://www.youtube.com/watch?v=tv-_1er1mWI</a><br><ol><li><b>Creational Patterns</b></li><ol><li><b>Singleton</b>&nbsp;- instantiated once, accessed many times e.g. Settings</li><ol><li>Can use a class ""Settings"" with a public readonly mode, and a private constructor</li><li>a static ""getInstance()"" method could also ensure that this object is only instantiated once</li><li>In JS, all the same basic characteristics can be mirrored in a global object - NOT the case for C++</li></ol><li><b>Prototype</b>&nbsp;- circumvent class-subclass inheritance by prototyping out from an original instance</li><ol><li>javascript supports prototypal inheritance out of the box:</li><ol><li>const instance = Object.create(template, { newVar: { newVarValue: 'val'} } );</li><li>can always get the prototype of an object using Object.getPrototypeOf(instance)</li></ol></ol><li><b>Builder</b></li><ol><li>E.g. food orders with specific options<br></li><li>Create an object step-by-step with methods rather than a constructor</li><li>Delegate building logic to an entirely different class</li><li>try to use ""return this;"" after each method so they can be chained e.g. myLunch.addMustard().addKetchup()</li></ol><li><b>Factory</b></li><ol><li><b>Instead of using new keyword to instantiate object, define a function/method to do it for you</b></li><li>e.g. if you need to conditionally display an ios or Android display, it's easier to do so with a ""factory"" class which handles all component instantiations for you, rather than&nbsp;<i>conditionally instantiate</i>&nbsp;each component.<br></li></ol></ol><li><b>Structural Patterns</b></li><ol><li><b>Facade</b></li><ol><li>simplified API to hide low-level details in your codebase</li><li>Most users won't need access to the details, and will desire a more abstracted high-level interface to operate low-level details</li><li>e.g. most people don't need to know water/power details, but should probably know how to shut them off</li></ol><li><b>Proxy</b></li><ol><li>Substitutes for original object</li><li>in Vue.js, you create data, but Vue needs to update the UI whenever data changes.&nbsp;</li><ol><li>This allows you to write code where users can change the UI, or the values themselves</li><li>Nice for large objects which would be expensive to duplicate in memory</li></ol></ol></ol><li><b>Behavioral Patterns</b></li><ol><li><b>Iterator</b>&nbsp;- pull-based system to&nbsp;</li><ol><li>traverse object structures; most languages provide options<br></li><li>JS has no range function, but you can instead create functions with next(){} methods which dictate start-stop</li></ol><li><b>Observer</b>&nbsp;- push-based system</li><ol><li>many objects subscribe to events broadcast by a single object; a one-to-many relationship</li><li>in firebase, when data changes on the server, all client apps update with the latest data'</li><li>Loop which unfolds bounded by time</li></ol><li><b>Mediator</b></li><ol><li>Provides a single source of truth for many objects which need to communicate/coordinate</li><li>governs a many-to-many relationship, like an air traffic controller</li><li>expressjs has a middleware system intercepting every request and transforming it into the correct response</li><li>separates concerns into stages; eliminates code duplication</li></ol><li><b>State</b></li><ol><li>different object behavior based on a finite number of states</li><li>switch and conditional rendering tend to not scale well</li><li>One way to scale in JS:</li><ol><li>create function classes which contain an identically named method which returns different results</li><ol><li>class sadState implements State {}</li></ol></ol></ol></ol></ol>"	Example formula technique
"wgd?z.{>#;"	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	REST vs GraphQL	<ul><li>REST holds each data entity at the end of a URL which can be called to get/set the entire entity, when API called. Two issues:<br></li><ul><li>Underfetching: if we need multiple entities at once, each request is fetching less than needed</li><li>Overfetching: if we need only a small entity, we may overfetch from the API</li></ul><li><b>GraphQL:</b>&nbsp;Query Language for reading/mutating data and APIs</li><li>Provides a type system where you can construct a schema for your data</li><ul><li>Front-end API consumers can explore and request the exact data they need, in the form of a query.gql</li><li>back-end response will return the exact schema as a JSON</li><li>Syntax works with any programming language, Kotlin/Swift as well as Python/JS/Go</li></ul><li>In a schema.gql file, we describe each object as a type with multiple fields</li><ul><li>data can be required or not with an exclamation point at the end of each line</li><li>type a {</li><ul><li>variablename: datatype!&nbsp;</li><li>collection: [b]</li></ul><li>}<br></li><li>type b {</li><ul><li>url: String!</li><li>elementOf: a</li></ul><li>b belongs to a</li></ul><li>Query point is entry point to read.&nbsp;</li></ul>	dataflow fullstack webdev
yOPD]s.OHY	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Bailenson - Experience on Demand	"<div>Invalid uses of vr:
DICE
Dangerous
Impossible
counterproductive
Expensive or rare</div>
<div>Main concern with AR: multitasking
Can’t start respecting the norms of ghosts over real people</div>
<div>__________________<em><strong>-</strong></em>
MORE RECENT jBAI^^^^^^^^^^^^^^^
<strong>-----------</strong>-----
""VR feels real, and its effects on us resemble the effects of real experiences...a VR experience is often better understood not as a media experience, but as an actual experience.""
Four primary adverse effects of VR:
+Experiential modeling of violence
+Virtual escapism
+Distraction from real world
+Overuse
Brown v. Entertainment merchants association, 2011
Young children are hyper susceptible to accepting false memories</div>
<h2>3 empathic mechanisms:</h2>
<div>+Emotional response to the suffering of others
+Cognitive ability to form theories about how others feel
+Full-fledged - after exposure, do you have a desire to alleviate that person's suffering?</div>
<div>Wearing a black avatar primes more racial stereotypes for white and black participants alike</div>
<h2>Three motives for empathy</h2>
<div>+good deed/positive effect
+Strengthen affiliation with in-group members
+Social desirability - wanting others to see one as a good person</div>
<h2>Three disincentives for empathy</h2>
<ul>
<li>avoid emotional suffering
-avoid incurring material cost (money to help, etc)
-avoid weak performance in social situations</li>
</ul>
<div>Temple Grandin &amp; empathy for livestock</div>
<h2>Into the world of Social VR</h2>
<div>""Virtual reality is going to become a must-have technology when you can simply talk and interact with other people in a virtual space that feels utterly, unspectacularly normal.""</div>
<div>In order to use VR to obviate the need for traveling to meetings, we must achieve perfect verbal and nonverbal synchrony between interlocutors. Nonverbal synchrony has been demonstrated to increase rapport and encourage good, productive conversation.</div>
<div>Philip Rosedale, High Fidelity: what is the virtual handshake?
Chameleon effect: subtle mimicry of another can cause them to like you</div>
<div>Virtual Avatars could decrease FaceTime latency, data use, and make conversations more engaging with instant transfer of the slightest nonverbal cues</div>
<div>Higher need for truth &amp; verifiability in today's media because of reactive reporting plus the power of outlets to manipulate evidence</div>
<h2>VR Journalism</h2>
<div>Nonny de la Peña's work: Placing people not at, but near the Trayvon Martin shooting, since there are no eyewitness accounts
We need regulatory standards for placing real-world violence in VR journalism
Difficulties of VR journalism:
-can't be in your own 360 shot, so it must be static and sitting in one place
-can't ensure that users observe any single detail for ""plant and payoff""
-Low attention span to single objects; no locus of focus
""Claustrophobia is one of the tried and true parlor tricks in VR.""
""Game narratives which allow players to wander generally do not allow for economic storytelling.""</div>
<h2>VR Field Trips</h2>
<ul>
<li>Sesame Street had to fight to keep field trips in the ""curriculum"" of included material
-VR is especially effective for at-risk kids who may not be motivated to learn science
-VR is more immersive, but doesn't increase test scores
-Bailenson's solution: Create learning experiences that don't require narrative, or the presentation of facts, at all: ""an active process of discovery""
-Great potential to make a one-on-100 class feel like 100 one-on-one experiences, and thus increase engagement
For teachers who consciously mimic their students' behavior and mannerisms:</li>
</ul>
<ol>
<li>The students rarely notice the mimicry.</li>
<li>Students nonetheless are more engaged with mimicking teachers.</li>
<li>Students are more likely to be influenced by, or in agreement with, mimicking teachers.</li>
</ol>
<h2>Good VR Use</h2>
<ol>
<li>Does it NEED to be in VR?
-3 things have always happened when a human has moved:
Optic flow changes
Vestibular system reacts - inner ear, etc
Proprioceptive cues from skin &amp; muscle</li>
<li>Don't make people sick
infinite walking in a circle, simulator sickness etc</li>
<li>Be safe.</li>
</ol>
<h2>Computers as Social Actors (CASA) Paradigm</h2>
<div>""People's trust in computers may be understood as the extent to which people rely on or have confidence in a computer (computer agent), particularly when they are seeking to achieve a goal in an uncertain or risky situation.""
-""The conditions under which people perceive computers/computer agents as trustworthy closely reflect the conditions under which trust becomes fostered in the context of interpersonal communication.""</div>"	book futurology history
OSF&;H<Cbc	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	The Infinite Retina	"<h2>Our prime technological directive: become better humans</h2>
<div>We are caught up in unreal narratives because they validate us and provide both individual and social actualization. Education is self-realization</div>
<div>Six technologies required for spatial computing:
Optics/displays,
Pinch points: render load, eye strain, latency, accommodation &amp; Bergenfield off closer-focused objects
wireless/comms,
Wearable screens will need at least 8K visuals
control mechanisms (voice &amp; hands),
Plus biometric responsive control
Accessibility is a huge opportunity
Users will come into this world from where they are at
The end goal is “a computer system that works with you the way do with people”
sensors and mapping,
Envision a fully mapped detailed world
<a href=""http://6d.ai/"">6d.ai</a>’s AR cloud/SLAM database/sheet of polygons
Location based notifications; items lost or left
computer architectures like cloud,
Businesses will be forced to buy cloud infrastructure closer to their users
and AI (decision systems)
Most computer vision systems adapt an image to greyscale to reduce processor load</div>
<div>3 prior paradigms:
The personal computer
Graphical Interfaces &amp; cognition
Mobile</div>
<div>Qualcomm:
2 approaches will dominate market:
Seeing through virtual layer to real world
Cameras and screens pass the real world to your eye (superwide field of view; biased toward VR)</div>
<div>Foveated rendering- the human eye can only see color and high resolution in its center, the fovea</div>
<div>5G: high bandwidth, low latency, more devices per antenna</div>
<div>Six techs:
——————</div>

<div>Transportation
Virtual worlds
-Paul Milgram hypothesizes “spectrum” of XR experiences
-why are games so exciting? Emergence of new complex behavior from simple principles requiring adaptation
-google glass problems: small screen, underdeveloped 3D sensors, underpowered GPUs, bad battery life, needs screen for each eye, cameras and screen crap
-changes will be more profound than those of the automobile or telephone
-similar problem with google cardboard - too much hardware strain</div>
<div>Limitations of mobile AR
-have to hold phone, tracking and occlusion are inconsistent, virtual items can’t naturalize in most conditions</div>
<div>Wearable AR is a risky game for big corps, need:
-robust distribution and supply chain, branding and marketing out the ears, solid content for the platform, extensive user testing and iteration, dialogue with a user’s existing tech ecosystem, absolute data privacy</div>
<div>10 techs across which all AR companies compete:
-monitors/optics, gpu, battery, wireless, sensors (+intertial measurement units), AI chips, corrective lenses, audio, processing, frame and case</div>
<div>Experiences to try:
Everest
Wolves in the walls
My brother’s keeper mercy street</div>
<div>Companies to check out
Within
Fable
Baobab - Crow the Legend
Penrose - tide’s fall, Arden’s wake, free: Allumette and The Rose and I
BadVR</div>
<h2>Greatest uses in manufacturing</h2>
<div>“Digital twin” - being able to trial-and-error without trials; testing new designs before even prototype
-Not REMOVING workers, just sending them home/reducing their time
-better semblance of “handmade” manufactured objects
-machine status checking will be more intuitive when they are more emotive</div>
<ul>
<li>Healthcare remedies from pain reduction to surgical enhancement have been overturned across the board</li>
<li>Virtual trading by brokers will be enabled to track a much greater volume of data when they can visualize in 3D 360</li>
</ul>
<div>Chapter 9 I think?</div>

<div>Digital experiential education
Merge cube - wide use cases, easy implementation, more good than bad
China has a shortage of teachers and may replace them with ar vr assistants
Consequence free, perspective fluid, comprehension augmented, lifted out of the rectangle of data
-workplace safety, workplace empathy, conflict resolution, racial bias trainings can all be more effective in AR/VR</div>
<div>Chapter 10 collective learning
————————————&nbsp;</div><div>-spatial compute + IoT = exponential knowledge gain&nbsp;</div><div>-life tracking &amp; assistance through multiple computers in conversation
-better living thru tech
-will make sense for public servants and retail workers to also be replaced by these assistant techs
-proven gains in efficiency after implementing spatial computing training in workspaces
-online retail and search suggestions are about to go offffffffff
-I guess the special thing in third chapter is that the machine is actively at every second working for everyone and able to extrapolate all its lessons everywhere at once
Emphasis in learning and instantly teaching physical task techniques</div>
<div>Chapter 11 people people
——————————————&nbsp;</div><div>Rafaella Camera Accenture Interactive - enterprise/b2b AR solutions, won lumiere award for merchandising AR, discovered pop tarts sell better on lower shelves&nbsp;</div><div>Brennan Spiegel, cedars Sinai and UCLA - VR reduces average daily pain by 3 levels if at a 7 or above, could be a legitimate replacement for opioids, works via gate theory of pain (introduce a more interesting stimulus), visual cortex accounts for far more than 50% of sensory cortex, “photonic Trojan horse”, thinks potential is in VR for dementia, Alzheimer’s, schizophrenia, eating disorders
Virtual medicine.health
Rob coneybeer - fetch robotics, airspace systems, starship technologies, elroy air
Ken Bretschneider, abuse, digicert, the Void, Evermore Park, The Grid
John Borthwick, Betaworks, “synthetics” creation technologies for AR, Yona by Auxuman, Lucy by SF-based Fable Studio, Mica by Magic Leap, funded and incubated bitly and GIPHY, commodify, deeptrace, RADICAL, RESEMBLE
Hugo Swart, Qualcomm is taking the $9 from the Qualcomm radio sold for each iPhone and investing it into a headset which can do both virtual and augmented reality (collaboration with Niantic!!!)
Sebastian Thrun, Kitty Hawk, Waymo, Udacity</div>
<div>Last chapter - concerns
Sales force ceo Marc benioff - Facebook is the new cigarettes, badly needs regulation
China is going cashless, its facial recognition and tracking systems are aided by Megvii</div>"	book futurology history
kPDnCfYOI}	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Rust	"<ul>
<li>[ ]  Superior to C++ and C in being a modern, low-level, guaranteed memory-safe and memory-efficient systems programming language
<ul>
<li>[ ]  Rich type system and ownership model</li>
<li>[ ]  Chromium project report vulnerabilities, plus Microsoft: 70% of high security issues are memory safety problems</li>
<li>[ ]  Even world’s best teams have C/C++ security issues</li>
<li>[ ]  Rust is very strict about space usage features, has no null types due to its rich type system, and no exceptions</li>
<li>[ ]  Modern package manager called cargo, like npm for java but better</li>
<li>[ ]  If your code compiles, it’s data race free</li>
</ul>
</li>
<li>[ ]  Fkn git repos by default, nice package manager in cargo</li></ul>"	Example formula language
yA9{yW*K$I	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Mark Weiser - The Computer for the 21st Century	"<div>Vishwanath</div>
<div>""The most profound technologies are those that disappear. They weave themselves into the fabric of everyday life until they are indistinguishable from it.""</div>
<div>Writing freed information from memory; ubiquitous in industrialized countries
-Personal computers ""cannot truly make computing an integral, invisible part of the way
people live their lives. Therefore we are trying to conceive a new way of thinking about computers in the world, one that takes into account the natural human environment and allows the computers themselves to vanish into the background.""</div>
<div>""Whenever people learn something sufficiently well, they cease to be aware of it.""
When we are free to use tools without thinking, we can focus beyond them on new goals.</div>
<div>""Carrying a super-laptop is like owning just one very important book. Customizing this book, even writing millions of other books, does not begin to capture the real power of literacy""</div>
<div>""Although it may have its purpose in allowing people to explore realms otherwise inaccessible -- the insides of cells, the surfaces of distant planets, the information web of complex databases -- virtual reality is only a map, not a territory. It excludes desks, offices, other people not wearing goggles and body suits, weather, grass, trees, walks, chance encounters and in general the infinite richness of the universe. Virtual reality focuses an enormous apparatus on simulating the world rather than on invisibly enhancing the world that already exists.""</div>
<div>""Little is more basic to human perception than physical juxtaposition, and
so ubiquitous computers must know where they are.""</div>
<div>""Our goals for initially deploying the hardware of embodied virtuality: hundreds of computers per room.""</div>
<div>""No revolution in artificial intelligence is needed--just the proper imbedding of computers into the everday world. The automatic diary shows how such a simple thing as knowing where people are can yield complex dividends: meetings, for example, consist of several people spending time in the same room, and the subject of a meeting is most likely the files called up on that room's display screen while the people are there.""</div>
<h2>PADS - an antidote to windows</h2>
<div>""scrap computers"" that can be grabbed and used anywhere: they have no individualized identity or importance
who would ever use a 9"" by 11"" desktop? use a real one with scrap comps
yard-size displays serve a number of purposes</div>
<div>Required tech:</div>
<ol>
<li>cheap, low-power computers with equally convenient displays</li>
<li>a network that ties them all together</li>
<li>software systems implementing ubiquitous applications</li>
</ol>
<div>Current trends: first requirement met, better info management is there
For a computer to match a whiteboard in usefulness, it must be viewable from across the room
""engineers must develop new communication protocols that
explicitly recognize the concept of machines that move in physical space""
""Present technologies would require a mobile device to have three different network connections: tiny range wireless, long range wireless, and very high speed wired. A single kind of network connection that can somehow serve all three functions has yet to be invented.""</div>
<h2>A futuristic utopia with spatial computers</h2>
<div>computers track bio data to administer therapy (wakening, coffee, etc)
location tracking obviates security footage while increasing security
Even within houses, these systems could give us data about one another WITHOUT US HAVING TO SWITCH ROOMS OOOOOOOOO
-Actually revolutionary though: objects which find themselves
Avoiding traffic &amp; optimizing time, definitely</div>
<div>He believes full security is impossible - ""computers built according to Morris's rule would not attempt to be utterly proof against cracker, but they would be impossible to enter without leaving the digital equivalent of fingerprints.""</div>
<div>""By pushing computers into the background, embodied virtuality will make individuals more aware of the people on the other ends of their computer links.""
""Machines that fit the human environment, instead of
forcing humans to enter theirs, will make using a computer as refreshing as taking a walk in the woods.""</div>"	futurology history internet interpersonal
DeKGtSbApT	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Mozilla - Responsibility for Tech Workers	"<h2>Tech/Ethics Cases throughout history</h2>
<div>1969 - Computer People for Peace petitions ACM to oppose Vietnam War, combat tech discrimination &amp; protect privacy
1990-SVTC Toxic Material Distribution
1990-SEIU Janitorial Union Drives
Poor training of subcontracted workers at Time Warner Cable
Against Google dev for Pentagon
2019-#NoTechForICE
2019-Amazon largest walkout for sustainability</div>
<h2>Why is it all converging now?</h2>
<ul>
<li>VC model incentivizes negative, growth-at-all-costs behavior
-Publicly listed companies are more accountable
-Decision making is more transparent at startups, but companies are more likely to be in crunch</li>
</ul>
<h2>What do?</h2>
<ul>
<li>Be proactive about building your relationships
-Work across teams &amp; with impacted companies</li></ul>"	futurology history internet interpersonal
yFBUKMj06f	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	New America - Unemployment Insurance Inequality	"<div><ul><li>Less than one in 5 black workers and about one in 6 laying workers can work remotely
Legislators can choose to either increase business tax or slash benefits - usually the latter under business pressure
36 to 27% receiving benefits during Great Recession
White people receive benefits at 2x rate of black people
Systems calibrated to prevent overcompensation
State not accountable for underpayment
Michigan integrated data automated system has 93% inaccuracy determining unemployment eligibility
Names like Brazil:</li><li>“A first or last name that is ""too long"" can get truncated in any of the dozen government computers. At that point, it will fail automatic name matching and you go into the manual process where few claims ever come out alive.”
“Alternate ‘Anglicized’ first names are common in some ethnic groups—a real observed example is birth certificate says Graciela, driver's license says Grace. This will fail the automatic match, and the human reviewer will usually reject it too.”
Similarly, there were many examples of Vietnamese names not ""matching"" official records because of spaces between names, nicknames, and/or inconsistency of which portions of the name were shoehorned into first-middle-last name fields.</li><li>Instead of focusing on creating fraud where it doesn’t exist, a state’s mission should be to make systems easy-to-use for eligible applicants and to identify fraud within a greater context of accessibility. This includes improving the user experience, using plain language, reducing access barriers for workers with disabilities, language, or literacy limitations, and prioritizing the needs of applicants—especially during this critical time.</li><li>UI—you can’t refuse to work or quit a job in order to collect unemployment.</li><li>Workers, in fact, are told they will face financial penalties if they claim benefits that they’re not qualified to receive.</li><li>Handouts DO NOT create a disincentive to work</li><li>Among “the 10 states where fewer than 15 percent of unemployed people received benefits in March, seven were in the South.”</li><li>Black Rural South will see negative 9 percent job growth over the next decade.</li><li>According to Pew, 25 percent of Hispanic and 23 percent of Black adults say they are “smartphone only” internet users—someone who doesn’t have broadband service in their home but owns a smartphone, such as an Android, iPhone, or Galaxy smartphone. The share of low-wage workers who rely on their smartphones for online access has roughly doubled since 2013.</li><li>State employees, including the Governor, should go through the process of applying for UI so that they can experience firsthand what applicants go through when applying.
States should offer multiple ways to apply, including options that do not require internet access or a computer
States websites and application processes must be 508 compliant and fully usable for members of the disability community
Websites and applications must be mobile-responsive
Content should be written in plain language and in multiple languages
Processes, documentation, and requirements should be clear and concise
An applicants’ claim status should be clear and appeals should be easy to file
Sites should autosave applications during the process and warn users when a session will end
States should design systems with users and get their feedback through usability testing
It should be easy to speak to a human that can provide clear instructions and help, whether on the phone, in person, or via chat</li><li>Businesses should consider creating work-sharing programs that would allow employers to spread layoffs across their entire workforce instead of laying some people off entirely, while supplementing the remainder of workers’ wages through UI. As companies begin rehiring, they should be incentivized to notify former employees first, giving those workers an opportunity to apply for those jobs while also decreasing training costs for the business, as former employees will be familiar with company operations. State policies, which often benefit employers over employees, could also be modified to better serve workers —notifying them when a former employer has started rehiring. Finally, the federal government should ensure that all states provide unemployment benefits for at least 26 weeks, long enough to cover the average length of unemployment periods for all workers, especially workers of color.</li><li><a href=""https://www.newamerica.org/public-interest-technology/reports/unpacking-inequities-unemployment-insurance/"">https://www.newamerica.org/public-interest-technology/reports/unpacking-inequities-unemployment-insurance/</a></li></ul></div>










"	economics history interpersonal sociology
MlBBC>u`wA	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	OpenGL	"<ul><li>Graphics API which allows us to access our gpu hardware - NOT a library or framework but instead a specification, akin to a C++ specification</li><ul><li>Alternates are Direct3D, Vulcan, Metal</li><li>Specification - ""This function should exist, take these parameters and return this value.""</li><li>Drivers each contain their own implementation; every company's OpenGL is different e.g. AMD, Nvidia</li><li>This enables cross-platform OpenGL code</li></ul></ul>"	dataflow webdev
cjj5^t21@*	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Apache Kafka	<ul><li>Distributed large-scale real-time events-streaming pipeline&nbsp;</li><li>2011 at Linkedin, built on Java and Scala</li><li>Optimized for writing high-scale data e.g. user visits,&nbsp;</li><li>Stored in an immutable log called a topic<br></li><ul><li>Topics are distributed and replicated in a cluster<br></li><li>cluster contains multiple servers called brokers, enabling fault-tolerance and scaling<br></li><li>Consumers can subscribe to this data, read the most recent datum like a queue, or read the whole topic log &amp; listen to real-time updates</li><li>Streams API allows users to aggregate and organize these topics before they even consume&nbsp;</li></ul><li>similar to message brokers like RabbitMQ, but Kafka can handle more input for streaming applications<br></li><ul><li>Used by lyft etc for geolocation, Spotify and Netflix for log processing, and Cloudflare for realtime analytics</li></ul><li>Use:</li><ul><li>Download and use ZooKeeper or Kraft to manage cluster</li><li>start Zookeeper in one terminal, Kafka in a second, and create your first topic</li><li>You can then write events/topics locally to your cluster, as well as read the log</li></ul></ul>	dataflow webdev
g%!T5xo5(%	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	WebAssembly&nbsp;	<ul><li>Framework for running C++, Python, Go, Rust, COBOL delivered to a web browser</li><li>No installations and near-native performance</li><li>Dec 2019 W3C Worldwide Web Consortium officially recommends Webassembly</li><ul><li>Follows HTML, CSS and Javascript to become the fourth web language allowing code to run in browser</li></ul><li>.wat files are converted to .wasm binaries which can run on browsers</li><ul><li>Rather than writing these files directly, they are a compilation target for other files</li></ul><li>Figma uses react.js for outer UI, on top of a C++ design tool as fast as native software</li><li>emscripten converts C or C++ to assembly, as well as AutoCAD</li><li>use assemblyscript, which looks like TypeScript but compiles to web assembly</li><ul><li>Static compiled language instead of Javascript's dynamic interpreted language</li><li>strict type guarantees; no any</li><li>numbers need to specity 32-bit integer, or 64-bit floating point: `i32 or f64`</li><li>No dynamic objects; instead maps with key-value pairs</li></ul></ul>	dataflow webdev
bP<]_HC91c	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Svelte+Sveltekit	"<ul><li>JS tool for UI components like React, Angular, or Vue</li><li>Instead of shipping a javascript at runtime to the browser like the above, Svelte is a compiler which converts the declarative svelte code into imperative js code which runs with native browser APIs</li><li>High-performance, small package</li><li>.svelte files contain 3 main parts:</li><ul><li>A script for js code which also can contain typescript</li><li>a style tag for your CSS which can also use a pre-processor like sass, and&nbsp;</li><li>Main template, represented as regular html</li><ul><li>empowered with extra syntax for declaritive code.</li></ul></ul><li>Sveltekit allows quick implementation of SSR, routing, code-splitting</li><ul><li>Created in 2022 by Rich Harris</li><li>render Svelte on Node.js and other js-edge runtimes</li><li>server fetches data up front so the browser can receive fully rendered html, critical for performance and SEO.</li><li>Then javascript takes over and renders all future pages like a fast and smooth single-page application</li><li>provides built-in router where every page component represents the UI for a unique URL</li><li>each component can have a corresponding js/ts file to handle data fetching</li><ul><li>This file exports a function whose return value is loadable on the component while providing E2E type safety</li><li>In addition, the data is made available on a svelte store which is accessible from any component</li></ul><li>Pages can handle server-side actions e.g. form submissions to update pages with zero client-side javascript</li><li>in addition to pages, layouts can share ui across multiple child routes, and can even fetch their own data</li><li>finally, server files (ts) can export their own restful async API calls like get, post, patch and delete</li><li>uses vite, a local development server used by default by Vue and for react templates, supports TSX &amp; JSX</li></ul></ul><div><br></div><div><br></div><div><span style=""font-weight: 600;"">Core Concept: Svelte</span><ul><li><span style=""font-weight: 600;"">Compiler, not a Framework (in the traditional runtime sense):</span>&nbsp;Unlike React, Angular, or Vue which&nbsp;ship a runtime library to the browser, Svelte is a compiler. It converts your declarative Svelte code into highly optimized, imperative JavaScript&nbsp;code at build time. This means the browser runs native browser APIs directly, without framework overhead.</li></ul><ul><li><span style=""font-weight: 600;"">Performance&nbsp;&amp; Small Bundles:</span>&nbsp;This compiler approach generally leads to very small JavaScript bundle sizes and excellent runtime performance.</li></ul><ul><li><span style=""font-weight: 600;"">.svelte&nbsp;Files:</span>&nbsp;Components are typically written in&nbsp;.svelte&nbsp;files, which elegantly integrate three main parts:</li></ul><ul><li><span style=""font-weight: 600;"">&lt;script&gt;&nbsp;tag:</span>&nbsp;For JavaScript/TypeScript logic. This section manages component state and behavior.</li></ul><ul><li><span style=""font-weight: 600;"">&lt;style&gt;&nbsp;tag:</span>&nbsp;For CSS, which is scoped to the component by default. Preprocessors like SCSS/SASS can be used.</li></ul><ul><li><span style=""font-weight: 600;"">HTML Template:</span>&nbsp;Regular HTML markup, enhanced with Svelte's concise templating syntax for reactivity, conditionals, loops, etc. (e.g.,&nbsp;{#if condition},&nbsp;{#each items as item}, reactive statements with&nbsp;$:)</li></ul><span style=""font-weight: 600;"">SvelteKit: The Application Framework for Svelte</span><ul><li><span style=""font-weight: 600;"">Full-Featured Framework:</span>&nbsp;SvelteKit builds on Svelte to provide a complete solution for building web applications of all sizes. It was created by Rich Harris (creator of Svelte) and officially released in late 2022.</li></ul><ul><li><span style=""font-weight: 600;"">Key Features:</span></li></ul><ul><li><span style=""font-weight: 600;"">Server-Side Rendering (SSR) &amp; Other Rendering Modes:</span>&nbsp;Easily implement&nbsp;SSR for improved performance (especially FCP - First Contentful Paint) and SEO. Also supports Static Site Generation (SSG), and client-side rendering (CSR).</li></ul><ul><li><span style=""font-weight: 600;"">Routing:</span>&nbsp;A file-system based router where directories&nbsp;and&nbsp;+page.svelte&nbsp;files define routes. Special files like&nbsp;+layout.svelte&nbsp;allow for shared UI&nbsp;across child routes.</li></ul><ul><li><span style=""font-weight: 600;"">Data Fetching:</span>&nbsp;Provides&nbsp;load&nbsp;functions in&nbsp;+page.js&nbsp;or&nbsp;+page.server.js&nbsp;files that run before a page component is rendered, allowing data to be fetched on&nbsp;the server or client. Data is made available to components, often via props or Svelte stores, ensuring end-to-end&nbsp;type safety if using TypeScript.</li></ul><ul><li><span style=""font-weight: 600;"">API Routes (Endpoints):</span>&nbsp;Create server-side API endpoints by&nbsp;creating&nbsp;+server.js&nbsp;(or&nbsp;.ts) files that export functions for HTTP methods (GET, POST, PUT, DELETE, PATCH). This allows you to build a full-stack application with SvelteKit.</li></ul><ul><li><span style=""font-weight: 600;"">Form Actions:</span>&nbsp;Simplifies handling HTML form submissions, allowing server-side logic to process form data and update pages, potentially with zero client-side JavaScript for progressive enhancement.</li></ul><ul><li><span style=""font-weight: 600;"">Layouts:</span>&nbsp;+layout.svelte&nbsp;files define UI structures shared across multiple routes. Layouts can also fetch their own data.</li></ul><ul><li><span style=""font-weight: 600;"">Code Splitting:</span>&nbsp;Automatic code splitting per route, ensuring users only download the JavaScript needed for the current page.</li></ul><ul><li><span style=""font-weight: 600;"">Adapters:</span>&nbsp;SvelteKit uses adapters to build and output your application for different deployment platforms (e.g., Vercel, Netlify, Node server, static sites).</li></ul><ul><li><span style=""font-weight: 600;"">Vite Integration:</span>&nbsp;Uses Vite for its development&nbsp;server, providing an extremely fast development experience with Hot Module Replacement (HMR). Vite also handles the build process and supports TypeScript&nbsp;and JSX out of the box.</li></ul><span style=""font-weight: 600;"">Advantages of Svelte/SvelteKit:</span><ul><li><span style=""font-weight: 600;"">Excellent Developer Experience&nbsp;(DX):</span>&nbsp;Often cited for its intuitive syntax, minimal boilerplate, and the joy it brings to development. Svelte's reactivity&nbsp;model feels natural and straightforward.</li></ul><ul><li><span style=""font-weight: 600;"">Performance:</span>&nbsp;Generally smaller bundle sizes and faster runtime performance due to the compiler&nbsp;approach (no virtual DOM overhead).</li></ul><ul><li><span style=""font-weight: 600;"">Readability &amp; Maintainability:</span>&nbsp;Less code often means easier to read&nbsp;and maintain codebases.</li></ul><ul><li><span style=""font-weight: 600;"">Integrated Tooling:</span>&nbsp;SvelteKit provides a cohesive, batteries-included experience.</li></ul><ul><li><span style=""font-weight: 600;"">Learning Curve:</span>&nbsp;Svelte's core concepts are often considered easier to grasp than those of more complex frameworks like React&nbsp;(especially regarding state management).</li></ul><ul><li><span style=""font-weight: 600;"">Scoped Styles:</span>&nbsp;CSS is component-scoped by default, preventing style conflicts.</li></ul><span style=""font-weight: 600;"">Disadvantages/Limitations:</span><ul><li><span style=""font-weight: 600;"">Smaller Ecosystem:</span>&nbsp;Compared to React/Next.js or Angular, the ecosystem&nbsp;of third-party libraries, UI component kits, and pre-built solutions is smaller, though rapidly growing. You might need&nbsp;to build more custom components or find Svelte-specific alternatives.</li></ul><ul><li><span style=""font-weight: 600;"">Maturity &amp; Enterprise Adoption:</span>&nbsp;While&nbsp;robust and production-ready, SvelteKit is younger than Next.js. For very large, established enterprise environments, Next.js/React often has a longer track record and a larger existing talent pool.</li></ul><ul><li><span style=""font-weight: 600;"">Talent Pool:</span>&nbsp;While&nbsp;growing, the number of experienced Svelte developers is currently smaller than that for React or Angular.</li></ul><span style=""font-weight: 600;"">Executive Summary: Why&nbsp;Choose SvelteKit?</span><ul><li><span style=""font-weight: 600;"">Choose SvelteKit if:</span></li></ul><ul><li><span style=""font-weight: 600;"">Developer experience and enjoyment&nbsp;are high priorities.</span>&nbsp;Its simplicity and elegance are major draws.</li></ul><ul><li><span style=""font-weight: 600;"">Performance and small bundle sizes are critical.</span>&nbsp;Ideal for content-heavy sites or applications targeting users with slower connections.</li></ul><ul><li><span style=""font-weight: 600;"">You're starting&nbsp;a new project</span>&nbsp;and want a modern, fast, and productive full-stack (or frontend-focused) framework.</li></ul><ul><li><span style=""font-weight: 600;"">It's a personal project or a learning exercise.</span>&nbsp;Svelte is a valuable and increasingly relevant skill.</li></ul><ul><li>The project doesn't absolutely require an immediate, vast off-the-shelf component ecosystem that only larger frameworks currently&nbsp;offer.</li></ul><ul><li><span style=""font-weight: 600;"">Reconsider if:</span></li></ul><ul><li>The project heavily relies on a very specific, complex&nbsp;React-only library that has no Svelte equivalent and cannot be easily wrapped or rewritten.</li></ul><ul><li>You are&nbsp;working in a large enterprise environment that exclusively mandates older, more established frameworks with a very large existing internal skillset and tooling built&nbsp;around them.</li></ul><ul><li>The absolute availability of the largest possible pool of developers for immediate hiring is the single most&nbsp;critical factor.</li></ul>SvelteKit is a powerful, modern, and enjoyable framework well-suited for a wide range of applications, from simple static sites to complex web applications. Its focus on compilation, performance, and developer ergonomics makes it a compelling choice for many&nbsp;new projects.<br></div>"	dataflow fullstack webdev
gX$iyoEWj]	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	📥Containerization &amp; Virtualization - Docker, Kubernetes, venv	"<div><b>SW-software</b></div><div><b>3P - Third-Party</b></div><div><b>venv(s) - virtual environment(s)</b></div><div><b>Docker</b></div><ul><li>Docker packages software into containers with reliable cross-environment performance<br></li><ul><li>best for sharing system-built apps which can replicate software needs on any machine<br></li><li>Mainly used for maintaining a simulation of a production environment locally. Two files,&nbsp;<b>Dockerfile</b>&nbsp;and&nbsp;<b>docker-compse.yml</b>, can be shared with confidence another developer will have the exact same local development environment as the rest of the team<br></li></ul><li>on a virtual machine, hardware is simulated and installed on the hardware, but because each VM runs its own OS, they tend to be bulky/slow<br></li><ul><li>A container is similar to a VM but rather than virtualizing hardware, they only virtualize the OS; multiple containers are run by a single kernel to improve speed and efficiency<br></li></ul><li><div>Allows you to package/run in a loosely isolated environment, a <span style=""font-weight: 700; font-style: italic;"">container</span></div></li><ul><li><div>Containers are lightweight - don’t need hypervisor, but run directly within host machine’s kernel</div></li><li><div>Separate applications from infrastructure to deliver quickly</div></li></ul><li><div>A <span style=""font-weight: 700;"">Docker image</span> is a private file system just for your container. It provides all the files and code your container needs.</div></li><li><div><span style=""font-weight: 700;"">Docker Engine</span> - client-side server app with:</div></li><ul><li><div>Server which is a type of long-running program called a daemon process</div></li><ul><li><div>Docker daemon (dockerd) listens for D. API requests and manages D. objects, can communicate with other Daemons too</div></li></ul><li><div>A REST API which specifies interfaces that programs can&nbsp; use to talk to the daemon and instruct it on what to do</div></li><li><div>A CLI client which uses said REST API to control/interact with Docker daemon</div></li><ul><li><div><span style=""font-style: italic;"">Docker run</span></div></li></ul><li><div>A registry stores images, docker provides for public/private</div></li></ul><li>Universal elements:<br></li><ul><li>Dockerfile<br></li><ul><li>DNA which instructs Docker on how to build an image/snapshot of your software, along with all OS etc dependencies<br></li><li>use FROM to start with an existing template, e.g. ubuntu:20.04, which gets pulled from the cloud, or upload your own<br></li><li>terminal command like RUN installs dependencies in your image, e.g. RUN apt-get install sl<br></li><li>you can set ENV variables e.g. PORT=8080<br></li><li>finally, set a default command executed when you start up a container. e.g. CMD[""echo"", ""Docker is easy.""]<br></li><li>whenever you run docker build, docker checks if it can use cached contents of previous builds. Thus, the order of a dockerfile is critically important for performance reasons. ""In order to avoid constantly invalidating, the cash, restart the Docker file with commands that are less likely to change, while putting commands that are more likely to change, like COPYing the local file system, at the end.""</li></ul><li>.dockerignore<br></li><ul><li>Usually a good place to add .git, .venv, .gitignore<br></li></ul><li>docker-compose.yml<br></li><ul><li>Set docker version<br></li><li>specify services desired within docker host. Possible to have multiple services running<br></li><li>Within those services, specify details such as which build to look for, whiich ports to use, which python command to run the server, and which volumes to automatically sync between the Docker filesystem and local filesystem, so that if we make a docker change it will be synced locally<br></li><li>""Docker containers are ephemeral meaning when the container stops running all information is lost. This would obviously be a problem for our database! The solution is to create a volumes mount called postgres_data and then bind it to a dedicated directory within the container at the location /var/lib/postgresql/data/. The final step is to add a trust authentication33 to the environment for the db. For large databases with many database users it is recommended to be more explicit with permissions, but this setting is a good choice when there is just one developer.""</li></ul><li>Image<br></li><ul><li>read-only template describing how to create a docker container; instructions for instance</li><li>immutable, used to spin up multiple containers running at once&nbsp;<br></li><li>create image file by running docker build -t myapp ./<br></li><ul><li>bring this to life in a container with docker run myapp<br></li></ul></ul><li>Container<br></li><ul><li>an instance of the image</li><li>run using ""docker-compose up""</li><ul><li>use the -d flag to run in Detached mode, which runs containers in the background so that we can use a single command line tab without needing a separate one open as well, and saves switching between the two. Downside: if error, not always visible. run docker-compose logs to see output &amp; debug.</li><li>When you are working WITHIN docker as opposed to locally, Must preface commands with the ""docker-compose exec [service]"" coommand. e.f., to create a superuser account, you would need ""docker-compose exec web python manage.py createsuperuser""</li><li>Set the ""volumes"" mount in your docker-compose.yml so that each file change to the Docker database is replicated locally.</li></ul><li>quit the server with ctrl-C, then stop the container with docker-compose down</li><li>""docker ps"" command displays a list of all containers on your system, each with an ID and linked to an image</li></ul></ul></ul><b>Kubernetes</b><br><ul><li>Manage and automate containerized workloads in the cloud</li><li>musicians in an orchestra are docker containers, where the conductor is docker &amp; orchestra is an app</li><li>Kubernetes cluster: multiple interoperating control systems which can be replaced when failed</li><li>the control plane is the brain, exposes an internal/external API request handler to manage the cluster, as well as ETCD, which stores info about running the cluster</li><li>the rest is made up of nodes/machines running kubelets, a micro application which communicates back with the control plane</li><li>within each node, we have multiple pods, the smallest deployable unit in kubernetes</li><li>can automatically scale horizontally by adding more nodes to the cluster</li><ul><li>network or key/secret management, persistent storage</li><li>handles high availability by maintaining a replica set, or set of pods/containers ready to deploy at all times</li></ul><li>define .yml objects describing the required state of your server</li><ul><li>in the spec field, we define exactly how many containers, volumes, and ports Kubernetes should use</li><li>Use this to provision &amp; scale containers automatically, and monitor their health</li></ul><li><b>Virtualization</b>&nbsp;is, for this case, using Linux containers to isolate an entire OS<br></li><ul><li>On AWS, each client will have their own virtual machine running on an allocated server, allowing each client the appearance of a server while actually subdividing the hardware load</li><li>Very slow and large files, guest OS can typically take 700MB</li><li>Docker dodges this by running each container on a Linux OS, the most lightweight possible</li><li>""Virtual machines are like homes: standalone buildings with their own infrastructure, including plumbing and heating, as well as a kitchen, bathrooms, bedrooms, and so on. Docker containers are like apartments: they share common infrastructure like plumbing and heating, but come in various sizes that match the exact needs of an owner.""</li><li>virtual environments can only&nbsp;<b>isolate</b>&nbsp;Python packages, they cannot isolate non-python SW like a PostgreSQL or MySQL database.&nbsp;</li><li>All venvs rely on local, global, system-level installations of python. They point to that location; they do not actually contain Python</li><li>Linux containers go a step further and isolate the entire OS, not just docker, so we must install Python within docker</li></ul></ul>"	dataflow webdev
BN2Q]ijY]d	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Figma quick	"<ul><li>CONSTRAINTS are used to bind objects to certain places in a frame as it resizes.</li><li>SCALE tools allow you to maintain proportional relationships between visual objects as they resize</li><li>If no instance of a component has a particular override, any changed property will cascade to all existing components of target variety</li><ul><li>right click -&gt; reset all changes will revert a component instance to the source instance. you can also right click to view layers</li><li>in the component panel on the right, you can go to the main/source component, or push changes to the main/source component</li></ul><li>Figma F menu -&gt; quick actions command slash -&gt; select all instances</li><li>component libraries can be published for others from the project menu</li><li>you can restore previous versions of assets from the component update list</li><li>Frame auto layout can be useful to make frames hug contents, as well as cycle content orientation within a frame. Add a new component property -&gt; variant -&gt; show name to create a variable component with a template but easily rewritable properties</li><li>holding alt/option during click+drag creates a new instance of an existing component</li><li>if set to hug, the frame will grow to fit the contents. If you want the contents to grow to fit the frame, choose those items and set their frame fill to ""fill container""</li></ul>"	webdev
mv9=IJftFM	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	ORMs: Django vs Flask vs FastAPI	"<ol><li><img src=""Screenshot_2024-11-04_124720.webp""><img src=""Screenshot_2024-11-04_124720.webp"">Django is a scaling ORM (object-relational-mapper) database, meaning we will use almost identical Django code for any one of several possible databases like PostgreSQL, MariaDB, Oracle, MySQL, and SQLite. The Django ORM handles the translation from Python code to SQL configured for each database automatically</li><ol><li>Used to create Instagram, Spotify and Dropbox</li><li>Best practice is to use the same database locally and in production, making Django's built-in sqlite3 database unsuitable for most production-ready apps</li><li>Django loads apps from top-to-bottom, so generally good practice iis adding new apps below built-in apps they rely on like admin, auth, etc</li><li>django-admin startproject &lt;projectname&gt;</li><li>cd into new folder created and run python manage.py startapp &lt;appname&gt; to create a new app</li><ol><li>You then need to add the appname to the list of installed apps in the settings.py file in the subfolder for your main app</li></ol><li>structure:&nbsp;<br></li><ol><li>__init__.py just tells python to treat it like a python directory</li><li>settings.py has the program guts &amp; backend</li><li>asgi.py and wsgi.py don't need to be edited, but dictate how the program interacts with a browser</li><li>urls allows you to determine route</li><li>manage.py allows you to make db migrations, run the server, etc</li><ol><li>It's not advisable to run migrations before configuring a custom user model. If you do so, Django will bind the database to the built-in user model, which is difficult to modify later on in the project</li></ol><li>in app folder:</li><ol><li>Admin allows you to register database models so they can be viewed from the admin panel</li><li>models where you dictate those models</li><li>apps you dont need to worry about</li><li>views allows you to create routes on website</li></ol></ol><li>Terminal Commands:</li><ol><li>cd into project; add django to poetry</li><li>poetry run django-admin startproject &lt;projectname&gt;</li><li>cd &lt;projectname&gt;</li><li>poetry run python manage.py startapp myapp</li><ol><li>Django will create files but not recognize the new app until added to the INSTALLED_APPS config in `settings.py`</li></ol><li>poetry run python manage.py runserver</li><li>poetry run python manage.py makemigrations</li><li>poetry run python manage.py migrate</li><ol><li>ALWAYS create a custom user model before you make your initial migration; if you don't there will be more complicated problems down the line. Steps to add:</li><ol><li>create CustomUser model</li><li>update django_project/settings.py</li><li>customize UserCreationForm and UserChangeFor</li><li>Add custom user model to admin.py</li></ol><li>Create a function call for your user model in settings.py so it can be referenced identically across your project, e.g.</li><ol><li>in settings.py,&nbsp; AUTH_USER_MODEL = ""accounts.CustomUser""</li><li>in forms.py,</li><ol><li>class Meta:<br></li><ol><li>model=get_user_model</li></ol></ol></ol><li>The password field is implicitly included in all users by default; we need to extend the AbstractUser class that Django provides.&nbsp;</li></ol><li>poetry run python manage.py createsuperuser</li><li>portry run manage.py runserver</li></ol><li>Testing Django</li><ol><li><b>Unit Tests</b>&nbsp;are small, fast, isolated to specific functionalities<br></li><li><b>Integration Tests</b>&nbsp;are large, slow, and used to test entire apps or user flows like payment which move across multiple screens<br></li><li>Tests configured in test.py and run with manage.py test, or docker exec etc manage.py test</li><li>Django’s SimpleTestCase is a special subset of Django’s TestCase that is designed for webpages that do not have a model included.<br></li><li>By python convention, `self` should be the fiirst argument of each unit test.&nbsp;</li><li>be overly descriptive in naming, but start each method with `test` to make sure it can be run by the Django test suite</li><li>Examples:</li><ol><li>Check that http status code equals 200:</li><ol><li><div><div> def test_url_exists_at_correct_location(self):</div><div>        response = self.client.get(""/"")</div><div> self.assertEqual(response.status_code, 200)</div><br><div> def test_homepage_url_name(self):</div><div>        response = self.client.get(reverse(""home""))</div><div> self.assertEqual(response.status_code, 200)</div></div></li></ol><li>Test whether the template home.html is used:</li><ol><li><div><div>def test_homepage_template(self):</div><div>        response = self.client.get(""/"")</div><div> self.assertTemplateUsed(response, ""home.html"")</div></div></li></ol><li>Test whether homepage contains correct html:</li><ol><li>def test_homepage_contains_correct_html(self): # new&nbsp;</li><ol><li>response = self.client.get(""/"")&nbsp;</li><li>self.assertContains(response, ""home page"")<br></li></ol><li>def test_homepage_does_not_contain_incorrect_html(self):<br></li><ol><li>response = self.client.get(""/"")</li><li>self.assertNotContains(response, ""Hi there! I should not be on the page."")<br></li></ol></ol><li>Test whether homepage view resolves to a URL path(uses ""resolve"" utility fn):</li><ol><li>def test_homepage_url_resolves_homepageview(self): # new<br>view = resolve(""/"")<br>self.assertEqual(view.func.__name__, HomePageView.as_view().__name__)<br></li></ol></ol><li>`docker-compose exec web python manage.py test [dirName]` to test only features in dirName directory</li></ol><li>Django Templates</li><ol><li>The _base.html template is inherited by all other files, which underscore signifies</li><li>Block tags give higher-level templates the option to override just the content within the tags. For example, homepage has the ""Home"" title but we want that to appear between html &lt;title&gt; tags, so block tags make it easier to update the content in inherited templates</li><li>Every webpage, or template in a Django file must have a urls.py and a views.py file to go along with the template. Often a fourth file, models.py, is also needed.&nbsp;</li><li>""Django does not automatically update the django_project/settings.py file for us based on a change. In a non-Docker world stopping and restarting the server does the trick since the settings variables are loaded upfront. We must do the same here which means typing docker-compose down and then docker-compose up -d""</li></ol><li>Django queues, sync/async, RQ</li><ol><li><div>A Django job queue is a system that allows you to execute tasks asynchronously, outside of the request-response cycle of a web application. This is particularly useful for tasks that are time-consuming or need to be executed at a later time, without making the user wait for the task to complete. Let's break this down into more detail, including the terminology and the roles of Django, synchronous/asynchronous execution, Django workers, and Redis in the context of a job queue.</div><h3>Synchronous vs. Asynchronous Execution</h3><ul><li><strong>Synchronous Execution</strong>: The code is executed in sequence, meaning that a task must complete before the next one starts. In a web application, this can lead to blocking I/O operations, making the user wait for the task to complete before the webpage can be updated or responded to.</li><li><strong>Asynchronous Execution</strong>: This allows the program to move on to another task before the previous one has completed. It's beneficial for tasks that are I/O bound or require waiting for external resources. Asynchronous execution can improve the throughput and responsiveness of a web application by not blocking the execution thread with long-running tasks.</li></ul><h3>Django and Asynchronous Tasks</h3><div>Django is a synchronous framework by default, designed to handle HTTP requests and responses in a linear fashion. However, Django can integrate with asynchronous job queues to offload tasks that don't need to be completed within the lifecycle of a single request.</div><h3>Job Queue</h3><div>A job queue is a mechanism for scheduling tasks to be executed asynchronously. Tasks are added to a queue, where they wait to be processed by a worker. The queue ensures tasks are executed in the order they were added or based on priority levels.</div><h3>Django Workers</h3><div>Django workers are processes or threads that run separately from the main application server. Their job is to listen for tasks in the job queue, execute them, and return the results. The workers run outside the request-response cycle, allowing them to handle time-consuming operations without affecting the responsiveness of the web application.</div><h3>Redis</h3><div>Redis is an in-memory data store that can be used as a message broker for Django job queues. It provides a fast and efficient way to implement a job queue because of its support for various data structures like lists, which can be used to manage the queue of tasks. Redis serves as the intermediary between Django and the workers, holding the tasks until a worker is available to process them.</div><h3>Implementing a Job Queue in Django</h3><ol><li><strong>Choose a Task Queue Library</strong>: Libraries like Celery, Django-RQ (Redis Queue), and Huey are popular choices for integrating asynchronous task queues with Django. These libraries allow you to define tasks (functions) that can be executed asynchronously.</li><li><strong>Setup a Message Broker</strong>: The message broker (e.g., Redis, RabbitMQ) holds messages (tasks) that are sent from Django until the workers pick them up for execution. Redis is often chosen for its simplicity and performance.</li><li><strong>Define Tasks</strong>: With the chosen library, you'll define tasks that you want to run asynchronously. This involves decorating functions you wish to run in the background.</li><li><strong>Run Workers</strong>: Workers need to be started separately from the Django application. They continuously listen for new tasks added to the queue and execute them.</li><li><strong>Enqueue Tasks</strong>: From your Django application, enqueue tasks to be executed asynchronously. The library will handle the communication with the message broker (e.g., Redis) to queue the tasks.</li></ol></li></ol></ol><li>FastAPI outperforms by a factor of 2 or 3, but has much less sophisticated capabilities</li><ol><li>FastAPI is a modern Python&nbsp;web framework designed specifically for building APIs quickly and efficiently. It leverages standard Python type hints for automatic data validation, serialization, and documentation generation&nbsp;(giving you interactive API docs like Swagger UI out-of-the-box). It's built on asynchronous principles&nbsp;(async/await), making it very performant for I/O-bound tasks (like network requests to databases or other services), and its dependency injection system simplifies managing resources like database connections.<br></li></ol><li>Flask is most popular for beginners</li></ol><div><br></div><div><br></div><div><br></div><div>If you want all the Django routes, just misspell a route and django should dump them all in the error:</div><div><img src=""Screenshot_2024-11-04_124720.webp""><br></div>"	dataflow Example formula webdev
GqmrraMpAo	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	ChatGPT	<ul><li>Disruptive Capabilities</li><ul><li>Data science leg work for human understanding<br></li><ul><li>Synthesize enormous corpus into digestible pieces</li><li>Casual conversational interactions with instantaneous, complex math/stats/research undertakings</li><li>task time reduction by sometimes &gt;80%</li></ul><li>Full replacement of:&nbsp;</li><ul><li>Information Retrieval: Google, Wikipedia</li><li>Specific Question-Answer: StackOverflow, Quora</li></ul></ul><li>PDF Capabilities</li><ul><li>Browse libraries and deliver summaries</li></ul><li>What still needs to be done</li><ul><li>Scrape from url?</li><li>text analysis from online text</li></ul></ul>	aiml webdev
mm/5k_/CK%	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	HAI	<ol><li><div>Ben Shneiderman, inventor of clickable highlighted weblinks, high-precision mobile touchscreen keyboards, photo tagging had these guidelines For HAI:</div><ol><li>Clarify human initiative and control</li><li>Give people credit for accomplishments</li><li>Emphasize that computers are different from people</li><li>Remember that people use technology to accomplish goals</li><li>Recognize that human-like physical robots may be misleading</li><li>Avoid using human verbs to describe computers</li><li>Be aware that metaphors matter</li><li>Clarify that people are responsible for use of technology</li></ol></li></ol>	aiml
H9(R;NdB!-	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Protocol/Token Notes	<div><br></div><ul><li>VeChain<br></li><li>Enterprise &amp; developer adoption and sustainability first; decentralized infra second perhaps?</li><li>blockchain itself is VeChainThor; Vet is for value transfer and generates VTHO, a gas token that funds transaction costs</li><li>consumes .04% of energy compared to leading blockchains, amplify research-backed sustainability approaches</li><li>first public blockchain with Proof of Authority PoA consensus, which relies on known actors to secure network and validate blocks</li><li>high level of security, speed, compliance, regulation forward</li><li>governed by community-voted steering committee, which proposes public votes, helps run foundations and VIP improvement proposals.&nbsp;</li><li>main use was supply chain tracking for Walmart, where they tracked food products from farm to table with over 170m transactions</li><li>also incentivized/tracked sustainable driving behaviors with EV manufacturer BYD</li></ul><div><br></div><div><br></div><div><ul><li>The Graph<br></li><li>If you want to delegate, learn which indexers earn the best rewards, which you can check using the new Graph Explorer</li><li>Indexers choose which subgraphs to index and how to allocate their stake across these subgraphs, setting their prices per query, which affects delegator earnings. Choose indexers which provide high quality subgraphs</li></ul><div><br></div></div><div><br></div><div><br></div><div><br></div><div><ul><li>NEAR<br></li><li>Simple, fast, secure, cheap-to-use, carbon-neutral, for-devs-by-devs dapp ecosystem</li><li>allows anyone to make dapps, smart contracts, daos etc, Simple to use, with fees a fraction of other chains</li><li>harnesses nightshade blockchain design, allowing for sharded scaling and speed to process thousands of transactions in parallel</li><li>Aurora dapp allows users to operate on ethereum while slashing 99% of gas prices; octopus allows DOT/NEAR/ATOM</li><li>secuyres using PoS, underpinned by the NEAR token which allows dapp use, pay for products/services, transaction fees, governance, staking, storing data</li><li>network dynamically adds capacity by sharding; secured &amp; processed by validators, who are paid in NEAR to be in decentralized community of hardware operators; delegators can lend tokens to validators for a block reward; anyone can become validator</li></ul></div><div><br></div>	blockchain
pgM;8AyowU	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Data Brokers	"<ul><li>Brokers buy interactions between advertisers and market segments.</li><li>Advertisers bid on adspace, with space going to the highest bidder, but data brokers often receive information agnostic of which advertiser secures the space. Privacy badger is specifically built to cut this transaction off at the point of data collection.</li><li>Location-specialized data brokers have been sued in the past by the FTC, one such was Kochava</li><ul><li>The Federal Trade Commission filed a lawsuit against data broker Kochava Inc. for selling geolocation data from hundreds of millions of mobile devices that can be used to trace the movements of individuals to and from sensitive locations. Kochava’s data can reveal people’s visits to reproductive health clinics, places of worship, homeless and domestic violence shelters, and addiction recovery facilities. The FTC alleges that by selling data tracking people, Kochava is enabling others to identify individuals and exposing them to threats of stigma, stalking, discrimination, job loss, and even physical violence. The FTC’s lawsuit seeks to halt Kochava’s sale of sensitive geolocation data and require the company to delete the sensitive geolocation information it has collected.<br></li><li>-From&nbsp;<a href=""https://www.ftc.gov/legal-library/browse/cases-proceedings/ftc-v-kochava-inc"">https://www.ftc.gov/legal-library/browse/cases-proceedings/ftc-v-kochava-inc</a></li></ul></ul>"	business dataprivacy
CqvLr5}9`Q	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	HTML / CSS: Frontend DNA / RNA	"HTML<br><ul style=""""><ul><li><div>Sections &amp; subsections, like a document outline</div></li><li><div>Each heading creates an implicit section, with subsections by creating lower-level headings</div></li><li><div><span style=""font-weight: 700;"">HTML4 used to</span> Route content with div tags, give more semantic meaning to unfi</div></li><li><div>Now, HTML5 has more <span style=""font-weight: 700;"">sectioning elements</span></div></li><ul><li><div>Article - collection of sections&nbsp;</div></li><li><div>Aside - part of the database, but not part of an article</div></li><li><div>Nav - igation element</div></li><li><div>section</div></li></ul><li><div>HTML5 <span style=""font-weight: 700;"">Semantic grouping elements</span></div></li><ul><li><div>Footer, header, main</div></li></ul></ul></ul>CSS - cascading style sheets; Style sheet language<ul style=""""><li style=""font-weight: bold;""><div><span style=""font-weight: 400;"">The RNA to HTML’s DNA</span></div></li><li style=""font-weight: bold;""><div><span style=""font-weight: 400;"">How to apply</span></div></li><ul style=""font-weight: bold;""><li><div>Inline<span style=""font-weight: 400;"">, directly to an element (narrowest)</span></div></li><li><div><span style=""font-weight: 400;"">In a </span>style block<span style=""font-weight: 400;"">, to a webpage</span></div></li><li><div><span style=""font-weight: 400;"">From an </span>external style sheet<span style=""font-weight: 400;""> to an HTML5 block (broadest)</span></div></li></ul><li><span style=""font-weight: bold;"">CSS SYNTAX</span><br></li><ul><li><div><span style=""font-weight: 700;"">Selector</span> (points to element styled) and <span style=""font-weight: 700;"">declaration block</span> (contains 1 or more declarations [font, size, etc])</div></li><li><div><span style=""font-weight: 700;"">Spacing matters for selector</span> inside declaration block doesn’t matter</div></li><li><div>Selectors with the same declaration can be grouped with commas</div></li></ul><li>Basic Selector Types:<br></li><ul><li><div><span style=""font-weight: 700;"">Element</span> - based on individual HTML5 elements; applied globally</div></li><ul><li><div>p = paragraph</div></li><li><div>h1 = header</div></li><li><div>ul = unordered list</div></li></ul><li><div><span style=""font-weight: 700;"">Class</span> - based on class attributes applied to any HTML element</div></li><ul><li><div>one of most common</div></li><li><div>HTML class error, then a declaration which applies to all errors</div></li></ul><li><div><span style=""font-weight: 700;"">ID</span> - based on <span style=""font-weight: 700;"">unique</span> attributes applied to HTML elements</div></li><ul><li><div>Can only apply once on a page</div></li><li><div>Can accidentally <span style=""font-weight: 700;"">override class-based</span> styles</div></li><li><div>Can make element-specific by adding a specifier to the selector</div></li></ul><li><div><span style=""font-weight: 700;"">Descendent</span></div></li><ul><li><div>Target elements based on location within other elements</div></li><li><div>Aim for no more than 3 nested</div></li><li><div>String selectors together separated by whitespace</div></li></ul><li><div>Group selectors that share formatting</div></li><li><div><span style=""font-weight: 700;"">Generally case-insensitive, but be careful</span></div></li></ul><li><b>Fonts in CSS</b></li><ul><ul><li><div>Font-family&nbsp;</div></li><ul><li><div>list possibilities by priority, selected based on availability</div></li></ul><li><div>Font-weight</div></li><ul><li><div>100 lowest weight; 900 highest</div></li></ul><li><div>Font-style</div></li><ul><li><div>Normal, italic, oblique</div></li></ul><li><div>Font-size</div></li></ul><ul><li><div>System fonts vs. web fonts</div></li><li><div>System: pre-installed on every machine: TNR, Arial, Helvetica, Georgia, etc</div></li><ul><li><div>If your system doesn’t have the font, falls back to default</div></li></ul><li><div>Web fonts</div></li></ul></ul><li>Box Model for page layouts, four properties thereof</li><ul><li><div>Just because a property isn’t declared, doesn’t mean value is zero</div></li><ul><li><div>Most programs have defaults</div></li></ul><li><div>Everything on your page has its own box w/properties:</div></li><ul><li><div><span style=""font-weight: 700;"">Width&nbsp;</span></div></li><li><div><span style=""font-weight: 700;"">Border</span>&nbsp;</div></li><ul><li><div>has width, style, color</div></li><li><div>Defines outside edge of element</div></li><li><div>Can be defined for TRBL, or all at once</div></li><li><div><span style=""font-weight: 700;"">Use shorthand to set all 4 individually, simultaneously</span></div></li><ul><li><div><span style=""font-weight: 700;"">border: 1px solid black;</span></div></li></ul><li><div>There are a lot of border <span style=""font-weight: 700;"">styles</span></div></li><ul><li><div>Solid, dotted, dashed, etc</div></li></ul><li><div><span style=""font-weight: 700;"">Borders aren’t outlines</span>:&nbsp;</div></li><ul><li><div>Outlines always go around all sides; can’t specify</div></li><li><div>Not part of box model; won’t affect nearby elements</div></li></ul></ul><li><div><span style=""font-weight: 700;"">Padding</span></div></li><ul><li><div>Extra space within block</div></li><li><div>Holds content of box away from its edge</div></li><li><div><span style=""font-weight: 700;"">Can define padding individually</span> for each of the 4 sides</div></li><ul><li><div>Setting one doesn’t mean all the others are zero</div></li></ul><li><div><span style=""font-weight: 700;"">Shorthand notation:</span> Top Right Bottom Left (TRBL)</div></li><ul><li><div>With 2 values: first top/bottom, second left/right</div></li><li><div>If single value used, all defined equally</div></li></ul><li><div>Padding will be added to elements which don’t fit the size of their parents</div></li><ul><li><div>When defining width, think of how padding effects overall size</div></li></ul></ul><li><div><span style=""font-weight: 700;"">Margin</span></div></li><ul><li><div>Applied outside an element’s edge</div></li><li><div>Space around element/between page elements</div></li><li><div>Unlike horizontal margins, vertical margins collapse</div></li><ul><li><div>If 2 elements stacked, verticals carry over</div></li></ul></ul><li>Background extends all the way to the inside edge of an element's border</li><ul><li>Defaults to transparent</li><li>Can be solid colors, gradients, images, or a blend</li><li>Can control position, pattern repetition along axis, clipping</li></ul><li>The total width of an element = left border + left padding + content width + right border + right padding. The content width disregards padding and border width when calculating, since those are not part of the content.</li></ul></ul><li><b>COLOR IN CSS</b></li><ul><li><div>Color properties</div></li><ul><li><div>Background color</div></li><li><div>Border color</div></li><li><div>Foreground color</div></li></ul><li><div>Color values</div></li><ul><li><div>Hexadecimal: usually 6 values; can condense if each pair matches</div></li><li><div>RGB: set each Red-Green-Blue individually between 0 and 255</div></li><li><div>HSL Hue Saturation Lightness</div></li><ul><li><div>Hue is an angle on a color wheel with 360 degrees</div></li><li><div>Saturation is 0-100%</div></li><li><div>Lightness is 0-100% with 100 being white</div></li></ul><li><div>We can also define <span style=""font-weight: 700;"">Opacity with 0-1</span></div></li><ul><li><div>Defines opacity for entire element: borders, backgrounds, all</div></li><li><div>Can now add opacity to RGB or HSL values to define the opacity of each element</div></li></ul></ul><li><div>Common units of measurement</div></li><ul><li><div>Pixels (px)</div></li><ul><li><div>Absolute value; takes up a physical amount of space</div></li><li><div>Define height &amp; width for things</div></li></ul><li><div>Em</div></li><ul><li><div><span style=""font-weight: 700;"">Relative</span> values to the <span style=""font-weight: 700;"">font size of their parent</span> element</div></li><li><div>Value of text at its default size</div></li><li><div>Set 1 value for body element; set headings and paragraphs relative to values</div></li></ul><li><div>Rem (root em)</div></li><ul><li><div>Also relative, but to the font side of <span style=""font-weight: 700;"">root, not parent</span></div></li></ul><li><div>Percentages</div></li><ul><li><div>Responsive layout; containers expand or shrink based on viewport size</div></li><li><div>Not typically used for font sizing</div></li></ul></ul></ul><li>POSITIONING IN CSS</li><ul><li><div><span style=""font-weight: 700;"">Normal flow</span> - do nothing; stack everything on top of each other</div></li><ul><li><div>Block-level elements:</div></li><ul><li><div>Headings, paragraphs, divs, articles, asides, etc</div></li></ul><li><div>Inline elements: stack selves inside block-level elements</div></li><ul><li><div>Images, links, spans</div></li></ul><li><div>Position has values: static, relative, absolute, inherit, fixed</div></li></ul><li><div><span style=""font-weight: 700;"">Element floating</span></div></li><ul><li><div>Remain in normal flow, integrate with text</div></li><li><div>Float can shift either right or left from current position</div></li><ul><li><div><span style=""font-style: italic;"">float: right; float: left;</span></div></li><li><div>Create horizontal menus from unordered lists by stacking floats</div></li></ul><li><div>Use <span style=""font-style: italic;"">clear</span> to keep normal-flow objects like headers/footers from dropping behind floated elements</div></li><ul><li><div><span style=""font-style: italic;"">.footer{ clear: both; }</span></div></li></ul></ul><li><div><span style=""font-weight: 700;"">Absolute positioning</span></div></li><ul><li><div>Removes element from normal flow &amp; defines its own rules</div></li><li><div>Objects in normal flow move to fill the space absolute object left behind</div></li><li><div>Looks to nearest parent, then looks to layout itself to find its position</div></li><li><div><span style=""font-weight: 700;"">Fixed positioning</span> - absolutely positioned, relative to viewport. When page scrolled, object stays fixed.</div></li><li><div>By default, positioned elements appear on top of non-positioned</div></li></ul><li><div>Flexbox</div></li><ul><li><div>.container {display: flex; }</div></li><li><div>Set <span style=""font-weight: 700;"">Main axis</span> with {flex-direction: row} (horizontal), {flex-direction: column} (vertical)</div></li><ul><li><div>justify-content will always align content along main axis</div></li></ul><li><div>One-dimensional; ensures elements will display predictably regardless of screen/display size</div></li><li><div>Not ideal as a full-page layout system</div></li></ul></ul></ul><b>Priority</b><span style=""font-weight: 400;""> given from most specific to least specific<br></span><ol><li><span style=""font-weight: 600;"">Why&nbsp;rem&nbsp;is Often Preferred:</span>&nbsp;Using&nbsp;rem&nbsp;(root em) units allows elements to scale relative to the root&nbsp;font-size&nbsp;(usually set on&nbsp;the&nbsp;&lt;html&gt;&nbsp;element). This is excellent for&nbsp;<span style=""font-weight: 600;"">accessibility</span>&nbsp;because if a user changes their browser's default font size, elements&nbsp;sized with&nbsp;rem&nbsp;will scale proportionally, making the site more readable. It also helps with creating&nbsp;<span style=""font-weight: 600;"">scalable interfaces</span>&nbsp;where you&nbsp;can adjust the base font size to resize the entire UI consistently.</li><li><span style=""font-weight: 600;"">next/image&nbsp;Requirement:</span>&nbsp;As we discovered, the&nbsp;next/image&nbsp;component&nbsp;<span style=""font-style: italic;"">requires</span>&nbsp;you to provide&nbsp;width&nbsp;and&nbsp;height&nbsp;props, and these props expect&nbsp;pixel values. These are crucial for Next.js to prevent layout shift and optimize image loading. The component uses these pixel&nbsp;values to reserve space&nbsp;<span style=""font-style: italic;"">before</span>&nbsp;the image loads.</li><ul><li><span style=""font-weight: 600;"">Fixed Visual Size Goal:</span>&nbsp;You like the current&nbsp;50x50px (and 40x40px) size and want it consistent. Pixels guarantee&nbsp;this exact size regardless of the root font size. Using&nbsp;rem&nbsp;would make the icons potentially change size if the user's&nbsp;base font size isn't the default 16px (or whatever your base is set to - looks like 18px in your&nbsp;global.css).</li></ul><ul><li><span style=""font-weight: 600;"">Icons vs. Layout/Text:</span>&nbsp;The primary benefit of&nbsp;rem&nbsp;is scaling layout, spacing, and text. For small, decorative icons like these, which often have a specific desired&nbsp;pixel dimension, using fixed&nbsp;px&nbsp;values (especially when mandated by the component like&nbsp;next/image) is perfectly&nbsp;acceptable and often more practical.</li></ul></ol>"	fullstack webdev
m-v;W&(E{M	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Bundlers: Webpack vs Vite	"<ul><li>Vite prioritizes fast development experience and simplicity, making it ideal for smaller to medium-sized projects, while Webpack offers greater flexibility and customization options, making it better suited for large, complex applications where fine-grained control over the bundling process is needed<br></li><li>WEBPACK Core Concepts</li><ul><li>Open-source JS module bundler, secondarily can transform/serve HTML/CSS/image assets if the proper loaders are included</li><li>Takes dependent modules and generates <span style=""font-weight: 700;"">static assets</span> based on those modules</li><li>Creates a dependency graph allowing web devs to use a modular approach</li><ul><li>Requires Node.js</li></ul><li><span style=""font-style: italic;"">Webpack.config.js</span></li><li>&nbsp;Also provides built-in dev server which can be used as HTTP for serving in development, hot module replacement</li><li><span style=""font-weight: 700;"">Core Concepts</span></li><ul><li>An <span style=""font-weight: 700;"">entry point</span> indicates which module webpack should start its dependency graph from</li><ul><li>By default, ./src/index.js</li><li>Can set <span style=""font-style: italic;"">entry</span> property with:</li><ul><li><span style=""font-style: italic;"">Module.exports = {entry: ‘./path/to/my/entry/file.js&nbsp; };</span></li></ul></ul><li><span style=""font-weight: 700;"">Output</span> tells webpack where to <span style=""font-style: italic;"">emit the bundles</span> it creates, how to name them.&nbsp;</li><ul><li>One main output file, rest in dist</li><li>If you want to set in webpack.config</li><li>const path = require('path');</li><li><br></li><li>module.exports = {</li><li>&nbsp; entry: './path/to/my/entry/file.js',</li><li>&nbsp; output: {</li><li>&nbsp; &nbsp; path: path.resolve(__dirname, 'dist'),</li><li>&nbsp; &nbsp; filename: 'my-first-webpack.bundle.js'</li><li>&nbsp; }</li><li>};</li></ul><li><span style=""font-weight: 700;"">Loaders</span> tell webpack how to process non-JS/JSON files and convert them into valid modules for the dependency graph</li><ul><li>Test - identifies which file/test should be transformed</li><li>Use - which loader should do transforming</li><ul><li>Below: <span style=""font-style: italic;"">when webpack comes across&nbsp; a path resolving in a .txt file, instead of a require()/import statement, use raw-loader to transform it before adding it to the bundle</span></li></ul><li>&nbsp;module: {</li><li>&nbsp; &nbsp; rules: [</li><li>&nbsp; &nbsp; &nbsp; { test: /\.txt$/, use: 'raw-loader' }</li><li>&nbsp; &nbsp; ]</li><li>&nbsp; }</li></ul><li><span style=""font-weight: 700;"">Plugins</span> can do many things like optimization, management, injection of enviro&nbsp; variables</li><ul><li>For use, must <span style=""font-style: italic;"">require()</span> and add to <span style=""font-style: italic;"">plugins</span> array</li></ul><li><span style=""font-weight: 700;"">Mode</span>&nbsp; - set to either <span style=""font-style: italic;"">development, production</span> or <span style=""font-style: italic;"">none</span>, enabling webpack’s built-in optimizations for each enviro</li><ul><li>Default is <span style=""font-style: italic;"">production</span></li></ul></ul><br></ul></ul>"	fullstack webdev
Ng-1@V?4fN	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Databases; DBMS	"<ul><li><h3>ACID Principles<br><ul style=""""><li style=""font-weight: 400;""><div>Set of properties which guarantee reliable transaction processes; governs failure recovery</div></li><li style=""font-weight: 400;""><div><span style=""font-weight: 700;"">Atomicity</span>: all of transaction succeeds, or none does</div></li><li style=""font-weight: 400;""><div><span style=""font-weight: 700;"">Consistency</span>: all data valid according to rules, constraints, cascades, triggers</div></li><li style=""font-weight: 400;""><div><span style=""font-weight: 700;"">Isolation: </span>No transaction is affected by any other; or readable if still in process</div></li><li style=""font-weight: 400;""><div><span style=""font-weight: 700;"">Durability:</span> once committed, a transaction persists, even if crashes happen immediately after. If confirmed, it must have succeeded</div></li><li style=""font-weight: 400;""><div>All major relational DBMS have ACID; NoSQL sacrifices consistency/durability but can provide atomicity</div></li><li><span style=""font-size: 20px; font-weight: 400;"">Data out of sync for a time, but eventually in sync</span><br></li></ul></h3></li></ul>Types of failure - ACID<br><ul><li><h3><li><span style=""font-size: 20px;"">Transaction failure</span><span style=""font-size: 20px; font-weight: 400;""> - bad input; consistency violation; timeout or deadlock in DBMS</span><br></li><li><span style=""font-size: 20px;"">System Failure</span><span style=""font-size: 20px; font-weight: 400;""> - bug in DBMS, OS fault, hardware failure</span><br></li><li><span style=""font-size: 20px;"">Media failure</span><span style=""font-size: 20px; font-weight: 400;""> - not being able to read/write storage; can be media or OS problem; relatively rare</span><br></li></h3></li></ul>FIREBASE [NoSQL JSON Database]<br><ul><ul><li><div>Store data as <span style=""font-weight: 700;"">one JSON tree</span>; <span style=""font-weight: 700;"">Structures your data after your view</span></div></li><li><div>Complex, hierarchical data is harder to organize at scale</div></li><li><div>Deep queries with <span style=""font-weight: 700;"">limited sorting/filtering functionality</span></div></li><ul><li><div>Queries can sort <span style=""font-weight: 700;"">or</span> filter on a property, but not both</div></li><li><div>Queries are deep by default; always return entire subtree</div></li><li><div>Queries can access data at any granularity, down to leaf-node</div></li></ul><li><div>Basic <span style=""font-weight: 700;"">write</span> and <span style=""font-weight: 700;"">transaction</span> operations</div></li><li><div>If you need something to be in your <span style=""font-weight: 700;"">assets dynamically</span>, it must also be in your <span style=""font-weight: 700;"">functions folder</span>&nbsp;</div></li><li><span style=""font-weight: 700;"">Realtime DB Deep-Dive Kahhle</span></li><ul><li><div>Realtime Database SDK for iOS, Android, JS</div></li><li><div><span style=""font-style: italic;"">const rootRef = firebase.database().reference();</span></div></li><li><span style=""font-weight: 700;"">Realtime Events</span></li><ul><li><div><span style=""font-weight: 700;"">Value Events</span> - attach to dB reference</div></li><ul><li><div>Every time data changes location, give me callback</div></li><li><div>Synchronizing app state, not just sending updates</div></li><li><div>Bandwidth conscious - takes delta events from server</div></li></ul><li><div><span style=""font-weight: 700;"">Child Events</span></div></li><ul><li><div>Can be attached to reference</div></li><li><div>Provide more than one kind of callback</div></li><li><div>Can provide changed, updated, deleted callbacks</div></li></ul></ul><li><span style=""font-weight: 700;"">FirebaseUI</span></li><ul><li><div>Database Reference + Recycler View</div></li><li><div>Handles <span style=""font-weight: 700;"">all event management</span> for you</div></li><li><div>Integrations with Angular, Polymer, React, Ember</div></li><li><div>Access <span style=""font-weight: 700;"">items in lists</span>&nbsp;</div></li><ul><li><div>by creating <span style=""font-weight: 700;"">children of children</span></div></li><li><div>By using <span style=""font-style: italic;"">list.push(“item”);</span></div></li><ul><li><div>Automatically creates unique identifier</div></li></ul></ul><li><div><span style=""font-weight: 700;"">Collisions -</span> two operations us the same key</div></li></ul><li><span style=""font-weight: 700;"">Offline Management</span></li><ul><li><div>Intermittent - database SDK locally caches on your device</div></li><li><div><span style=""font-weight: 700;"">Persistent device cache</span> enabled with one line of code</div></li><ul><li><div>When you restart your phone or close the app, the cache doesn’t disappear</div></li><li><div>If edits submitted offline, they’re added to firebase as a merge request</div></li></ul></ul></ul></ul><li>RELATIONAL VS. NONRELATIONAL</li><ul><li><span style=""font-weight: 700;"">Structured Query Language</span><br></li><li>The <span style=""font-weight: 700;"">popular favorite</span> switched from minimizing data duplication/storage costs with SQL databases in the 70s, to maximizing developer productivity with NoSQL databases in late 2000s.<br></li><li><span style=""font-weight: 700;"">Relational</span>: MySQL, PostgreSQL, SQLite3<br></li><ul><li>(based on relational algebra)<br></li><li>Good choice for applications involving managing several transactions; complicated querying; data analysis<br></li><li>Foreign keys uniquely identify any atomic piece of data within a table<br></li></ul><li><span style=""font-weight: 700;"">Non-relational</span>: MongoDB; represent data in collections of JSON<br></li><ul><li><a href=""https://www.mongodb.com/nosql-explained"">NoSQL Wiki</a><br></li><ul><li><span style=""font-weight: 700;"">Non-tabular</span>; store data differently from relational tables<br></li><li><a href=""https://www.mongodb.com/nosql-explained"">Types of NoSQL database:</a><br></li><ul><li><span style=""font-weight: 700;"">Document</span> - stores docs similar to JSON (JavaScript Object Notation)<br></li><ul><li>Each contains key-value pairs in a variety of types including string, num, bool, array, object<br></li><li><span style=""font-weight: 700;"">General-purpose</span> database which can horizontally scale for big data volumes<br></li><li>MongoDB is world’s most popular NoSQL DB, and is a document database<br></li><li><span style=""font-weight: 700;"">Firebase - NoSQL JSON database</span><br></li></ul><li><span style=""font-weight: 700;"">Key-value</span> - simpler, each item contains K/V<br></li><ul><li>Value can only be retrieved by key<br></li><li>Great for big data with <span style=""font-weight: 700;"">simple querying</span><br></li><li><span style=""font-weight: 700;"">Use cases</span>: storing preferences; caching<br></li><li>Redis and RyanoDB<br></li></ul><li><span style=""font-weight: 700;"">Wide-column</span> - tables, rows, dynamic columns<br></li><ul><li>Highly <span style=""font-weight: 700;"">flexible</span>; each row doesn’t require same columns<br></li><li>Considered two-dimensional K/V databases<br></li><li>Large data; <span style=""font-weight: 700;"">predictable query</span> patterns<br></li><li><span style=""font-weight: 700;"">Use cases:</span> IoT data, user profile data<br></li><li>Cassandra and HBase<br></li></ul><li><span style=""font-weight: 700;"">Graph</span> - nodes and edges<br></li><ul><li>Nodes typically for people, places, things<br></li><li>Edges typically for relationships<br></li><li><span style=""font-weight: 700;"">Use cases:</span> social networks, fraud detection, recommendation engines<br></li><li>Neo4j and JanusGraph<br></li></ul></ul></ul></ul></ul><li>Real-time databases&nbsp;<br></li><ul><li>handle workloads with constant state change<br></li><li>Traditional databases contain persistent data<br></li><li>Useful for accounting, banking, law, medical records, multimedia, process control, reservation systems, scientific analysis<br></li><li><span style=""font-weight: 700;"">Temporal Validity:</span> timing constraints representing a range of values for which the data are valid<br></li><li>What does the system do when deadlines are not met?<br></li></ul><li>Transactions&nbsp;<br></li><ul><li>executions of a program which access/change data<br></li><li>Different from a <span style=""font-weight: 700;"">stream</span> which is read-only operations<br></li><li><span style=""font-weight: 700;"">Data consistency</span>: a database must let only one transaction at a time operate<br></li><li><span style=""font-weight: 700;"">Priority</span> can be given based on<br></li><ul><li>Earliest deadline (PT = DT)<br></li><li>Highest value (PT = 1/VT)<br></li><li>Value inflated deadline (PT = DT/VT)<br></li></ul><li><span style=""font-weight: 700;"">Relative constraints</span> ensure transactions enter system concurrently with their associated groups<br></li><ul><li><span style=""font-weight: 700;"">Wait policy</span> - all non-requesting blocks wait until most essential one processed<br></li><ul><li>Can improve performance by 50%<br></li></ul><li>Predictive deadline method - builds schedule, determines if any transaction would miss its deadline under the schedule<br></li></ul></ul><li>Transaction deadlines<br></li><ul><li><span style=""font-weight: 700;"">Hard deadline:</span> Missed deadline = critical failure; used in <span style=""font-weight: 700;"">sensor systems</span><br></li><li><span style=""font-weight: 700;"">Firm deadline</span>: measures how important it is to complete the transaction at some point after it arrives. Sometimes completes transactions after deadline; <span style=""font-weight: 700;"">autopilot</span><br></li><li><span style=""font-weight: 700;"">Soft deadlines</span>: aperiodic, irregular schedule, <span style=""font-weight: 700;"">operator switchboard</span><br></li></ul><li>Further Concepts<br></li><ul><li><a href=""https://www.digitalocean.com/community/tutorials/understanding-database-sharding""><span style=""font-weight: 700;"">Shard</span></a><span style=""font-weight: 700;""> - horizontal partition, each held on different database server instance to spread load</span><br></li><ul><li><span style=""font-weight: 700;"">Row structuring of database instead of columns&nbsp;</span><br></li><li>Primary <span style=""font-weight: 700;"">advantages</span>: makes data structures infinitely dynamically scaleable<br></li><ul><li>Each is the <span style=""font-style: italic;"">single source</span> for this subset of data<br></li><li><span style=""font-weight: 700;"">Shared-nothing architecture</span> - shards don’t share same data or computing resources<br></li><li>Boon to <span style=""font-weight: 700;"">horizontal scaling/scaling out</span> - add more machines to stack in order to speed processing and spread load<br></li><li>When a table is sharded, queries have to go thru fewer rows<br></li></ul><li><span style=""font-weight: 700;"">Disadvantages</span><br></li><ul><li>Complexity of implementation<br></li><ul><li>Users must manage data across multiple shared locations<br></li></ul><li><span style=""font-weight: 700;"">Database hotspot</span> - where one shard is receiving significantly more data input/processor load than another<br></li><li>Not native to every engine - PostgreSQL does not support<br></li></ul></ul><li><a href=""https://en.wikipedia.org/wiki/Data_lake#:~:text=A%20data%20lake%20is%20usually,advanced%20analytics%20and%20machine%20learning."">Data Lake</a> - system or repository of data stored in natural/raw format, usually object bloobs or files<br></li><ul><li>A lake is usually a single source of all enterprise data, raw and transformed, for reporting, visualization, analytics &amp; ML<br></li><li>Can include:<br></li><ul><li>Structured relational data (rows + columns)<br></li><li>Semi-structured data (CSV, LOG, XML, JSON)<br></li><li>Unstructured data (emails, documents, pdfs)<br></li><li>Binary data (images, audio, video)<br></li><li><span style=""font-weight: 700;"">Data swamp</span> - deteriorated/unmanaged data lake<br></li></ul></ul></ul><li>Business Logic (SQL/NoSQL)<br></li><ul><li>Heart of app’s value, where you sort out user-facing decisions + computations<br></li><li>Solid object oriented skills are needed here.<br></li><li>Frameworks might be needed here as well.<br></li><li>PostgreSQL<br></li><ul><li>postgres --version<br></li><li><a href=""https://www.digitalocean.com/community/tutorials/how-to-use-postgresql-with-your-ruby-on-rails-application-on-macos"">PostgreSQL How-To</a> 1<br></li><li><a href=""https://tapoueh.org/blog/2017/06/how-to-write-sql/"">PostgreSQL How-To</a> 2<br></li><li><a href=""https://www.digitalocean.com/community/tutorials/introduction-to-queries-postgresql"">Queries in PostgreSQL</a><br></li><li>Make user w/limited capabilities: <span style=""font-style: italic;"">createuser -P -d baseUser</span><br></li><li><span style=""font-style: italic;"">rails new </span><span style=""font-style: italic;"">appname</span><span style=""font-style: italic;""> -d=postgresql</span><br></li><li><span style=""font-style: italic;"">echo 'export APPNAME_DATABASE_PASSWORD=""PostgreSQL_Role_Password""' &gt;&gt; ~/.bash_profile</span><br></li><li><span style=""font-style: italic;"">rails -h for documentation</span><br></li></ul></ul></ul><br><ul><li><a href=""https://firebase.google.com/docs/database/web/structure-data"">https://firebase.google.com/docs/database/web/structure-data</a><br></li></ul>"	dataflow fullstack webdev
LKmX%^wX6E	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	JavaScript (JS) + React, JSX, TS	"<div style=""font-weight: bold;""><br></div><ul style=""""><li style=""font-weight: bold;""><div>Types<span style=""font-weight: 400;"">:&nbsp;</span></div></li><ul style=""font-weight: bold;""><li><div><span style=""font-weight: 400;"">Number&nbsp;</span></div></li><ul><li><div>No integers<span style=""font-weight: 400;"">; apparent integers implicitly floats</span></div></li><li><div><span style=""font-weight: 400;"">Int values treated as 32-bit ints</span></div></li><li><div>Standard Arithmetic<span style=""font-weight: 400;""> supported: +, -, *, /, %, =, +=, -=, ++, --</span></div></li><ul><li><div>Comparisons:<span style=""font-weight: 400;"">&nbsp;=, ===, !==, !=, &lt;, &gt;, &lt;=, &gt;=</span></div></li><li><div><span style=""font-weight: 400;"">Equality more complicated than comparisons</span></div></li><ul><li><div><span style=""font-weight: 400;"">Double-equals performs type conversion:&nbsp;</span></div></li><ul><li><div><span style=""font-weight: 400; font-style: italic;"">123 == ‘123’;</span><span style=""font-weight: 400;"">&nbsp; &nbsp; &nbsp; //true</span></div></li></ul><li><div><span style=""font-weight: 400;"">To </span>avoid type coercion, use ===<span style=""font-weight: 400;""> operator</span></div></li><ul><li><div><span style=""font-weight: 400; font-style: italic;"">123 === ‘123’;</span><span style=""font-weight: 400;""> &nbsp; //false</span></div></li></ul></ul><li><div><span style=""font-weight: 400;"">!= and !== operators</span></div></li></ul><li><div><span style=""font-weight: 400;"">Also has special values NaN, Infinity, -Infinity</span></div></li><ul><li><div><span style=""font-weight: 400;"">Test with isNaN(), isFinite()</span></div></li></ul></ul><li><div><span style=""font-weight: 400;"">String</span></div></li><ul><li><div><span style=""font-weight: 400; font-style: italic;"">parseInt()</span><span style=""font-weight: 400;""> converts string to integer</span></div></li><ul><li><div><span style=""font-weight: 400;"">Base for conversion is mandatory second argument:</span></div></li><li><div><span style=""font-weight: 400; font-style: italic;"">parseInt(‘123’, 10); &nbsp; </span><span style=""font-weight: 400;"">//123</span></div></li></ul><li><div><span style=""font-weight: 400;"">If adding a string to a number, everything is converted to a string first</span></div></li><ul><li><div><span style=""font-weight: 400;"">‘3’ + 4 + 5; // “345”</span></div></li><li><div><span style=""font-weight: 400;"">3 + 4 + ‘5’; // ”75”</span></div></li><li><div><span style=""font-weight: 400;"">Convert something to a string by adding an empty string to it</span></div></li></ul></ul><li><div><span style=""font-weight: 400;"">Boolean</span></div></li><ul><li><div><span style=""font-weight: 400;"">Conversions: false, 0, “”, NaN, null, undefined all become </span><span style=""font-weight: 400; font-style: italic;"">false</span></div></li><li><div><span style=""font-weight: 400;"">All others become true, are “truthy”</span></div></li></ul><li><div><span style=""font-weight: 400;"">Symbol</span></div></li><li><div><span style=""font-weight: 400;"">Object</span></div></li><ul><li><div><span style=""font-weight: 400;"">Everything except core types is an object in JavaScript</span></div></li><li><div><span style=""font-weight: 400;"">Function, Array, Date, RegExp</span></div></li><li><div><span style=""font-weight: 400;"">Simple collections of name-value pairs; similar to:</span></div></li><ul><li><div><span style=""font-weight: 400;"">Python dictionaries</span></div></li><li><div><span style=""font-weight: 400;"">Perl/Ruby Hashes</span></div></li><li><div><span style=""font-weight: 400;"">C/C++ Hash tables</span></div></li><li><div><span style=""font-weight: 400;"">Java HashMaps</span></div></li><li><div><span style=""font-weight: 400;"">PHP Associative arrays</span></div></li></ul><li><div>Create an object</div></li><ul><li><div><span style=""font-weight: 400;"">var obj = {properties};</span></div></li><li><div>Object-literal syntax<span style=""font-weight: 400;""> is core of JSON format, should always use</span></div></li></ul><li><div>Access object properties</div></li><ul><li><div><span style=""font-weight: 400;"">Parent-child properties can be accessed with </span>dot-notation<span style=""font-weight: 400;""> chain:</span></div></li><ul><li><div><span style=""font-weight: 400;"">obj.details.color = ‘orange’;</span></div></li><li><div><span style=""font-weight: 400;"">obj.name = ‘Simon’</span></div></li></ul><li><div><span style=""font-weight: 400;"">Or </span>bracket notation</div></li><ul><li><div><span style=""font-weight: 400;"">obj[‘name’] = ‘Simon’;</span></div></li><li><div><span style=""font-weight: 400;"">Var name = obj[‘name’];</span></div></li><li><div><span style=""font-weight: 400;"">Var user = prompt(‘What is your key?’)</span></div></li><li><div><span style=""font-weight: 400;"">Obj[user] = prompt(‘what is its value?’)</span></div></li></ul></ul><li><div><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"">Arrays</a><span style=""font-weight: 400;""> (methods in documentation)</span></div></li><ul><li><div>Length = highest index + 1</div></li><li><div>Create:</div></li><ul><li><div><span style=""font-weight: 400; font-style: italic;"">var a = [‘0’, ‘1’, ‘2’];</span></div></li><li><div><span style=""font-weight: 400; font-style: italic;"">bar a = new Array();</span></div></li><ul><li><div><span style=""font-weight: 400; font-style: italic;"">a[0] = ‘0’</span></div></li></ul><li><div><span style=""font-weight: 400; font-style: italic;"">a.length; // 3</span></div></li></ul><li><div>Iterate:</div></li><ul><li><div><span style=""font-weight: 400; font-style: italic;"">For (var i=0; i&lt;a.length; i++) {</span></div></li><li><div><span style=""font-weight: 400; font-style: italic;"">Do something with a[i]}</span></div></li></ul><li><div><span style=""font-weight: 400;"">Append:</span></div></li><ul><li><div><span style=""font-weight: 400; font-style: italic;"">a.push(item);</span></div></li></ul><li><div><span style=""font-weight: 400;"">Non-existent indices return undefined</span></div></li></ul><li><div><span style=""font-weight: 400;"">Functions</span></div></li><ul><li><div><span style=""font-weight: 400;"">Take 0 or more named parameters</span></div></li><ul><li><div><span style=""font-weight: 400;"">If called with no parameters; they are set to </span><span style=""font-weight: 400; font-style: italic;"">undefined</span></div></li><li><div><span style=""font-weight: 400;"">If called with more than allowed, ignores final ones</span></div></li></ul><li><div><span style=""font-weight: 400;"">Can declare its own function-local variables</span></div></li><li><div><span style=""font-weight: 400;"">You can call </span><span style=""font-weight: 400; font-style: italic;"">arguments.length</span><span style=""font-weight: 400;""> to iterate through args</span></div></li><li><div>Rest parameter operator:<span style=""font-weight: 400;""> includes within variable entire list of uncaptured args which function was called with</span></div></li><ul><li><div><span style=""font-weight: 400;"">Syntax: </span><span style=""font-weight: 400; font-style: italic;"">...variable</span></div></li><li><div><span style=""font-weight: 400;"">Use </span><span style=""font-weight: 400; font-style: italic;"">for...of</span><span style=""font-weight: 400;""> loops to ensure all values iterated through</span></div></li></ul><li><div>Anonymous functions<span style=""font-weight: 400;""> can be used anywhere an expression would be:</span></div></li><ul><li><div><span style=""font-weight: 400; font-style: italic;"">var avg = function functionName() {function guts}</span></div></li><li><div><span style=""font-weight: 400;"">Name them if you wanna call em recursively</span></div></li></ul></ul></ul><li><div><span style=""font-weight: 400;"">Null + undefined</span></div></li><li><div><span style=""font-weight: 400;"">Error</span></div></li></ul><li style=""font-weight: bold;""><div>Variables</div></li><ul style=""""><li style=""font-weight: bold;""><div><span style=""font-weight: 400;"">New vars declared using either&nbsp;</span></div></li><ul style=""""><li style=""font-weight: bold;""><div><span style=""font-style: italic;"">let</span><span style=""font-weight: 400;""> - declare block-level variables available from enclosed block</span></div></li><ul style=""""><li style="""">for-i loops NEED let for block-scoped iterators; all need parentheses in TS</li></ul><li style=""font-weight: bold;""><div><span style=""font-style: italic;"">const</span><span style=""font-weight: 400; font-style: italic;""> -</span><span style=""font-weight: 400;""> values not intended to change</span></div></li><li style=""font-weight: bold;""><div><span style=""font-style: italic;"">var</span><span style=""font-weight: 400;""> - most common, no restrictions, available from enclosed function</span></div></li></ul></ul><li style=""font-weight: bold;""><div>Control structures</div></li><ul style=""""><li style=""font-weight: bold;""><div><span style=""font-weight: 400;"">Each function execution creates a ‘scope’ object which holds local variables</span></div></li><ul style=""font-weight: bold;""><li><div><span style=""font-weight: 400;"">Initialized with any function parameters</span></div></li></ul><li style=""font-weight: bold;""><div><span style=""font-weight: 400; font-style: italic;"">If, else, for, while, do-while</span></div></li><ul style=""font-weight: bold;""><li><div><span style=""font-weight: 400; font-style: italic;"">for(let i=1; i&lt;5; i++) {}</span></div></li><li><div><span style=""font-weight: 400; font-style: italic;"">for(let value of array) {} </span><span style=""font-weight: 400;"">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//do something with value</span></div></li><li><div><span style=""font-weight: 400; font-style: italic;"">for(let property in object){}</span><span style=""font-weight: 400;""> &nbsp; &nbsp; &nbsp; &nbsp; //do something with property</span></div></li><li><div><span style=""font-weight: 400; font-style: italic;"">do{ input = get_input();&nbsp; } while (inputIsNotValid(input));</span></div></li></ul><li style=""font-weight: bold;""><div><span style=""font-weight: 400;"">! Operator (place before boolean and the phrase will evaluate to the opposite)</span></div></li><li style=""font-weight: bold;""><div><span style=""font-weight: 400;"">&amp;&amp; and || operators&nbsp;</span></div></li><ul style=""""><li style=""font-weight: bold;""><div><span style=""font-weight: 400;"">use </span>short-circuit logic<span style=""font-weight: 400;""> - whether they execute second operand is dependent on first</span></div></li><ul style=""font-weight: bold;""><li><div><span style=""font-weight: 400;"">Useful for null-checks before attribute accessing:</span></div></li><ul><li><div><span style=""font-weight: 400; font-style: italic;"">var name = o &amp;&amp; o.getName();</span></div></li></ul><li><div><span style=""font-weight: 400;"">Or caching values</span></div></li><ul><li><div><span style=""font-weight: 400; font-style: italic;"">Var name = cachedName || (cachedName = getName());</span></div></li></ul><li><div><span style=""font-weight: 400;"">Ternary operator</span></div></li><ul><li><div><span style=""font-weight: 400; font-style: italic;"">Var allowed = (age &gt; 18) ? ‘yes’ : ‘no’;</span></div></li></ul></ul><li style=""font-weight: bold;""><div><span style=""font-weight: 400;"">Switch statement</span></div></li><ul style=""font-weight: bold;""><li><div><span style=""font-weight: 400;"">Can have expressions in both the switch and case statements</span></div></li><li><div><span style=""font-weight: 400;"">Values will compare using === when executing</span></div></li></ul></ul><li><b>Assignment Operators</b><br></li><ul><li>=, !=, -=, *=, /=, %=</li></ul><li style=""font-weight: bold;""><div><span style=""font-style: italic;"">this</span><span style=""font-weight: 400; font-style: italic;""> </span><span style=""font-weight: 400;"">keyword refers to current object inside a function</span></div></li><ul style=""font-weight: bold;""><li><div><span style=""font-weight: 400;"">If you called using dot or bracket notation, that object becomes </span><span style=""font-weight: 400; font-style: italic;"">this</span></div></li><li><div><span style=""font-weight: 400;"">If not, </span><span style=""font-weight: 400; font-style: italic;"">this</span><span style=""font-weight: 400;""> refers to the global object</span></div></li><li><div><span style=""font-style: italic;"">new</span><span style=""font-weight: 400; font-style: italic;""> </span><span style=""font-weight: 400;"">&nbsp;keyword is related, creates brand new object and then calls function on it</span></div></li><ul><li><div><span style=""font-weight: 400;"">Functions designed to be called by </span><span style=""font-weight: 400; font-style: italic;"">new</span><span style=""font-weight: 400;""> are called constructors.</span></div></li></ul><li><div><span style=""font-style: italic;"">class.prototype</span><span style=""font-weight: 400;""> is an object shared by all instances of your called class</span></div></li><ul><li><div><span style=""font-weight: 400;"">Has a set of assigned properties which appear always with instances - </span><span style=""font-style: italic;"">prefab</span>,<span style=""font-weight: 400;""> if you will.</span></div></li></ul><li><div>Class methods aren’t bound by default</div></li><ul><li><div><span style=""font-weight: 400;"">Use </span><span style=""font-weight: 400; font-style: italic;"">function.prototype.bind(struct)</span><span style=""font-weight: 400;""> to set future </span><span style=""font-weight: 400; font-style: italic;"">this</span><span style=""font-weight: 400;""> calls to always refer to </span><span style=""font-weight: 400; font-style: italic;"">struct</span></div></li><ul><li><div><span style=""font-weight: 400;"">&lt;</span><span style=""font-weight: 400;"">button </span><span style=""font-weight: 400;"">onClick</span><span style=""font-weight: 400;"">={(</span><span style=""font-weight: 400;"">e</span><span style=""font-weight: 400;"">)</span><span style=""font-weight: 400;""> </span><span style=""font-weight: 400;"">=&gt;</span><span style=""font-weight: 400;""> </span><span style=""font-weight: 400;"">this</span><span style=""font-weight: 400;"">.</span><span style=""font-weight: 400;"">deleteRow</span><span style=""font-weight: 400;"">(</span><span style=""font-weight: 400;"">id</span><span style=""font-weight: 400;"">,</span><span style=""font-weight: 400;""> e</span><span style=""font-weight: 400;"">)}&gt;</span><span style=""font-weight: 400;"">Delete Row</span><span style=""font-weight: 400;"">&lt;/</span><span style=""font-weight: 400;"">button</span><span style=""font-weight: 400;"">&gt;</span></div></li></ul><li><div><span style=""font-weight: 400;"">Can also use arrow function:</span></div></li><ul><li><div><span style=""font-weight: 400; font-style: italic;"">&lt;</span><span style=""font-weight: 400; font-style: italic;"">button </span><span style=""font-weight: 400; font-style: italic;"">onClick</span><span style=""font-weight: 400; font-style: italic;"">={(</span><span style=""font-weight: 400; font-style: italic;"">e</span><span style=""font-weight: 400; font-style: italic;"">)</span><span style=""font-weight: 400; font-style: italic;""> </span><span style=""font-weight: 400; font-style: italic;"">=&gt;</span><span style=""font-weight: 400; font-style: italic;""> </span><span style=""font-weight: 400; font-style: italic;"">this</span><span style=""font-weight: 400; font-style: italic;"">.</span><span style=""font-weight: 400; font-style: italic;"">deleteRow</span><span style=""font-weight: 400; font-style: italic;"">(</span><span style=""font-weight: 400; font-style: italic;"">id</span><span style=""font-weight: 400; font-style: italic;"">,</span><span style=""font-weight: 400; font-style: italic;""> e</span><span style=""font-weight: 400; font-style: italic;"">)}&gt;</span><span style=""font-weight: 400; font-style: italic;"">Delete Row</span><span style=""font-weight: 400; font-style: italic;"">&lt;/</span><span style=""font-weight: 400; font-style: italic;"">button</span><span style=""font-weight: 400; font-style: italic;"">&gt;</span></div></li></ul></ul></ul></ul></ul><h1 style=""font-weight: bold;""><span style=""font-weight: 400;"">JS vs. JSX</span></h1><ul style=""font-weight: bold;""><li><div><span style=""font-weight: 400;"">JSX ostensibly lets you write HTML tags in your code, but so does JS</span></div></li><ul><li><div><span style=""font-weight: 400;"">No difference in file extension, bundler resolves everything</span></div></li><li><div><span style=""font-weight: 400;"">Only purpose of JSX: ease React component creation</span></div></li></ul><li><div><span style=""font-weight: 400;"">.js has cleaner import statements requiring no file extensions</span></div></li></ul><div><br></div><div>REACTJS</div><div><ul><ul><li><div>Frontend dependencies:&nbsp;</div></li><ul><li><div>React Router handles navigation in an app</div></li><li><div>Bootstrap styles front-end components</div></li><li><div>jQuery and Popper work with Bootstrap</div></li></ul><li><div><span style=""font-weight: 700;"">Not made from web elements; can’t be styled the same way</span></div></li><ul><li><div>Requires stylesheets in javascript resembling CSS, but not the same</div></li><li><div>React and ReactDOM are available over a <span style=""font-weight: 700;"">CDN (Content Delivery Network)</span>, a distributed server network that delivers web content to user based on geographic location</div></li></ul><li><span style=""font-weight: 700;"">React elements&nbsp;</span></li><ul><li><div>smallest building blocks of React apps</div></li><ul><li><div><span style=""font-weight: 700;"">Immutable</span> - once created, children/attributes immutable</div></li><li><div>Each represents UI at a certain point in time</div></li></ul><li><div>Unlike browser DOM objects, React elements are plain objects</div></li><li><div>React DOM updates to match react elements</div></li><li><div>Components are made of elements</div></li><li><div>“root” DOM node has everything inside managed by React DOM</div></li><li><div>The only way to <span style=""font-weight: 700;"">update UI is by creating a new element and passing it to ReactDOM.render()</span></div></li><ul><li><div>React only applies necessary DOM updates</div></li></ul><li><span style=""font-weight: 700;"">Rendering Elements</span></li><ul><li><div><span style=""font-style: italic;"">Const element = &lt;h1&gt;Hello, world&lt;/h1&gt;</span></div></li><ul><li><div>Components are made of elements</div></li></ul><li><div>A &lt;div&gt;&nbsp; is a root DOM node if everything inside it is managed by React DOM</div></li><ul><li><div>Usually there’s just one root node</div></li><li><div>HTML: <span style=""font-style: italic;"">&lt;div id=”root”&gt;&lt;/div&gt;</span></div></li></ul><li><div><span style=""font-weight: 700;"">Render a React Element into root DOM node:</span></div></li><ul><li><div><span style=""font-style: italic;"">Const element = &lt;h1&gt;Hello, world&lt;/h1&gt;</span></div></li><li><div><span style=""font-style: italic;"">ReactDOM.render(element, document.getElementById(‘root’));</span></div></li></ul><li><div>Display <span style=""font-weight: 700;"">Dynamic Dates:</span></div></li><ul><li><div><span style=""font-weight: 700; font-style: italic;"">{new Date().toLocaleTimeString()}</span></div></li></ul></ul></ul><li><span style=""font-weight: 700;"">Components and Props</span></li><ul><li><div>Components are prefabs accepting arbitrary inputs called props and returning React elements</div></li><ul><li><div>Always start names with a capital letter, since <b>react treats comps with lowercase starts as DOM tags</b></div></li><li><div>Every component is a JS function that returns JSX markup, not HTML markup</div></li><li><div>JS functions can only return one thing, so in React you can only return one parent element. Often multiple components are returned by wrapping them in an empty react fragment &lt;&gt; &lt;/&gt; which is superior to a div in that it doesn't add another component to the page</div></li><li><div>Props allow you to pass value to components</div></li></ul><li><div>Easiest definition: <b>write JavaScript function</b></div></li><ul><li><div><span style=""font-style: italic;"">Function Welcome(props) {</span></div></li><ul><li><div><span style=""font-style: italic;"">return &lt;h1&gt;Hello, {props.name}&lt;/h1&gt;;&nbsp; }</span></div></li></ul></ul><li><div>React elements that…</div></li><ul><li><div>Represent DOM tags: <span style=""font-style: italic;"">const element = &lt;div /&gt;;</span></div></li><li><div>Represent user-defined components:</div></li><ul><li><div><span style=""font-style: italic;"">const element = &lt;Welcome name=”Sara” /&gt;;</span></div></li></ul></ul><li><div>Component composition within components:</div></li><ul><li><div>function App() {</div></li><li><div>&nbsp;&nbsp;return (</div></li><li><div>&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&gt;</div></li><li><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Welcome name=""Sara"" /&gt;</div></li><li><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Welcome name=""Cahal"" /&gt;</div></li><li><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Welcome name=""Edite"" /&gt;</div></li><li><div>&nbsp;&nbsp;&nbsp;&lt;/div&gt;&nbsp; ); }</div></li></ul><li><div><a href=""https://reactjs.org/docs/components-and-props.html"">Comment Component with author, text, date: Components</a></div></li><li><div>Whether you declare a component as function or class, <b>components must never modify their own props</b></div></li><ul><li><div>All react components must act like pure functions with respect to their props</div></li><li><div>Props are essentially custom attributes</div></li><li><div>Components can be passed as props, helping&nbsp;<b>Composition</b>&nbsp;- optimal organization of components</div></li></ul></ul><li><span style=""font-weight: 700;"">State and Lifecycle</span></li><ul><li><div><a href=""https://css-tricks.com/the-circle-of-a-react-lifecycle/"">Component Lifecycle</a></div></li><li><div>Use the Clock component to reactively re-render</div></li><li><div><span style=""font-weight: 700;"">State</span> is <span style=""font-weight: 700;"">similar to props, but private</span> and fully controlled by its component</div></li><li><span style=""font-weight: 700;"">Convert a function to a class in five steps:</span></li><ul><li><div>Create an ES6 class with the same name extending React.Component</div></li><li><div>Add single empty method called <span style=""font-style: italic;"">render()</span></div></li><li><div>Move function body to <span style=""font-style: italic;"">render()</span> method</div></li><li><div>Replace <span style=""font-style: italic;"">props</span> with <span style=""font-style: italic;"">this.props</span> in the render() body</div></li><li><div>Delete remaining empty function declaration</div></li><li><div>Render-return-div-header-etc</div></li></ul><li><span style=""font-weight: 700;"">Add local state to a class:</span></li><ul><li><div>Replace <span style=""font-style: italic;"">this.props.date</span> with <span style=""font-style: italic;"">this.state.date</span> in <span style=""font-style: italic;"">render()</span></div></li><li><div>Add <span style=""font-weight: 700;"">class constructor</span> initializing <span style=""font-style: italic;"">this.state</span></div></li><ul><li><div>Always call the base constructor <span style=""font-style: italic;"">super(props)</span></div></li><li><div>this.state = {date: new Date()};</div></li></ul><li><div>Remove <span style=""font-style: italic;"">date</span> prop from <span style=""font-style: italic;"">&lt;Clock /&gt;</span> element</div></li></ul><li><span style=""font-weight: 700; font-style: italic;"">Mounting/unmounting</span><span style=""font-weight: 700;""> - Add lifecycle methods to a class</span></li><ul><li><div><span style=""font-style: italic;"">this.timerID = setInterval( () =&gt; this.tick(), 1000);</span></div></li><li><div><span style=""font-style: italic;"">clearInterval(this.timerID);</span></div></li><li><div><span style=""font-style: italic;"">tick() { this.setState( {date: new Date() } ); }</span></div></li></ul><li><span style=""font-weight: 700;"">Know about </span><span style=""font-weight: 700; font-style: italic;"">setState()</span></li><ul><li><div>Do not modify state directly, i.e. set it with “=”</div></li><ul><li><div>This won’t re-render the component; only use is for constructors</div></li><li><div>Instead, use <span style=""font-style: italic;"">setState()</span></div></li></ul><li><div>State updates may be asynchronous</div></li><ul><li><div>Don’t rely on <span style=""font-style: italic;"">this.props</span> or <span style=""font-style: italic;"">this.state</span> to calculate next state</div></li><li><div>Can use state.counter, props.increment, just not this</div></li></ul><li><div>State updates are merged</div></li><ul><li><div>When <span style=""font-style: italic;"">setState()</span> called, react merges object into current state</div></li></ul></ul><li><span style=""font-weight: 700;"">Unidirectional data flow</span></li><ul><li><div>State is local/encapsulated - not accessible to any component other than its owner and setter</div></li><li><div>Parent can pass to child, but not vice versa</div></li></ul><li>useState() and useReducer() hooks</li><ul><li>Controlled components like input fields allow user to manage state</li><ul><li>User types, setValue called</li><li>state updated in VDOM</li><li>input component reads from VDOM state</li></ul></ul></ul><li><span style=""font-weight: 700;"">Handling Events</span></li><ul><li><div>With JSX you pass a function as the event handler, rather than a string</div></li><li><div>Can’t return false to prevent default behavior, must call <span style=""font-style: italic;"">preventDefault</span></div></li><li><div>Don’t use <span style=""font-style: italic;"">addEventListener</span> for DOM elements after creation, instead provide listeners on initial render</div></li><ul><li><div>Common pattern is for event handler to be a class method</div></li></ul><li>clicks, mouse movements, key presses</li><li>onClick, onChange, onSubmit provided out of the box with React</li></ul><li><span style=""font-weight: 700;"">Conditional Rendering</span></li><ul><li><div>React knows how and when to render using the Virtual DOM, Document Object Model framework which every browser uses to model all elements on an HTML webpage</div></li><ul><li>If app state changes, React updates virtual DOM</li><li>Through ""diffing"", React determines what components need to be updated in real DOM<br></li><li>""Reconciliation"" is performed to bring the real DOM to the state of the VDOM</li></ul><li><div>Can use with if statements</div></li><li><span style=""font-weight: 700;"">USE VARIABLES TO STORE ELEMENTS</span></li><ul><li><div>Conditionally render part of the component</div></li></ul><li><span style=""font-weight: 700;"">USE FOR LOGIN CONTROL</span></li><ul><li><div>Write <a href=""https://reactjs.org/docs/conditional-rendering.html"">functions for different buttons</a> and render correct one</div></li><li><div>Create an object variable, then feed it correct object</div></li></ul><li><span style=""font-weight: 700;"">Inline rendering with JSX</span></li><ul><li><div><span style=""font-weight: 700;"">Embed any expressions with curly braces</span></div></li><li><div>Includes JS logical &amp;&amp; operator, which can be used for:</div></li><ul><li><div><span style=""font-style: italic;"">{notNull &amp;&amp; read value}</span></div></li><li><div><span style=""font-style: italic;"">true &amp;&amp; expression</span> === expression</div></li><li><div><span style=""font-style: italic;"">false &amp;&amp; expression === false</span></div></li></ul><li><div>Using <span style=""font-weight: 700;"">? conditional operator</span></div></li><ul><li><div>For string message display, etc</div></li></ul></ul><li><div>Can pass a warning prop to a child element to have it hide itself even if it is rendered: <span style=""font-style: italic;"">if(!props.warn) {return null; }</span></div></li></ul><li><span style=""font-weight: 700;"">Lists and Keys</span></li><ul><li><div>Build element connections &amp; <span style=""font-weight: 700;"">include in JSX using {}</span></div></li><li><div><span style=""font-weight: 700;"">Create array:</span> <span style=""font-style: italic;"">const numbers = [1, 2, 3, 4, 5];</span></div></li><li><div><span style=""font-weight: 700;"">Map to &lt;li&gt;</span> list item elements: <span style=""font-style: italic;"">const listItems = numbers.map((number) =&gt; &lt;li&gt;{number}&lt;li&gt; );</span></div></li><ul><li><div>Include in ReactDOM.render(&lt;ul&gt;{listItems}&lt;/ul&gt;....</div></li></ul><li><span style=""font-weight: 700;"">KEYS AINT INDICES</span></li><ul><li><div><span style=""font-style: italic;"">&lt;ListItem key={number.toString()} value={number} /&gt;</span></div></li><li><div><span style=""font-style: italic;"">//</span>Specify key inside array</div></li><li><div>Keys only need to be unique among siblings, not necessarily globally</div></li><li><div>If you need the key value in your component, pass as a named prop</div></li></ul><li><div>Can always <span style=""font-weight: 700;"">return inline</span>, rather than constructing and returning</div></li></ul><li><a href=""https://reactjs.org/docs/forms.html""><span style=""font-weight: 700;"">Forms</span></a></li><ul><li><div>Controlled Components</div></li><ul><li><div>Mutable state is in components, only updated with setState()</div></li></ul><li><span style=""font-weight: 700;"">Bind functions to your this.state</span></li><ul><li><div>this.handleChange = this.handleChange.bind(this);</div></li><li><div>&nbsp;<span style=""font-style: italic;"">this.setState({value: event.target.value});</span></div></li><li><div>Read in text: <span style=""font-style: italic;"">&lt;input type=”text” value={this.state.value} onChange={this.handleChange} /&gt;</span></div></li></ul><li><span style=""font-weight: 700;"">Convert HTML &lt;textarea&gt; to single-line input</span></li><ul><li><div><span style=""font-style: italic;"">this.state = {value: ‘textPrompt’};</span></div></li><li><div><span style=""font-style: italic;"">&lt;textarea value={this.state.value} onChange= {this.handleChange} /&gt;</span></div></li></ul><li><span style=""font-weight: 700;"">Convert html &lt;select&gt; to drop-down list</span></li><ul><li><div>&lt;select value={this.state.value} onChange={this.handleChange}&gt;</div></li><li><div>Pass an array into the value attribute, allowing multiple selected options:</div></li><ul><li><div><span style=""font-style: italic;"">&lt;select multiple={true} value={[‘B’, ‘C’]}&gt;</span>&nbsp;</div></li></ul></ul><li><div>Overall, this makes it so that <span style=""font-style: italic;"">&lt;input type=""text""&gt;, &lt;textarea&gt;,</span> and <span style=""font-style: italic;"">&lt;select&gt;</span> all work very similarly - they all accept a value attribute that you can use to implement a controlled component.</div></li><li><span style=""font-weight: 700; font-style: italic;"">&lt;input type=”file” /&gt;</span><span style=""font-weight: 700;"">&nbsp;</span></li><ul><li><div>Uncontrolled component</div></li></ul><li><span style=""font-weight: 700;"">Handle Multiple Inputs</span></li><ul><li><div>Add <span style=""font-style: italic;"">name</span> attribute to each element and let the handler function choose what to do based on the value of <span style=""font-style: italic;"">event.target.name</span></div></li><li><div><span style=""font-style: italic;"">this.setState( { [name]: value });</span></div></li></ul></ul><li><span style=""font-weight: 700;"">Lifting State Up</span></li><ul><li><div>Choose a single <span style=""font-weight: 700;"">“source of truth”</span> for all changing data</div></li><ul><li><div>If something could be derived from <span style=""font-weight: 700;"">either props or state, it shouldn’t be in state</span>.</div></li></ul><li><div><span style=""font-weight: 700;"">Share state by moving it to the closest common ancestor</span> of components which need it</div></li><li><div>Their thermometer/boiling point demo shows several active dependencies on whether Fahrenheit or Celsius is entered</div></li><li><div>Children should deliver lots o props and parents should pass many</div></li></ul><li><span style=""font-weight: 700;"">Composition vs. Inheritance</span></li><ul><li><div>They recommend composition to reuse component code</div></li><ul><li><div>No cases where component hierarchies are good, says developer</div></li></ul><li><div>Use <span style=""font-style: italic;"">children</span> prop to pass elements directly into output</div></li><ul><li><div>By rendering {props.children} inside a &lt;div&gt;</div></li></ul><li><div>No limitations on props passables in React, &lt;Contacts /&gt;, &lt;Chat/&gt;</div></li></ul><li><span style=""font-weight: 700;"">HOOKS</span></li><ul><li><div>Problems solved:</div></li><ul><li><div>Use state without writing a class</div></li><ul><li><div>Classes don’t minify well, and make hot reloading flaky + unreliable</div></li><li><span style=""font-weight: 700;"">Minification: removing all unnecessary characters from source code without changing functionality</span></li><ul><li><div>Usually unnecessary: whitespace, new line, comments, block delimiters</div></li><li><div>Can be interpreted immediately without an uncompression step</div></li></ul></ul><li><div>Reuse stateful logic without changing component hierarchy</div></li><li><div>Decrease reliance on <span style=""font-style: italic;"">this</span></div></li></ul><li><a href=""https://reactjs.org/docs/hooks-state.html""><span style=""font-weight: 700;"">Common: </span><span style=""font-weight: 700; font-style: italic;"">useState();</span></a></li><ul><li><div>useState returns a pair of values: the current state and the updating function. Analogous to <span style=""font-style: italic;"">this.state.count</span> and <span style=""font-style: italic;"">this.setState,</span> except they’re returned in a pair and can be <span style=""font-weight: 700;"">used for function components</span>.</div></li><ul><li><div>Can call each; <span style=""font-style: italic;"">{this.state.count}</span> and <span style=""font-style: italic;"">this.setState({...})</span></div></li><li><div>Preserves state between re-renders</div></li><li><div>Adds ability to perform <span style=""font-weight: 700;"">side effects</span> (can’t be done during rendering, affect other components) from function component</div></li><li><div><span style=""font-style: italic;"">import React, {useState} from ‘react’;</span></div></li><li><div><span style=""font-style: italic;"">&lt;button onClick={() =&gt; setCount(count + 1)}&gt;</span></div></li></ul><li><div>Also: <span style=""font-style: italic;"">useEffect</span> tells react to run “effect” function after flushing DOM changes</div></li><ul><li><div>These run after every render</div></li></ul><li><div>Function component code:</div></li><ul><li><div>const Example = (props) =&gt; {</div></li><li><div>&nbsp;&nbsp;// You can use Hooks here!</div></li><li><div>&nbsp;&nbsp;return &lt;div /&gt;;</div></li><li><div>}</div></li><li><div>Or <span style=""font-style: italic;"">function Example(props) {...</span></div></li><ul><li><div>These were formerly stateless components</div></li></ul></ul><li><div>Other ways to use:</div></li><ul><li><div>In a class component:&nbsp;</div></li><ul><li><div><span style=""font-style: italic;"">this.state = { count: 0 };</span></div></li></ul><li><div>In a function component:&nbsp;</div></li><ul><li><div><span style=""font-style: italic;"">const [count, setCount] = useState(0);</span></div></li></ul></ul></ul><li><span style=""font-weight: 700;"">2 MAIN RULES:&nbsp;</span></li><ul><li><div>Only call <span style=""font-weight: 700;"">at the top level</span>, not inside loops, conditions, nested functions</div></li><li><div>Only call from <span style=""font-weight: 700;"">react function components</span>, not regular JS functions</div></li><ul><li><div><span style=""font-style: italic;"">Use…</span> form for custom hook names</div></li></ul></ul><li><b>5 TYPES OF HOOKS</b><br></li><ul><li>State management hooks <b>useState()</b> useReducer()<br></li><li>Context management hooks useContext()</li><li>Reference hooks to use HTML <b>useRef()</b></li><li>Effect Hooks to use external systems <b>useEffect()</b> like browser APIs</li><li>Performance hooks useMemo() useCallback()</li></ul><li><a href=""https://reactjs.org/warnings/invalid-hook-call-warning.html""><span style=""font-weight: 700;"">Invalid Hook Call Warning</span></a></li><ul><li><div>Hooks can only be called inside the body of a function component.</div></li><ul><li><div>...<span style=""font-style: italic;"">while</span> React is rendering that component</div></li><li><div>Call them at the top level in the body of a function component</div></li><li><div>Or call them at the top level in the body of a custom hook</div></li><li><div><span style=""font-weight: 700;"">DON’T</span>:</div></li><ul><li><div>Call hooks in class components</div></li><li><div>Call in event handlers</div></li><li><div>Call in functions passed to <span style=""font-style: italic;"">useMemo, useReducer, or useEffect</span></div></li></ul></ul><li><div>3 main reasons for this error:</div></li><ul><li><div>Mismatching versions of React &amp; React DOM</div></li><ul><li><div>Run <span style=""font-weight: 700;"">npm ls react-dom</span> or <span style=""font-weight: 700;"">npm ls react-native</span> in your application folder to check which version you’re using</div></li></ul><li><div>Breaking the Rules of Hooks</div></li><li><div>More than one copy of React in the same app</div></li><ul><li><div>The <span style=""font-style: italic;"">react</span> import from your app code needs to resolve to the same module as the <span style=""font-style: italic;"">react</span> import from in the <span style=""font-style: italic;"">react-dom</span> package</div></li><li><div>Run this code to debug:</div></li><ul><li><div>// Add this in node_modules/react-dom/index.js</div></li><li><div>window.React1 = require('react');</div></li><li><br></li><li><div>// Add this in your component file</div></li><li><div>require('react-dom');</div></li><li><div>window.React2 = require('react');</div></li><li><div>console.log(window.React1 === window.React2);</div></li></ul></ul></ul></ul><li><span style=""font-weight: 700;"">Thinking in React</span></li><ul><li><div>Draft mock application sketch</div></li><li><div>Break UI into Component hierarchy</div></li><li><div>Build static/hardcode version in React, <span style=""font-weight: 700;"">not using state</span></div></li><ul><li><div>Props pass data from parent to child</div></li><li><div>State is reserved for interactivity</div></li></ul><li><div>For simpler examples, easier to build top-down, vice versa</div></li><li><div>For each chunk of state:</div></li><ul><li><div>Identify every component rendering based on this</div></li><li><div>Find common owner or parent component</div></li><li><div>Lift state up as high as possible</div></li><li><div>Or add new component for holding state and store it above the parent component</div></li></ul><li><b>Purity</b>: your component should</li><ul><li>Only return JSX</li><li>Don't change stuff that existed before rendering</li><li>Don't change a variable during render for example; this will alter output if rerendered</li></ul></ul></ul><li><h2><a href=""https://redux.js.org/tutorials/essentials/part-1-overview-concepts"">Redux - State Mgmt for React</a></h2></li><ul><li><div>See this page for great examples</div></li><li><div>Pattern &amp; library for managing &amp; updating application state using events called “actions”</div></li><ul><li><div><span style=""font-weight: 700;"">Actions</span> - plain javascript object with&nbsp;</div></li><ul><li><div><span style=""font-weight: 700; font-style: italic;"">type</span> field descriptor - a happening in the app</div></li><ul><li><div>Typically string constant</div></li></ul><li><div><span style=""font-weight: 700; font-style: italic;"">Payload</span> field descriptor for what was delivered</div></li><li><div><span style=""font-weight: 700;"">Action creators</span> create and return actions</div></li></ul><li><div><span style=""font-weight: 700;"">Reducers</span> - functions which receive current state and action object, decide how to update if necessary, and return new state: <span style=""font-style: italic;"">(state, action) =&gt; newState</span>.</div></li><ul><li><div>Must always:&nbsp;</div></li><ul><li><div>Calculate new state with <span style=""font-style: italic;"">state, action</span> args</div></li><li><div>Not allowed to modify existing state. Instead, must make immutable updates.</div></li><li><div>Can’t include asynchronous logic, calculate random values, or cause other side effects</div></li></ul><li><div>Logic:</div></li><ul><li><div>Check if reducer cares about this action</div></li><li><div>If so, make immutable state updates</div></li><li><div>Otherwise, return existing state unchanged</div></li></ul></ul><li><div><span style=""font-weight: 700;"">Store</span> - current redux application state container</div></li><ul><li><div>Created by passing reducer, has method getState()</div></li><li><div><span style=""font-weight: 700;"">The only way to update the state is to call store.dispatch() and pass in an action object.</span></div></li></ul><li><div><span style=""font-weight: 700;"">Selectors</span> - functions which know how to extract specific info from a store state value. Can help avoid repeating logic</div></li></ul><li><div>More useful when:</div></li><ul><li><div>Large amounts of state needed in many places</div></li><li><div>State updated frequently, or in a complex logical way</div></li><li><div>Medium or large codebase worked on by many</div></li></ul><li><div><span style=""font-weight: 700;"">One-way data flow</span>:</div></li><ul><li><div>State describes time-specific condition of app</div></li><li><div>UI rendered based on that state</div></li><li><div>When an action is taken, the state responsively updates</div></li><li><div>UI re-renders based on new state</div></li></ul><li><div><span style=""font-weight: 700;"">With much more detail:</span></div></li><ul><li><div>Initially:</div></li><ul><li><div>Redux store created using root reducer function</div></li><li><div>Store calls root reducer once, and saves return value as its initial state</div></li><li><div>When UI is first rendered, components access the current state of the redux store and render selectively. They also subscribe to all future store updates</div></li></ul><li><div>Updating:</div></li><ul><li><div>An event takes place in the app</div></li><li><div>The app code dispatches an action to the Redux store; <span style=""font-style: italic;"">dispatch({type: ‘counter/increment’})</span></div></li><li><div>Store runs reducer function again with prevState, action, returns new state</div></li><li><div>Store notifies all subscribed UI elements of update</div></li><li><div>Each subscribed UI component checks for changes</div></li><li><div>Each component with changed data forces a re-render</div></li></ul></ul><li><div><span style=""font-weight: 700;"">Simplicity breaks down when multiple components use same state, especially in different parts of application.</span></div></li><ul><li><div>SO LIFT STATE UP TO PARENT COMPONENTS!</div></li></ul><li><div>JS objects/arrays are mutable by default.&nbsp;</div></li><ul><li><div>In order to update values immutably (state), your code must <span style=""font-weight: 700;"">copy existing objects and modify the copies.</span></div></li></ul></ul></ul><ul><li><h3><span style=""font-weight: 400;"">JSX - syntax extension to JavaScript</span></h3></li><ul><li><div>Produces react “elements”</div></li><li><div>Rendering logic is inherently tied to other UI logic like events, state, data preparation for display</div></li><li><div>Allows for:</div></li><ul><li><div>Embedded expressions which automatically evaluate</div></li><li><div>After compilation, <span style=""font-weight: 700;"">JSX expressions become regular javascript function calls</span> and evaluate to JS objects</div></li><ul><li><div>So can be vars, use if-for, as args, as a return value</div></li></ul></ul><li><div>Either use quotes for string values, curly braces for expressions, <span style=""font-weight: 700;"">NEVER use both quotes/braces in same attribute</span></div></li><li><div><span style=""font-weight: 700;"">Babel</span> compiles JSX down to <span style=""font-weight: 700; font-style: italic;"">React.createElement()</span><span style=""font-weight: 700;""> calls</span></div></li></ul><li><div>Full stack devs a) understand readability, or b) acknowledge they need artists.</div></li><li><div>Can include mastery of HTML5 / CSS.</div></li><li><div>JavaScript is the up and coming language of the future and lots of exciting work is being done in the JavaScript world (node, backbone, knockout…)</div></li></ul><ul><li><h2>User Experience</h2></li><ul><li><div>Full stack developers appreciate that users just want things to work.</div></li><li><div>A good system doesn’t give its users carpal tunnel syndrome or sore eyes. A full stack developer can step back and look at a process that needs 8 clicks and 3 steps, and get it down to one click.</div></li><li><div>Full stack developers write useful error messages. If something breaks, be apologetic about it. Sometimes programmers inadvertently write error messages that can make people feel stupid.</div></li></ul><li><h2><a href=""https://reactjs.org/docs/design-principles.html"">Design Principles of React</a></h2></li><ul><li><div>Composition of components &amp; synergy between modules; no rippling changes</div></li><li><div>State &amp; lifecycle are powerful &amp; critical, but should be used in moderation</div></li><li><div>They never change the API endpoints since this may disrupt existing infrastructur</div></li><li><div>React calls all function components-you don’t.</div></li><ul><li><div>So they have the power to delay calling if necessary,&nbsp;</div></li><li><div>Now, it’s walking the tree recursively and calling render functions during a single tick</div></li><li><div>Later, they may delay updates to avoid dropping frames</div></li><li><div>This is why they can schedule updates and <span style=""font-style: italic;"">setState()</span> is asynchronous.</div></li></ul><li><div>Props and state are the breadcrumbs to help you trace bugs</div></li><li><div>Boring is perfect. Innovation is not usually rewarding.</div></li></ul></ul></ul></div><div style="""">TYPESCRIPT</div><div style=""""><ul><ul><li><div>Biggest advantage: tooling</div></li><ul><li><div>Writing more code up front is a huge benefit</div></li></ul><li><div>Your code is automatically documented in the IDE, and the compiler can catch bugs in advance</div></li></ul>Virtually no learning curve with JS. <span style=""font-weight: 700;"">Any valid JS is valid TS.</span><ul>Typescript validates your JS ahead of compile time with dynamic type-checking.</ul><ul>Javascript allows you to freely manipulate and process objects</ul><ul>TS is a strict superset of javascript WITHOUT its own runtime, and behaves like a compile language where JS is the compilation target</ul><ul>TS files can be transpiled into ANY flavor of vanilla javascript (ES1-ES6) to target ancient browsers, providing futureproofing</ul><ul>Primary TS goal: enable static typing by strongly typing variables in your code. Can be done explicitly (by directly typing var) or implicitly (by setting var and letting TS type it)</ul><ul>'any' keyword allows you to loosely type or opt out of type checking</ul><ul>Microsoft switched the TS compiler to use GoLang in March 2025, drastically improving performance</ul></ul><div><b>Ecmascript</b></div><div><ul><li><div>General-purpose coding language designed to ensure a JavaScript standard for interoperability across different web browses</div></li><li><div>Commonly used for client=side scripting, increasingly being used for server applications/services using Node.js</div></li></ul></div></div>"	fullstack language webdev
K:cUO*T:Uq	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Google Cloud	"<ul><li><div>All docker builds now use the Cloud Build API</div></li><li><div><a href=""https://cloud.google.com/sdk/docs/authorizing""><span style=""font-weight: 700;"">Accounts</span></a></div></li><ul><li><div><span style=""font-weight: 700;"">User accounts</span> allow end users to authenticate directly to your application, best practice</div></li><li><div><span style=""font-weight: 700;"">Service accounts</span> are not user-specific and associated with your project. Can be used by providing an S.A. key to your app</div></li></ul><li><div><a href=""https://cloud.google.com/sdk/docs/components""><span style=""font-weight: 700;"">Components</span></a></div></li><ul><li><div>Default on installation:</div></li><ul><li><div>gcloud - default gcloud CLI commands</div></li><ul><li><span style=""font-weight: 700;"">Scripting gcloud CLI commands</span></li><li><br></li></ul><li><div>bq - BigQuery Command Line Tool</div></li><li><div>gsutil - cloud storage command-line tool</div></li><li><div>core - cloud SDK core libraries used internally by SDK tools</div></li></ul><li><div>CLI Guide:</div></li><ul><li><div>See all components, both available and installed: <i>gcloud components list</i></div></li><li><div>Install: <i>gcloud components install [COMPONENT-ID]</i></div></li><li><div>Update: <i>gcloud components update</i></div></li><li><div>Revert to version: <i>gcloud components update --version VERSION</i></div></li><li><div>Remove: <i>gcloud components remove [COMPONENT-ID]</i></div></li><li><div><i><span style=""font-weight: 700;"">NAME</span>&nbsp; gcloud config - view and edit Cloud SDK properties</i></div></li><ul><li><div><i><span style=""font-weight: 700;"">SYNOPSIS</span>: <span style=""font-weight: 700;"">gcloud config</span> <span style=""text-decoration-line: underline;"">GROUP</span> | <span style=""text-decoration-line: underline;"">COMMAND</span> [<span style=""text-decoration-line: underline;"">GCLOUD_WIDE_FLAG ...</span>]</i></div></li></ul><li><div><i>&nbsp;You can activate a configuration with</i></div></li><ul><li><div><i>$ gcloud config configurations activate my-config</i></div></li></ul><li><div><i>&nbsp;&nbsp;&nbsp;&nbsp;To display the path of the active configuration, run:</i></div></li><ul><li><div><i>$ gcloud info --format=""get(config.paths.active_config_path)""</i></div></li></ul><li><div><i>Gcloud config</i> - set, view, unset cloud SDK properties, created with <i>gcloud init</i></div></li><ul><li><div><span style=""font-weight: 700;"">Flags for all commands:</span> --account, --help, --project</div></li><li><div>Run <i><span style=""font-weight: 700;"">gcloud cheat-sheet</span></i></div></li></ul></ul></ul><li><div><a href=""https://cloud.google.com/sdk/docs/configurations"">Configurations</a> - named sets of SDK properties governing tool behavior; de facto profile</div></li><ul><li><div><i>Gcloud config configurations list</i></div></li><li><div><a href=""https://cloud.google.com/sdk/docs/properties"">Properties</a></div></li><ul><li><div>List properties of active configuration: <i>gcloud config list</i></div></li></ul></ul></ul>BIGQUERY<br><ul><li><div>Fully <span style=""font-weight: 700;"">managed + serverless</span> storage</div></li><ul><li><div>Handles storage &amp; computation at any scale, in isolation</div></li><li><div>Exabytes of storage, petabyte-scale queries</div></li><li><div>Data &amp; queries allocated with consumption, deallocated with deletion</div></li><ul><li><div>Query priorities</div></li><ul><li><div>Interactive - executed as soon as possible, counts toward quota</div></li><li><div>Batch - queued and executed when idle resources available</div></li></ul></ul></ul><li><div>Real-time analytics on streaming data</div></li><ul><li><div>Generates more than 2GB/second from multiple computers</div></li><li><div>Centralized storage, streaming from other services like BI, ETL, Hadoop, Spark, Unified batch &amp; stream processing, machine learning</div></li></ul><li><div>Built-in ML and GIS</div></li><ul><li><div>Data studio &amp; visualization tool integration</div></li><li><div>Predictive analytics tell you how your data will be modeled in the future</div></li></ul><li><div>High-speed, in-memory BI engine</div></li><ul><li><div>Capable sharing &amp; permissions module</div></li><li><div>Transparent catch which knows exactly when to bring data from backend</div></li></ul><li><div>High Security</div></li><ul><li><div>Customer managed API keys &amp; access transparency + user logs</div></li><li><div><span style=""font-weight: 700;"">“Enterprise encrypted data warehouse built for the cloud”</span></div></li></ul><li><div>Organization Structure</div></li><ul><li><div>Organizes data tables into datasets stored in google cloud, referenced:</div></li><ul><li><div>Project.dataset.table</div></li></ul><li><div>Conventional <span style=""font-weight: 700;"">Denormalizing data</span>: write a fact, along with all its dimensions, into a flat table structure</div></li><ul><li><div>Bigquery nests data objects within arrays, not storage-optimal</div></li></ul><li><div>Tables are partitioned by date automatically and have expiration date capability</div></li><ul><li><div>After data transformed, transitioned to cloud storage as CSV, JSON or AVRO files</div></li></ul><li><div>Unlike a data lake, a data warehouse has an expiration date after which the oldest data rolls out of storage</div></li></ul></ul>"	fullstack webdev
xHxb2W{GbU	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Neo4j	"<div>Neo4j Fundamentals</div><div><ol><li><b>INTRO:&nbsp;</b>Graph databases store Data in nodes and relationships rather than tables or documents; they are at their best when THE CONNECTIONS BETWEEN DATA ARE AS IMPORTANT AS THE DATA ITSELF</li><ol><li>Optimize queries that traverse complex schema of foreign keys and many-to-many relationships</li><li>Hierarchical or self-referential data in trees where the answer is at an unknown/varying depth</li><li>Any situation where it is difficult to express what you're seeking</li><li>Any route-optimizing query</li><ol><li><a href=""https://neo4j.com/case-studies/transport-for-london/"">Transport for London (TfL) use Neo4j to store a digital representation of their transport network</a>, allowing them to identify bottlenecks and cut congestion in the network.<br></li></ol><li>Any pattern-seeking query using a huge database</li><ol><li>recommendations, targeting, bespoke solutions, analytics, threat response, talent pooling, career management, resource allocation, anomaly detection, risk assessment, fraud detection, supply chaining, BizOps, logistics, compliance, inventory planning, process optimization, automation</li></ol></ol><li><b>ELEMENTS:&nbsp;</b>Neo4j uses a ""Labeled property graph"" with four main organizational structures:</li><ol><li>Nodes - Named Entities/Proper nouns</li><li>Labels - Types/Categories/Shared Attributes;</li><ol><li>Plenty of overlap but important to filter nodes</li><li>Typically singular nouns; Product, event, account,&nbsp;&nbsp;person, company, location</li></ol><li>Relationships - directed verbs qualifying transitive relationships between start and end nodes</li><ol><li>Type - Works_at, founded_in</li><li>direction - typically only correct/useful in one direction; bidirectional relationships simply use TWO relationships</li><ol><li>This can represent mutuality - knows, is married to</li><li>Fact - lives in, owns, enjoys</li><li>Hierarchy - parent_of, depends_on</li><li>Any other connection between two entities</li></ol><li>A pointer to the relationship is stored in each node; the database follows pointers in memory rather than indexes during queries. Thus the query time remains constant to the size of the relationships expanded regardless of the overall size of the data</li></ol><li>Properties - unshared attributes that can be stored on Nodes AND relationships as key-value pairs</li><ol><li>INTRANSITIVE: firstName, lastName, born</li><li>TRANSITIVE: ""position: Engineer""</li><li>Nodes &amp; relationships can have any number of properties; those of the same type/label need not have the same ones. These have types (int, bool, str, list etc) and can be unique identifiers for specific node labels.</li><li>Retrieve all property keys in the graph: CALL db.propertyKeys()<br>MATCH (p:Person)<br>RETURN p.name, keys(p)<br></li><li>A property key remains in the graph once it has been defined - even if NO nodes or properties use it</li></ol></ol><li><b>Queries:</b>&nbsp;Cypher is Neo4j's implementation of GQL, an ISO standard for graph databases<br></li><ol><li>Cypher is a declarative query language that allows you to identify patterns in your data using ASCII-art style syntax consisting of brackets, dashes, and arrows</li><ol><li>If searching for all nodes with label Person that have an outgoing ACTED_IN relationship to a node labeled Movie:<br></li><li>(p:Person)-[r:ACTED_IN]-&gt;(m:Movie).</li><li>(varName:nodeName)-[varName:RELATIONSHIP_NAME]--&gt;(varName:nodeName)&nbsp;</li><li>Node labels are prefixed a colon (:Label)</li><li>Relationship type is prefixed a colon [:TYPE]</li><li>Arrows are doubled dash plus &amp;gt; --&gt;</li><ol><li>You're not required to specify direction for MATCH - it will return regardless of direction, so long as the relationship exists.</li><li>By default, if no direction is specified by a MERGE that creates a relationship, the relationship will be created left-to-right</li></ol></ol><li>MATCH reads data; WHERE refines the MATCH; RETURN can return tabular data if model properties are included</li><ol><li>MATCH (m:Movie)-[r:IN_GENRE]-&gt;(g:Genre)<br>WHERE m.title = 'Toy Story'<br>RETURN m, r, g<br></li><li>MATCH (m:Movie)-[r:IN_GENRE]-&gt;(g:Genre)<br>WHERE m.title = 'Toy Story'<br>RETURN m.title, g.name<br></li></ol><li>MERGE writes data by creating nodes and relationships in a defined pattern; MERGE will only create patterns that don't already exist</li><ol><li>MERGE (m:Movie {title: ""Arthur the King""})<br>SET m.year = 2024<br>MERGE (u:User {name: ""Adam""})<br>MERGE (u)-[r:RATED {rating: 5}]-&gt;(m)<br>RETURN u, r, m</li><li>Running this multiple times would only result in the creation happening once</li><li>When you run MERGE to create a node, you must specify at least ONE property that will be the Unique primary key for the node.</li><li>MERGE can also be used to create relationships between two nodes:<br>MATCH (p:Person {name: 'Michael Caine'})<br>MATCH (m:Movie {title: 'The Dark Knight'})<br>MERGE (p)-[:ACTED_IN]-&gt;(m)<br></li><li>Multi-merge(can run multiple times with no duplication):<br>MERGE (p:Person {name: 'Emily Blunt'})-[:ACTED_IN]-&gt;(m:Movie {title: 'A Quiet Place'})<br>RETURN p, m<br></li><li>Create relationship property inline:<br>MATCH (p:Person {name: 'Michael Caine'})<br>MERGE (m:Movie {title: 'Batman Begins'})<br>MERGE (p)-[:ACTED_IN {roles: ['Alfred Penny']}]-&gt;(m)<br>RETURN p,m<br></li><li>Use SET during merge to create, update, or delete property values on existing objects<br></li><li>MATCH (p:Person)-[r:ACTED_IN]-&gt;(m:Movie)<br>WHERE p.name = 'Michael Caine' AND m.title = 'The Dark Knight'<br>SET r.roles = ['Alfred Penny'], m.released = 2008<br>RETURN p, r, m<br></li><li>Use REMOVE to delete a property from a node or relationship, setting the property to null</li></ol><li>MERGE processing - specify behavioral rules to prevent certain edge cases<br>// Find or create a person with this name<br>MERGE (p:Person {name: 'McKenna Grace'})<br>// Only set the `createdAt` property if the node is created during this query<br>ON CREATE SET p.createdAt = datetime()<br>// Only set the `updatedAt` property if the node was created previously<br>ON MATCH SET p.updatedAt = datetime()<br>// Set the `born` property regardless<br>SET p.born = 2006<br>RETURN p<br></li><li>On MATCH, you can DELETE an object you have a pointer to.</li><ol><li>If deleting that node would orphan a relationship object, Neo4j prevents deletion.</li><li>However, DETACH DELETE will clear all relationships first and then delete the node. To delete all nodes and relationships in a database:<br>MATCH(n)<br>DETACH DELETE n</li></ol><li>Multi-labels can be used in overlap for nodes with both:<br>MATCH (p:Person:Developer {name: 'Jane Doe'})<br></li><li>CREATE does not look up the primary key before adding the node. If you are certain your data is clean and want faster imports, CREATE is fine; otherwise MERGE eliminates node duplication (better)</li><li>Properties drawn in a speech bubble are specified in JSON-like key-value-pair syntax.</li><ol><li>Example: All actors who acted in a movie with the title Cloud Atlas</li><li><div><pre><code>(m:Movie {title: 'Cloud Atlas'})&lt;-[:ACTED_IN]-(p:Person)</code></pre></div></li><li><pre><code>All movies with Tom Hanks in them</code></pre></li><li><pre><code>MATCH (p:Person {name: 'Tom Hanks'})-[:ACTED_IN]-&gt;(m:Movie)
RETURN m.title<br></code></pre></li><li><pre><code>All actors from matrix</code></pre></li><li><pre><code>MATCH (p)-[:ACTED_IN]-&gt;(m)<br>WHERE p:Person AND m:Movie AND m.title='The Matrix'<br>RETURN p.name</code></pre></li></ol><li><b>Cypher Lists - CSVs within Square brackets</b><br>MATCH (p:Person)<br>WHERE p.born IN [1965, 1970, 1975]<br>RETURN p.name, p.born<br></li><ol><li>in-list matching:<br>MATCH (p:Person)-[r:ACTED_IN]-&gt;(m:Movie)<br>WHERE&nbsp; 'Neo' IN r.roles AND m.title='The Matrix'<br>RETURN p.name, r.roles<br></li></ol><li><b>Filtering Cypher Queries</b></li><ol><li><b>Specify a range of acceptable values</b><br>MATCH (p:Person)-[:ACTED_IN]-&gt;(m:Movie)<br>WHERE 2000 &lt;= m.released &lt;= 2003<br>RETURN p.name, m.title, m.released<br></li><li><b>Specify a non-null attribute</b><br>MATCH (p:Person)-[:ACTED_IN]-&gt;(m:Movie)<br>WHERE p.name='Jack Nicholson' AND m.tagline IS NOT NULL<br>RETURN m.title, m.tagline<br></li><li><b>Specify Substring<br></b>MATCH (p:Person)-[:ACTED_IN]-&gt;()<br>WHERE p.name STARTS WITH 'Michael'<br>RETURN p.name</li><li>Can run string functions<br>MATCH (p:Person)-[:ACTED_IN]-&gt;()<br>WHERE toLower(p.name) STARTS WITH 'michael'<br>RETURN p.name<br></li><li>Filter by patterns in the graph: People who wrote a movie but didn't direct it<br>MATCH (p:Person)-[:WROTE]-&gt;(m:Movie)<br>WHERE NOT exists( (p)-[:DIRECTED]-&gt;(m) )<br>RETURN p.name, m.title<br></li></ol><li><b>Neo4j best practices:</b>&nbsp;<br></li><ol><li>labels, property keys, and variables are case-sensitive; cypher keywords are not.</li><li>Labels should be named with CamelCase.</li><li>Name property keys and vars use camelCase (no first cap)</li><li>Cypher keywords use UPPERCASE.</li><li>WHERE keyword can be an alternative to specifying a property</li><ol><li>Can specify multiple conditions to look for</li></ol></ol></ol><li><b>INFRA</b>: how to host and serve<br></li><ol><li>Neo4j has&nbsp;</li><ol><li>Community Edition (full single-instance, ACID compliant, Cypher, API-ready)&nbsp;</li><li>Enterprise Addition (plus online backups, clustering architecture, failovers)</li></ol><li>AuraDB is fully managed cloud Neo4j-DB-as-a-service.</li><ol><li>Fully managed, scalable, secure; low-maintenance</li></ol></ol></ol></div><div><br></div><div><br></div><div><br></div><div>Neo4j &amp; LLMs Course (Neo4j GraphAcademy)</div><div><br></div><ul><li>Temperature is the amount of randomness the underlying mathematical model uses when generating text</li><ul><li>The higher the temp, the more random the generated result, and the greater the likelihood it contains falsehood</li><li>Higher temp means more diverse and creative, and less grounded output</li><li>0 temp means factually grounded response essential</li><li>LLMs are MOSTLY trained on public domain data up to a certain time cutoff</li></ul><li>Reducing Hallucination</li><ul><li>Prompt engineering - specificity, intentionality in desired response; perhaps output type specified</li><li>Providing additional instructions and context in the prompt is known as zero-shot learning</li><li>Positive reinforcement - ""do this"" is more effective than negative ""don't do this"", as is the case with humans</li><li>In-context learning basically just means providing case studies and example answers of desired inputs, outputs, and processes of thought. These relevant examples are a form of few-shot learning.</li></ul><li>Fine-tuning requires task-specific datasets; grounding only requires contextualizing the prompt</li><ul><li>Grounding allows an LLM to reference external up-to-date sources to enrich responses. This reduces hallucination likelihood significantly.</li><li>Retrieval-Augmented Generation (RAG) - Train on a static dataset, then pull external information to resolve queries</li><ul><li>Also more transparent with private or proprietary data</li></ul></ul><li><b>Vectors</b>&nbsp;are the backbone of semantic search, allowing the engine to identify context and intention<br></li><ul><li>Vectors are required to mathematically represent the dimensionality of language</li><li>An embedding is a mathematical vector representation of a word, phrase, query, document, or result<br></li></ul></ul>"	dataflow formula fullstack technique
AV$-sV*Xdz	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Cypher Query Boilerplate Samples from Neo4j	"<ul><li>MATCH (m:Movie {title: ""Toy Story""})</li><li>RETURN m.title AS title, m.plot AS plot</li><li>Creating embeddings from a csv:<br></li><ul><li>LOAD CSV WITH HEADERS<br></li><li>FROM 'https://data.neo4j.com/llm-fundamentals/openai-embeddings.csv'<br></li><li>AS row<br></li><li>MATCH (m:Movie {movieId: row.movieId})&nbsp; &nbsp; &nbsp;#match (:Movie) node with corresponding movieId property<br></li><li>CALL db.create.setNodeVectorProperty(m, 'plotEmbedding', apoc.convert.fromJsonList(row.embedding))<br></li><ul><li>^#Sets the plotEmbedding property</li></ul><li>RETURN count(*)<br></li><li>MATCH (m:Movie {title: ""Toy Story""})</li><li>RETURN m.title AS title, m.plot AS plot, m.plotEmbedding</li></ul><li>NOTE: When data is loaded with LOAD CSV, it is treated as string by default or can be cast using a specific toInteger(), toFloat(), etc.</li><ul><li>A string representing a JSON list can be converted to a Cypher List using the apoc.convert.fromJsonList() procedure</li></ul><li>CREATE VECTOR INDEX statement:<br></li><ul><li>CREATE VECTOR INDEX [index_name] [IF NOT EXISTS]&nbsp;</li><li>FOR (n:LabelName)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#The Node label on which to index</li><li>ON (n.propertyName)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#The property on which to index</li><li>OPTIONS ""{"" option: value[, ...] ""}""&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#the options for the index, where you can specify:<br></li><ul><li>vector.dimensions - the dimension of the embedding e.g. OpenAI embeddings consist of 1536 dimensions</li><li>vector.similarity_function - the similarity function to use when comparing values in this index - this can be `euclidean` or `cosine`.</li><ul><li>Generally, cosine will perform best for text embeddings, but you want to choose a similarity function closest to the loss function used when training the embedding model</li></ul></ul></ul><li>SHOW INDEXES command example:</li><ul><li>SHOW INDEXES&nbsp; YIELD id, name, type, state, populationPercent WHERE type = ""VECTOR""<br></li></ul><li>queryNodes - returns requested number of approximate nearest neighbor nodes and their similarity score, ordered by the score</li><ul><li>CALL db.index.vector.queryNodes(&nbsp;</li><ul><li>indexName :: STRING,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#name of vector index</li><li>numberOfNearestNeighbours :: INTEGER,&nbsp; &nbsp; &nbsp; &nbsp; #Num of results to return</li><li>query :: LIST&lt;FLOAT&gt;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #list of floats that represents a query embedding</li></ul><li>) YIELD node, score<br></li><li>This yields two arguments:</li><ul><li>a node matching the query</li><li>a similarity score ranging from 0.0 to 1.0</li></ul><li>EXAMPLE: find the 6 movies with plots most similar to Toy Story:</li><ul><li>MATCH (m:Movie {title: 'Toy Story'})<br><br>CALL db.index.vector.queryNodes('moviePlots', 6, m.plotEmbedding)<br>YIELD node, score<br><br>RETURN node.title AS title, node.plot AS plot, score<br></li></ul><li>Straightforward and quick approach overall, but completely black-boxed and opaque compared to RAG</li></ul></ul>"	dataflow formula language
p[ZX`/Hm>)	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Ruby On Rails / API Layer	"<ul><li>API layer / Action Layer / MVC / Model View Controller</li><li>APIs are contracts between applications or ""consumers"" and services or ""providers"" who provide some task when API is ""called""</li><ul><li>Mocking APIs</li><ul><li><div>During design, live API calls may take weeks. You can develop in parallel by creating <span style=""font-weight: 700;"">mock API servers</span> to return example results</div></li><ul><li><div>Sooner and better feedback + iteration = better API</div></li></ul><li><div>These servers provide realistic request responses, local or public, static or dynamic, and simulate the data the real API would return (match schema with data types, objects, arrays)</div></li><li><div>Can be used to emulate APIs you don’t control&nbsp;</div></li><li><div>May require API contract testing</div></li><li><span style=""font-weight: 700;"">Types:</span></li><ul><li><div>Static vs. Dynamic</div></li><ul><li><div><span style=""font-weight: 700;"">Static</span> - generate responses yourself, store from an existing API response, or use a tool to provide dummy data</div></li><ul><li><div>Drawback: real APIs have dynamic I/O</div></li><li><div>Can have missing fields in responses, absent/unrealistic dates, etc</div></li></ul><li><div><span style=""font-weight: 700;"">Dynamic</span> - can make the mock more realistic</div></li><ul><li><div>Data generated based on field and requirements determined</div></li></ul></ul></ul></ul></ul><li>RAILS: Action Controller</li><ul><li><div>Controller features:</div></li><ul><li><div>Restrict parameters, session data &amp; cookies, filters to execute during request processing, built-in HTTP Auth, direct data stream, filter sensitive params, deal with exceptions</div></li><li><div>Ruby class inheriting from ApplicationController</div></li></ul><li><div><span style=""font-weight: 700;"">Controller</span> receives request, fetches/saves model data, uses view to create HTML output</div></li><ul><li><div><span style=""font-weight: 700;"">Naming convention</span>: pluralize last word in name, this allows for default route generators to be used</div></li></ul><li><div>Two kinds of parameters possible in web app:</div></li><ul><li><div><span style=""font-weight: 700;"">Query String Parameters</span> - sent as part of the URL, after “?”</div></li><li><div><span style=""font-weight: 700;"">POST Data</span>: comes from HTML form filled in by user</div></li></ul><li><div>There are ways to call each through the <span style=""font-style: italic;"">params</span> hash</div></li><ul><li><div>Can contain nested arrays and hashes, using square brackets []</div></li><ul><li><div>GET /clients?ids[]=1&amp;ids[]=2&amp;ids[]=3</div></li></ul><li><div>Parameter values are <span style=""font-weight: 700;"">always strings</span></div></li></ul></ul><li><b>Ruby on Rails:</b></li><ul><li><div>rbenv creates a directory of <span style=""font-weight: 700;"">shims</span>, libraries that intercept calls and change or redirect them</div></li><li><div>Version control:</div></li><ul><li><div>rbenv install [version]</div></li><li><div>rbenv global [version]</div></li><li><div>ruby -v</div></li><li><div>gem env (home)</div></li><li><div>brew upgrade rbenv ruby-build</div></li></ul><li><div>Build new:</div></li><ul><li><div>rails new rails_react_recipe -d=postgresql -T --webpack=react --skip-coffee</div></li></ul><li><div>Bind to IP Address: rails server --binding=127.0.0.1</div></li><li><div>Then Send request: curl <a href=""http://127.0.0.1:3000"">http://127.0.0.1:3000</a></div></li><li><div>Access online: <a href=""http://127.0.0.1:3000"">http://127.0.0.1:3000</a> or <a href=""http://localhost:3000"">http://localhost:3000</a></div></li></ul></ul>"	formula fullstack language webdev
Mh2k)VVz:)	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	ReCAPTCHA wasted Human Capital	"<div>This paper presents a comprehensive study of reCAPTCHAv2, analyzing its usability, performance, and user perceptions through a large-scale real-world experiment with over 3,600 participants at UC Irvine over 13 months. Here are the key findings:</div><div>Major Results:</div><ol><li><div>Performance:</div></li></ol><ul><li><div>Users improve at solving checkbox challenges with more attempts (first attempt is 35% slower than 10th)</div></li><li><div>Password recovery is faster than account creation</div></li><li><div>Educational level impacts solving times (freshmen slowest, seniors fastest)</div></li><li><div>STEM majors tend to solve challenges faster than non-STEM majors</div></li></ul><ol><li><div>User Experience:</div></li></ol><ul><li><div>Image challenges are viewed negatively:</div><ul><li><div>40% found them annoying</div></li><li><div>SUS score of 58.9 (“OK” usability)</div></li></ul></li><li><div>Checkbox challenges are viewed positively:</div><ul><li><div>&lt;10% found them annoying</div></li><li><div>SUS score of 77.4 (“Good” usability)</div></li></ul></li></ul><ol><li><div>Cost Analysis:</div></li></ol><ul><li><div>Over 512 billion reCAPTCHA sessions historically</div></li><li><div>819 million hours of human time spent</div></li><li><div>$6.1 billion USD equivalent in free wages</div></li><li><div>134 Petabytes bandwidth consumed</div></li><li><div>7.5 million kWh energy used</div></li><li><div>7.5 million pounds of CO2 emissions</div></li></ul><ol><li><div>Security Analysis: The researchers found reCAPTCHAv2 has major security flaws:</div></li></ol><ul><li><div>Vulnerability to click-jacking</div></li><li><div>Easy to automate at large scale</div></li><li><div>Weak security premise for image challenges</div></li><li><div>Privacy concerns with tracking cookies</div></li></ul><div>Conclusion: Based on the high human cost, negative user experience, and security vulnerabilities, the researchers conclude that “reCAPTCHAv2 and similar reCAPTCHA technology should be deprecated.”</div><div>This is the first large-scale study of reCAPTCHAv2 with unwitting participants in a real-world setting, providing comprehensive data about its practical implementation and impact.​​​​​​​​​​​​​​​​</div><br><a href=""https://arxiv.org/abs/2311.10911"">https://arxiv.org/abs/2311.10911</a><br>"	Example history
lRc[vE^UQH	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	🛟Personal InfoSec	"<ul>
<li>Remove cell number from accounts due to sim swapping</li>
<li>delete bank passwords</li>
<li>use password manager outside apple</li>
<li>delete PII from apple photos</li></ul>"	dataprivacy formula infosec
I@kD]T[3hd	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Poetry	"<ul><li><span style=""font-weight: 600;"">Poetry's Virtual Environments:</span>&nbsp;When&nbsp;poetry install&nbsp;runs&nbsp;(like in our Dockerfile's builder stage), it creates a virtual environment to keep the project's dependencies isolated. By default, Poetry tries to create this outside the project directory, but we use&nbsp;ENV POETRY_VIRTUALENVS_IN_PROJECT=true&nbsp;in the Dockerfile. This tells Poetry to create the virtual environment directory&nbsp;<span style=""font-style: italic;"">within</span>&nbsp;the project directory, and it names this directory&nbsp;.venv.</li></ul>"	Example fullstack webdev
lbIPSZlo24	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Jest (JS)	Jest is a widely-used JavaScript testing framework that aims for simplicity and&nbsp;works well with React and Next.js. It allows you to write test cases to ensure your code behaves as expected. You&nbsp;typically organize tests into suites using&nbsp;describe&nbsp;blocks, and individual tests are written within&nbsp;it&nbsp;or&nbsp;test&nbsp;blocks. Jest&nbsp;provides built-in assertion functions (like&nbsp;expect(value).toBe(expectedValue)) to check conditions and also&nbsp;supports mocking, which lets you isolate parts of your code for focused testing. It can automatically discover test files (usually named&nbsp;*.test.js&nbsp;or&nbsp;*.test.tsx) and run them, providing reports on successes, failures, and code&nbsp;coverage.	fullstack webdev
"jM#-n/lZSR"	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	List of AI Applications in Consulting	<ol><li>Automate customer service with AI-powered chatbots</li><li>Enhance personalized marketing with AI-driven customer segmentation</li><li>Optimize pricing strategies through AI-based dynamic pricing</li><li>Improve sales forecasting with AI-powered predictive analytics</li><li>Streamline inventory management using AI for demand forecasting</li><li>Enhance content creation with AI-generated copy and visuals</li><li>Implement AI-driven A/B testing for marketing campaigns</li><li>Improve lead scoring and qualification with AI algorithms</li><li>Enhance SEO with AI-powered keyword analysis and optimization</li><li>Automate email marketing campaigns using AI-driven personalization</li><li>Use AI to identify and target high-value customers</li><li>Implement AI-driven customer churn prediction and prevention</li><li>Enhance ad targeting and bidding strategies with AI</li><li>Automate social media management using AI-powered tools</li><li>Improve product recommendations with AI-driven algorithms</li><li>Implement AI-powered sentiment analysis for brand monitoring</li><li>Enhance user experience with AI-driven website optimization</li><li>Improve fraud detection and prevention with AI-based systems</li><li>Streamline supply chain management with AI-driven logistics</li><li>Use AI to optimize employee recruitment and retention</li><li>Automate repetitive tasks with AI-powered Robotic Process Automation (RPA)</li><li>Enhance CRM systems with AI-driven insights</li><li>Implement AI-driven speech recognition for call centers</li><li>Use AI to analyze and optimize sales funnels</li><li>Improve decision-making with AI-driven data analysis</li><li>Enhance product development with AI-driven trend analysis</li><li>Implement AI-driven competitor analysis</li><li>Improve cybersecurity with AI-powered threat detection</li><li>Streamline financial planning with AI-driven forecasting</li><li>Enhance business process optimization with AI-powered analytics</li><li>Implement AI-driven performance analysis for employee training</li><li>Improve customer retention with AI-driven loyalty programs</li><li>Enhance video marketing with AI-generated content</li><li>Implement AI-powered sentiment analysis for customer feedback</li><li>Streamline contract analysis and negotiation with AI-driven tools</li><li>Automate expense management with AI-powered systems</li><li>Improve customer onboarding with AI-driven automation</li><li>Enhance sales enablement with AI-powered training</li><li>Implement AI-driven upselling and cross-selling strategies</li><li>Improve knowledge management with AI-powered search and discovery</li><li>Enhance customer journey mapping with AI-driven analytics</li><li>Streamline document processing with AI-powered Optical Character Recognition (OCR)</li><li>Automate data entry with AI-driven tools</li><li>Implement AI-driven text analytics for customer reviews</li><li>Enhance event marketing with AI-driven attendee analysis</li><li>Automate appointment scheduling with AI-powered systems</li><li>Improve market research with AI-driven data collection and analysis</li><li>Enhance crisis management with AI-driven predictive analytics</li><li>Implement AI-driven workforce planning and scheduling</li><li>Improve payment processing with AI-powered fraud detection</li><li>Enhance talent acquisition with AI-driven candidate sourcing</li><li>Streamline regulatory compliance with AI-powered risk analysis</li><li>Implement AI-driven content curation for social media</li><li>Improve conversion rate optimization with AI-powered insights</li><li>Enhance influencer marketing with AI-driven influencer analysis</li><li>Automate account-based marketing with AI-driven targeting</li><li>Improve public relations with AI-powered sentiment analysis</li><li>Enhance employee productivity with AI-driven task management</li><li>Streamline project management with AI-powered resource allocation</li><li>Implement AI-driven location analytics for retail optimization</li><li>Improve customer satisfaction with AI-driven quality assurance</li><li>Enhance virtual events with AI-powered engagement tools</li><li>Automate employee onboarding with AI-driven processes</li><li>Implement AI-driven market segmentation for targeted marketing</li><li>Improve workplace safety with AI-powered risk analysis</li><li>Enhance product packaging design with AI-driven optimization</li><li>Streamline content moderation with AI-powered tools</li><li>Implement AI-driven anomaly detection for proactive issue resolution</li><li>Enhance mobile app development with AI-driven user behavior analysis</li><li>Improve customer experience with AI-powered personalization</li><li>Streamline business intelligence with AI-driven data visualization</li><li>Enhance online security with AI-powered authentication methods</li><li>Implement AI-driven natural language processing for customer interactions</li><li>Automate invoice processing with AI-powered tools</li><li>Enhance user interface design with AI-driven testing and analysis</li><li>Improve risk management with AI-powered predictive modeling</li><li>Streamline license management with AI-driven compliance tools</li><li>Implement AI-driven network optimization for enhanced performance</li><li>Enhance customer support with AI-powered knowledge bases</li><li>Improve crisis communication with AI-driven message prioritization</li><li>Streamline facility management with AI-powered energy optimization</li><li>Implement AI-driven vehicle routing for efficient logistics</li><li>Enhance employee engagement with AI-driven performance analysis</li><li>Automate sales prospecting with AI-powered lead generation</li><li>Improve workplace collaboration with AI-driven communication tools</li><li>Enhance product lifecycle management with AI-driven analytics</li><li>Streamline vendor management with AI-powered contract analysis</li><li>Implement AI-driven patent analysis for intellectual property protection</li><li>Enhance social media advertising with AI-powered targeting</li><li>Automate customer profiling with AI-driven analytics</li><li>Improve manufacturing efficiency with AI-powered process optimization</li><li>Enhance employee wellness programs with AI-driven data analysis</li><li>Streamline IT operations with AI-powered monitoring and management</li><li>Implement AI-driven return on investment (ROI) analysis for marketing campaigns</li><li>Improve trade promotion management with AI-driven optimization</li><li>Enhance employee learning and development with AI-driven training platforms</li><li>Automate data cleansing and normalization with AI-powered tools</li><li>Implement AI-driven sentiment analysis for brand reputation management</li><li>Improve retail merchandising with AI-driven store layout optimization</li><li>Enhance sustainability initiatives with AI-driven resource management</li></ol>	aiml futurology
r$?flD@O_A	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	CSRF &amp; JWT	"<b><ul><li><div>Cross Site Request Forgery (CSRF)</div></li><ul><li><div><span style=""font-weight: 400;"">Forces end user to execute unwanted actions on a web action in which they’re currently authenticated</span></div></li><li><div><span style=""font-weight: 400;"">Target state-changing requests, not theft of data, since attackers can’t see the response to a forged request</span></div></li><li><div><a href=""https://owasp.org/www-community/attacks/csrf#""><span style=""font-weight: 400;"">Preventative Measures and WebMD for em here</span></a></div></li></ul></ul></b>"	cybersecurity fullstack webdev
D,dT-}5)`K	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Web Accessibility Fundamentals	"<ul><li><span style=""font-weight: 600;"">WCAG (Web Content Accessibility Guidelines)</span>: These are internationally&nbsp;recognized guidelines that explain how to make web content more accessible to people with disabilities, covering aspects like perceivability, operability, understandability, and robustness.</li><li><span style=""font-weight: 600;"">ARIA (Accessible Rich Internet Applications)</span>: This is a set&nbsp;of special attributes you can add to your HTML elements to help make web content and applications (especially those with dynamic content and&nbsp;complex user interface controls) more accessible, particularly to screen readers.<br></li><li><span style=""font-weight: 600;"">Screen-reader testing tools</span>: These are applications&nbsp;(like NVDA, VoiceOver, or JAWS) that read out the content of a screen, which developers use to test how&nbsp;users with visual impairments will experience their website.<br></li><li><span style=""font-weight: 600;"">Lighthouse audits</span>: This is an open-source, automated tool from Google that you can run on any webpage to get reports on its performance, accessibility, SEO, and more, providing actionable insights for improvement.<br></li><li><span style=""font-weight: 600;"">Bundle optimization</span>: This is the process of analyzing and reducing the size&nbsp;of the code and asset files (your ""bundle"") that your website sends to users' browsers, aiming to make your&nbsp;site load faster.<br></li></ul><div><br></div><div>Automated testing tools</div><div><ol><li><span style=""font-weight: 600;"">Axe DevTools</span>: This is a browser extension and a set of tools that&nbsp;can automatically scan your website for accessibility issues based on WCAG standards. It's a great first pass. Many developers&nbsp;integrate Axe into their CI/CD pipelines.</li><ul><li><span style=""font-weight: 600;"">Lighthouse</span>: As mentioned, Lighthouse (available in Chrome DevTools&nbsp;or as a CLI tool) includes an accessibility audit. It's a good way to get a quick overview.</li></ul><ul><li><span style=""font-weight: 600;"">ESLint Accessibility Plugins</span>: For Next.js/React projects, you can use ESLint plugins like&nbsp;eslint-plugin-jsx-a11y. This plugin helps you write more accessible JSX by enforcing ARIA attributes&nbsp;and other best practices directly in your code editor.</li></ul></ol></div>"	dataflow formula fullstack webdev
"b>Hr?Ugc#i"	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Linear.app	ctrl+K brings up command menu<br>? for keyboard commands<br>Projects &gt; Milestones &gt; Issues &gt; Sub-issues	fullstack webdev
lF;P{Pw6BV	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	💱Session Management: Websockets, WebRTC	"<br>Traditional approach to session management: cookie-based, server-side sessions<br>Submitted uname and password are validated by the server which creates and responds with a session ID<br>This session ID is placed into the cookie jar, a store of info the server will revalidate with every new HTTP request<br>Thus, cookies are essentially state for sessions<br>CSRF Cross-Site Request Forgery is the main vuln of this, since a malicious third party could send requests from a user's computer to a site they aren't accessing<br>Risk of this is very low with modern frameworks like django, rails<br>Storing all this in state on the server can cause horizontal scaling issues, so Token Auth was invented with its own drawbacks<br>Client still sends details, but server creates a Java Web Token using a server-side private key and stores it in the client's local memory<br>On future requests, this JWT will be added to the authorization header, prefixed by `Bearer &lt;token&gt;`<br>Server only needs to validate signature, no need to run a query/lookup to find the session, much better for distributed cloud sessions<br>JWTs can be difficult to validate, easy to hijack, and can't be used to authenticate a user in the background on the server.<br>BOTTOM LINE: Sessions' authentication state is managed on the server, while Tokens' authentication state is managed on the client<br><br>Websocket<br>_____________________<br><ul><li>Real-time, two-way client-server connection</li><li>Maintaining a leaderboard requires many of these</li><li>Polling for info is insufficient to maintain</li><li>Client requests an open bidirectional, low-latency TCP-IP connection from the server - a ""Full Duplex"" connection like a phone line</li><li>If server approves, it will complete the handshake by sending a 101 Switching Protocols HTTP response</li><li>When one participant (usually client) drops off, both parties reallocate their TCP-IP allocated resources</li><li>Websocket handles LISTENING and SENDING, both of which functions are built by default into Nodejs</li></ul><br><br>WebRTC<br>_________________________<br>Realtime p2p browser-to-browser connection capable of streaming audio/video, no third-party server or native app<br>Party 1 creates an offer asking another peer to connect, in the form of an SDP (Session Description Protocol)<br>Describes connection spec - video codec, timing, etc - is then stored in an SDP server and awaits an SDP peer to read the request and make an SDP answer object, which it submits to the same server<br>The third-party signaling server, eg firebase, allows the two parties to transmit connection data without overseeing/managing the content which flows between them<br>Typically firewalls, changing IP addresses would make this difficult, but there is a standard ICE (Interactive Connectivity Establishment) which helps clients coordinate discovery of their public IP addresses<br>WebRTC client will set this up with a STUN (Session Traversal Utilities for Nat) Server which determines which of the available addresses are best"	dataflow fullstack webdev
v,R_el&tEK	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	GoLang	"<ul><li>Unlike JS, Go is a compiled language and when you write Go, it can be optimized into machine code for all chips</li><li>In contrast C# and Java are compiled into Byte code which runs on a virtual machine</li><li>Go also uses automatic memory management via garbage collection, making it broadly easier to work with than C++ or Rust</li></ul>"	fullstack language webdev
I<-g!l9vl1	Basic	CompSci (AIML/Web3/Math/Logic/Tech)	Yarn Package Manager	"<ul><li><b>yarn install // yarn add // yarn remove</b></li><li><b>yarn set version stable</b></li><li><b>yarn up</b>&nbsp;to update all packages in package.lock to their latest specified ranges in package.json</li><ul><li>re-resolves all dependencies based on package.json</li><li>likely resolving vulnerabilities introduced by package and lockfile desync</li><li>fetches the correct package versions into .yarn/cache</li><li>can also&nbsp;<b>yarn up &lt;pkg&gt;</b></li></ul><li><b>yarn why &lt;pkg&gt;</b>&nbsp;shows which packages depend on &lt;pkg&gt; to be in the project</li><li><b>yarn npm audit</b>&nbsp;scans project's dependencies and reports any known security vulnerabilities</li><li>Adding a ""resolutions"" field to package.json will override default (possibly problematic) dependency versions set by other packages.</li><li><b>yarn explain peer requirements</b><br></li></ul><div><br></div><div><ol><li><a href=""https://classic.yarnpkg.com/lang/en/docs/selective-version-resolutions/"">https://classic.yarnpkg.com/lang/en/docs/selective-version-resolutions/</a><br></li></ol></div>"	dataflow fullstack webdev
