# Docker Compose will automatically load variables from a .env file in the project root.
# Copy this file to .env and fill in your actual values.

# Backend Application Settings
APP_VERSION=0.1.0

# Neo4j Connection (ensure these match your docker-compose.yml service if applicable)
# For local docker-compose setup, the default user is often neo4j.
NEO4J_URI=bolt://neo4j:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=your_neo4j_password # Change this!

# PostgreSQL Connection (ensure these match your docker-compose.yml service when added)
# Example DSN format: postgresql+psycopg2://user:password@host:port/database
# For local docker-compose, host would be the service name (e.g., 'postgres')
POSTGRES_USER=your_postgres_user
POSTGRES_PASSWORD=your_postgres_password # Change this!
POSTGRES_DB=bmx_db
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
#POSTGRES_DSN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# Google Gemini API Key (for future LLM integration)
GEMINI_API_KEY=YOUR_GEMINI_API_KEY_HERE

# Add any other environment variables required by your application(s) below
