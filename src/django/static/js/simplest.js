var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
document.addEventListener("DOMContentLoaded", function () {
    var contentDiv = document.getElementById("content");
    // Create and append elements to the content div
    var heading = document.createElement("h1");
    heading.textContent = "Hello, TypeScript!";
    if (contentDiv) {
        contentDiv.appendChild(heading);
    }
    var paragraph = document.createElement("p");
    paragraph.textContent = "This content is generated by TypeScript.";
    if (contentDiv) {
        contentDiv.appendChild(paragraph);
    }
    // You can further manipulate the DOM as needed
});
export default function Home() {
    alert("Alert works");
    console.log("Console commands work");
    return (_jsx("div", __assign({ style: {
            display: "flex",
            justifyContent: "space-evenly",
            marginTop: "20px",
        } }, { children: _jsx("button", __assign({ onClick: function () { alert('Hola'); } }, { children: "It works!" })) })));
}
//# sourceMappingURL=simplest.js.map