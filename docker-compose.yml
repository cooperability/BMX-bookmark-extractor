# BMX (BookMark eXtractor) Development Environment
# For detailed setup and configuration info, see:
# - README.md (quick setup guide)
# - backend/README.md (FastAPI development)
# - frontend/README.md (SvelteKit development)
# - .devcontainer/README.md (dev container setup)

services:
  backend:
    build:
      context: ./backend # Specifies the build context path for the backend service
      dockerfile: Dockerfile # Specifies the Dockerfile within that context
    ports:
      - "8000:8000" # Maps port 8000 of the host to port 8000 of the container
    deploy:
      resources:
        limits:
          memory: 6G
          cpus: '4.0'
        reservations:
          memory: 2G
    volumes:
      # Mounts the entire project root to /project in the container.
      # This is primarily used by pre-commit running inside the container to access the .git directory.
      - .:/project
      # Mounts the backend source code for live reloading during development.
      - ./backend/src:/app/src
      # Mounts helper scripts into the backend container for easy execution.
      - ./scripts:/app/scripts
      # Persist NLP models between container restarts
      - nlp_models:/home/appuser/.local/share/spacy
      - nltk_data:/home/appuser/nltk_data
    environment:
      APP_VERSION: 0.1.0
      NEO4J_URI: "bolt://neo4j:7687"
      NEO4J_USER: "neo4j"
      NEO4J_PASSWORD: "bmxpassword"
      # NEO4J_URI, NEO4J_USER, NEO4J_PASSWORD, etc., should be loaded from .env file automatically by Docker Compose
      # Alternatively, define them here or use `env_file: .env`
    depends_on:
      - neo4j

  frontend:
    build:
      context: ./frontend # Specifies the build context path for the frontend service
      dockerfile: Dockerfile # Specifies the Dockerfile within that context
    ports:
      - "3000:3000" # Maps port 3000 of the host to port 3000 of the container
    volumes:
      # Mounts the frontend source code for live reloading during development.
      - ./frontend:/app
      # Anonymous volume to persist node_modules installed in the container.
      # Prevents the host's node_modules (if any) from overwriting the container's version,
      # and avoids issues if host OS is different from container OS (e.g. Windows host, Linux container).
      - /app/node_modules
    environment:
      DATABASE_URL: "postgresql://placeholderuser:placeholderpass@db-host:5432/placeholderdb"
    # Optional: If frontend makes build-time or critical calls to backend.
    # For typical dev where frontend calls API at runtime, not strictly needed.
    depends_on:
      - backend

  neo4j:
    image: neo4j:5.15-community
    ports:
      - "7474:7474" # Neo4j Browser HTTP
      - "7687:7687" # Bolt protocol
    environment:
      NEO4J_AUTH: "neo4j/bmxpassword"
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4J_dbms_security_procedures_allowlist: "apoc.*"
      # For MVP, we'll use default storage. For production, add volume mounts
    volumes:
      # For MVP development, we can use ephemeral storage
      # For persistence: - ./neo4j/data:/data
      # For persistence: - ./neo4j/logs:/logs
      - neo4j_data:/data
      - neo4j_logs:/logs

volumes:
  neo4j_data:
  neo4j_logs:
  nlp_models:
  nltk_data:
