#!/bin/bash
# Build all services defined in docker-compose.yml

# Get the directory where the script is located to find the project root
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")" # Assumes scripts/ is one level down from project root

COMPOSE_FILE="$PROJECT_ROOT/docker-compose.yml"

if [ ! -f "$COMPOSE_FILE" ]; then
    echo "Error: docker-compose.yml not found at $COMPOSE_FILE"
    exit 1
fi

# Change to the project root directory to ensure contexts in docker-compose.yml are resolved correctly
echo "Changing to project root: $PROJECT_ROOT"
cd "$PROJECT_ROOT" || exit

echo "Building all services using compose file: $COMPOSE_FILE (from $(pwd))"
# Build all services defined in the specified docker-compose.yml
# "$@" allows passing additional arguments to 'docker compose build' if needed (e.g., --no-cache, or specific service names)
docker compose -f "$COMPOSE_FILE" build "$@"
